{"id": "17fa7245-189a-49fd-8bf8-a757cfa08dfc", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, is it True or False that passenger p3 enters at floor f2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, is it True or False that passenger p3 enters at floor f2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "1bb973d5-7e36-42b1-91ce-75ef0a9dcae8", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, is it True or False that destination of passenger p0 is not floor f0, passenger p0 does not enter at floor f2, destination of passenger p0 is not floor f3, passenger p0 does not enter at floor f3, destination of passenger p0 is not floor f6, passenger p0 does not enter at floor f4, destination of passenger p0 is not floor f4, passenger p0 does not enter at floor f5, passenger p0 does not enter at floor f6 and destination of passenger p0 is not floor f5?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, is it True or False that destination of passenger p0 is not floor f0, passenger p0 does not enter at floor f2, destination of passenger p0 is not floor f3, passenger p0 does not enter at floor f3, destination of passenger p0 is not floor f6, passenger p0 does not enter at floor f4, destination of passenger p0 is not floor f4, passenger p0 does not enter at floor f5, passenger p0 does not enter at floor f6 and destination of passenger p0 is not floor f5?\n\n[ANSWER]:\n", "response": "True"}
{"id": "d02f04ae-fd26-441e-ac1e-66188a9be9aa", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, list all objects associated with type passenger. Write None if there are none.", "answer": "p0, p1, p2, p3, p4, p5, p6, p7, p8 and p9", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, list all objects associated with type passenger. Write None if there are none.\n\n[ANSWER]:\n", "response": "p0, p1, p2, p3, p4, p5, p6, p7, p8, p9"}
{"id": "3acb6a20-f411-4225-971c-65b08818d7a1", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, what is the object type for p8, p4, p5, p9 and p2. Write None if there are none.", "answer": "passenger", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, what is the object type for p8, p4, p5, p9 and p2. Write None if there are none.\n\n[ANSWER]:\n", "response": "p8: passenger\np4: passenger\np5: passenger\np9: passenger\np2: passenger"}
{"id": "5fbc9d77-cf55-4ed6-bfa2-8856363b0b82", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, is it True or False that destination of passenger p5 is floor f3, passenger p6 enters at floor f3 and floor f6 is above floor f3?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, is it True or False that destination of passenger p5 is floor f3, passenger p6 enters at floor f3 and floor f6 is above floor f3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "3b00ae31-40cb-4836-b1a0-27de3e82f92a", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, is it True or False that destination of passenger p1 is not floor f3, passenger p1 does not enter at floor f1, passenger p1 does not enter at floor f3, passenger p1 is not served, destination of passenger p1 is not floor f6, passenger p1 does not enter at floor f6, passenger p1 does not enter at floor f4, passenger p1 does not enter at floor f2, destination of passenger p1 is not floor f0 and destination of passenger p1 is not floor f4?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, is it True or False that destination of passenger p1 is not floor f3, passenger p1 does not enter at floor f1, passenger p1 does not enter at floor f3, passenger p1 is not served, destination of passenger p1 is not floor f6, passenger p1 does not enter at floor f6, passenger p1 does not enter at floor f4, passenger p1 does not enter at floor f2, destination of passenger p1 is not floor f0 and destination of passenger p1 is not floor f4?\n\n[ANSWER]:\n", "response": "True"}
{"id": "b2e44c94-e036-4bef-b92e-c61b726eca62", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, list all objects associated with type floor. Write None if there are none.", "answer": "f0, f1, f2, f3, f4, f5 and f6", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, list all objects associated with type floor. Write None if there are none.\n\n[ANSWER]:\n", "response": "f0, f1"}
{"id": "1060c032-fdcd-4877-8b1a-b6896adcef74", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, what is the object type for f1, f5, f6, f2, f4 and f3. Write None if there are none.", "answer": "floor", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, what is the object type for f1, f5, f6, f2, f4 and f3. Write None if there are none.\n\n[ANSWER]:\n", "response": "f1: BoardingArea\nf5: Floor\nf6: Floor\nf2: Floor\nf4: BoardingArea\nf3: BoardingArea"}
{"id": "198cce5e-aeea-4bb4-b34f-ae34546bc0e1", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, is it True or False that floor f6 is above floor f2, passenger p2 enters at floor f2, floor f2 is above floor f0, floor f5 is above floor f2, destination of passenger p1 is floor f2 and passenger p3 enters at floor f2?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, is it True or False that floor f6 is above floor f2, passenger p2 enters at floor f2, floor f2 is above floor f0, floor f5 is above floor f2, destination of passenger p1 is floor f2 and passenger p3 enters at floor f2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "1192aa7f-8390-4883-ba4a-2f0a2dca8412", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, is it True or False that destination of passenger p2 is not floor f3, destination of passenger p0 is not floor f3, passenger p6 does not enter at floor f3, floor f1 is not above floor f3, passenger p3 does not enter at floor f3, floor f3 is not above floor f6 and passenger p8 does not enter at floor f3?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, is it True or False that destination of passenger p2 is not floor f3, destination of passenger p0 is not floor f3, passenger p6 does not enter at floor f3, floor f1 is not above floor f3, passenger p3 does not enter at floor f3, floor f3 is not above floor f6 and passenger p8 does not enter at floor f3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "bcc198e4-dc8e-4c7e-a305-1bd4076c82ed", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, list all objects associated with type passenger. Write None if there are none.", "answer": "p0, p1, p2, p3, p4, p5, p6, p7, p8 and p9", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, list all objects associated with type passenger. Write None if there are none.\n\n[ANSWER]:\n", "response": "p0, p1, p2, p4, p5, p6, p7, p8, p9"}
{"id": "ca5216eb-3a42-428d-ab89-54231c5e8ba1", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, what is the object type for p5, p4 and p2. Write None if there are none.", "answer": "passenger", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, what is the object type for p5, p4 and p2. Write None if there are none.\n\n[ANSWER]:\n", "response": "p5: boarded\np4: boarded\np2: boarded"}
{"id": "63f9bf0e-698e-47f6-97fc-a851b2676485", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, is it True or False that floor f3 is above floor f1, passenger p8 enters at floor f3, floor f3 is above floor f2, destination of passenger p5 is floor f3, destination of passenger p7 is floor f3, destination of passenger p4 is floor f3 and floor f6 is above floor f3?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, is it True or False that floor f3 is above floor f1, passenger p8 enters at floor f3, floor f3 is above floor f2, destination of passenger p5 is floor f3, destination of passenger p7 is floor f3, destination of passenger p4 is floor f3 and floor f6 is above floor f3?\n\n[ANSWER]:\n", "response": "False"}
{"id": "45c8ba97-7ee7-4abc-8a72-17a6642f1bad", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, is it True or False that destination of passenger p2 is not floor f3, passenger p2 does not enter at floor f6, destination of passenger p2 is not floor f5, passenger p2 does not enter at floor f4, passenger p2 is not served, passenger p2 does not enter at floor f1 and passenger p2 does not enter at floor f3?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, is it True or False that destination of passenger p2 is not floor f3, passenger p2 does not enter at floor f6, destination of passenger p2 is not floor f5, passenger p2 does not enter at floor f4, passenger p2 is not served, passenger p2 does not enter at floor f1 and passenger p2 does not enter at floor f3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "4da554ec-c888-4fa7-8ad3-74c00942a402", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, list all objects associated with type floor. Write None if there are none.", "answer": "f0, f1, f2, f3, f4, f5 and f6", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, list all objects associated with type floor. Write None if there are none.\n\n[ANSWER]:\n", "response": "f0\nf1\nf2\nf3\nf4\nf5\nf6"}
{"id": "a8d24d4e-0d75-4054-b86d-570590014d2f", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, what is the object type for p8. Write None if there are none.", "answer": "passenger", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, what is the object type for p8. Write None if there are none.\n\n[ANSWER]:\n", "response": "Passenger"}
{"id": "a9b649ca-8e68-4b44-825a-fd498cec07a4", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, is it True or False that floor f2 is above floor f1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, is it True or False that floor f2 is above floor f1?\n\n[ANSWER]:\n", "response": "True"}
{"id": "09796773-1832-4be4-a55a-04a805fcf7dc", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, is it True or False that passenger p7 does not enter at floor f2, destination of passenger p7 is not floor f4, passenger p7 does not enter at floor f3, passenger p7 does not enter at floor f1, destination of passenger p7 is not floor f2, passenger p7 does not enter at floor f4, passenger p7 is not boarded and destination of passenger p7 is not floor f0?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, is it True or False that passenger p7 does not enter at floor f2, destination of passenger p7 is not floor f4, passenger p7 does not enter at floor f3, passenger p7 does not enter at floor f1, destination of passenger p7 is not floor f2, passenger p7 does not enter at floor f4, passenger p7 is not boarded and destination of passenger p7 is not floor f0?\n\n[ANSWER]:\n", "response": "True"}
{"id": "3810fb6b-25a7-41d9-86a2-914174f61b0f", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, list all objects associated with type passenger. Write None if there are none.", "answer": "p0, p1, p2, p3, p4, p5, p6, p7, p8 and p9", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, list all objects associated with type passenger. Write None if there are none.\n\n[ANSWER]:\n", "response": "p4, p5, p6, p8"}
{"id": "74d7c64e-982b-4c73-82c9-473de0331016", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, what is the object type for f0. Write None if there are none.", "answer": "floor", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, what is the object type for f0. Write None if there are none.\n\n[ANSWER]:\n", "response": "Floor"}
{"id": "83e9dc39-fae0-4c10-8005-4f948d002eda", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, is it True or False that destination of passenger p6 is floor f3?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, is it True or False that destination of passenger p6 is floor f3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "3ce86b02-c5c9-4a3e-86a2-09ff312208d3", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, is it True or False that passenger p8 does not enter at floor f2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, is it True or False that passenger p8 does not enter at floor f2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "62bb8f33-0af7-49dd-a30e-29777ac6e24a", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, are all of the following properties of the state True or False: destination of passenger p2 is floor f2, passenger p6 is boarded, lift is at floor f1, passenger p3 enters at floor f1, passenger p6 enters at floor f6, destination of passenger p8 is floor f3, destination of passenger p3 is floor f5, passenger p7 is served, passenger p5 enters at floor f3, passenger p7 enters at floor f4, floor f4 is above floor f6, destination of passenger p5 is floor f6, destination of passenger p7 is floor f1, passenger p2 enters at floor f1, destination of passenger p0 is floor f1, destination of passenger p2 is floor f3, passenger p3 enters at floor f4, passenger p3 is served, passenger p5 is served, passenger p4 is served, passenger p0 enters at floor f6, destination of passenger p5 is floor f4, destination of passenger p3 is floor f1, floor f3 is above floor f4, passenger p8 enters at floor f4, passenger p4 enters at floor f6, destination of passenger p4 is floor f0, destination of passenger p6 is floor f1, floor f1 is above floor f4, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2 and floor f6 is above floor f3?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, are all of the following properties of the state True or False: destination of passenger p2 is floor f2, passenger p6 is boarded, lift is at floor f1, passenger p3 enters at floor f1, passenger p6 enters at floor f6, destination of passenger p8 is floor f3, destination of passenger p3 is floor f5, passenger p7 is served, passenger p5 enters at floor f3, passenger p7 enters at floor f4, floor f4 is above floor f6, destination of passenger p5 is floor f6, destination of passenger p7 is floor f1, passenger p2 enters at floor f1, destination of passenger p0 is floor f1, destination of passenger p2 is floor f3, passenger p3 enters at floor f4, passenger p3 is served, passenger p5 is served, passenger p4 is served, passenger p0 enters at floor f6, destination of passenger p5 is floor f4, destination of passenger p3 is floor f1, floor f3 is above floor f4, passenger p8 enters at floor f4, passenger p4 enters at floor f6, destination of passenger p4 is floor f0, destination of passenger p6 is floor f1, floor f1 is above floor f4, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2 and floor f6 is above floor f3?\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "41840e3a-6d07-4673-bb28-cd716b472b7c", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, are all of the following properties of the state True or False: passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p3 is not served, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p5 is not boarded, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p1 is not boarded, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, passenger p4 is not boarded, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, passenger p2 is not boarded, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, passenger p9 is not boarded, lift is not at floor f5, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p6 is not boarded, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, are all of the following properties of the state True or False: passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p3 is not served, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p5 is not boarded, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p1 is not boarded, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, passenger p4 is not boarded, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, passenger p2 is not boarded, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, passenger p9 is not boarded, lift is not at floor f5, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p6 is not boarded, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "867b3ea8-d075-46ee-b547-01b9aadfe93e", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, list all valid properties of the state that involve p5. Write None if there are none.", "answer": "destination of passenger p5 is floor f3 and passenger p5 enters at floor f5", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, list all valid properties of the state that involve p5. Write None if there are none.\n\n[ANSWER]:\n", "response": "- passenger p5 is at floor f5\n- passenger p5 is boarded"}
{"id": "7ad7e69d-fd6b-4a7a-a709-19964270f082", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, list all valid properties of the state that involve negations that involve f1. Write None if there are none.", "answer": "passenger p4 does not enter at floor f1, destination of passenger p0 is not floor f1, destination of passenger p6 is not floor f1, floor f1 is not above floor f5, passenger p9 does not enter at floor f1, destination of passenger p1 is not floor f1, destination of passenger p3 is not floor f1, floor f1 is not above floor f2, passenger p5 does not enter at floor f1, floor f0 is not above floor f1, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f1, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, destination of passenger p5 is not floor f1, passenger p7 does not enter at floor f1, passenger p3 does not enter at floor f1, passenger p2 does not enter at floor f1, destination of passenger p2 is not floor f1, floor f1 is not above floor f6 and destination of passenger p4 is not floor f1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, list all valid properties of the state that involve negations that involve f1. Write None if there are none.\n\n[ANSWER]:\n", "response": "- passenger p0 is not on floor f1\n- passenger p1 is not on floor f1\n- passenger p2 is not on floor f1\n- passenger p3 is not on floor f1\n- passenger p4 is not on floor f1\n- passenger p5 is not on floor f1\n- passenger p6 is not on floor f1\n- passenger p7 is not on floor f1\n- passenger p8 is not on floor f1\n- passenger p9 is not on floor f1"}
{"id": "ebc06219-e8e3-4bf6-86ca-986343fe2f09", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, is it True or False that passenger p6 enters at floor f5?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, is it True or False that passenger p6 enters at floor f5?\n\n[ANSWER]:\n", "response": "False"}
{"id": "f88f810f-8f27-46be-a5f9-3cbc7102dc77", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, is it True or False that destination of passenger p2 is not floor f5?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, is it True or False that destination of passenger p2 is not floor f5?\n\n[ANSWER]:\n", "response": "True"}
{"id": "dd7d192b-9364-4815-9a7e-551272e9205b", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, are all of the following properties of the state True or False: passenger p5 enters at floor f0, floor f2 is above floor f6, destination of passenger p7 is floor f0, passenger p3 enters at floor f6, passenger p6 enters at floor f4, passenger p8 enters at floor f0, destination of passenger p9 is floor f0, destination of passenger p5 is floor f4, passenger p5 enters at floor f2, destination of passenger p6 is floor f5, passenger p6 is served, passenger p2 is served, passenger p4 enters at floor f2, passenger p7 enters at floor f4, destination of passenger p5 is floor f0, destination of passenger p0 is floor f2, floor f3 is above floor f6, passenger p2 is boarded, destination of passenger p8 is floor f6, lift is at floor f2, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p9 is boarded, passenger p3 enters at floor f2, floor f6 is above floor f3, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, passenger p1 is boarded, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3 and floor f4 is above floor f0?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, are all of the following properties of the state True or False: passenger p5 enters at floor f0, floor f2 is above floor f6, destination of passenger p7 is floor f0, passenger p3 enters at floor f6, passenger p6 enters at floor f4, passenger p8 enters at floor f0, destination of passenger p9 is floor f0, destination of passenger p5 is floor f4, passenger p5 enters at floor f2, destination of passenger p6 is floor f5, passenger p6 is served, passenger p2 is served, passenger p4 enters at floor f2, passenger p7 enters at floor f4, destination of passenger p5 is floor f0, destination of passenger p0 is floor f2, floor f3 is above floor f6, passenger p2 is boarded, destination of passenger p8 is floor f6, lift is at floor f2, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p9 is boarded, passenger p3 enters at floor f2, floor f6 is above floor f3, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, passenger p1 is boarded, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3 and floor f4 is above floor f0?\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "f332c266-f790-4298-b25a-157685c87e34", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, are all of the following properties of the state True or False: floor f4 is not above floor f0, passenger p1 is not boarded, passenger p7 does not enter at floor f5, floor f4 is not above floor f3, destination of passenger p9 is not floor f5, floor f5 is not above floor f0, passenger p9 does not enter at floor f0, destination of passenger p1 is not floor f2, floor f3 is not above floor f1, passenger p0 does not enter at floor f0, floor f5 is not above floor f3, lift is not at floor f1, floor f6 is not above floor f4, passenger p1 does not enter at floor f0, passenger p6 does not enter at floor f1, passenger p3 does not enter at floor f2, floor f6 is not above floor f0, passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, lift is not at floor f0, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p3 is not served, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p5 is not boarded, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, passenger p4 is not boarded, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, passenger p2 is not boarded, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, lift is not at floor f5, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5 and destination of passenger p5 is not floor f5?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, are all of the following properties of the state True or False: floor f4 is not above floor f0, passenger p1 is not boarded, passenger p7 does not enter at floor f5, floor f4 is not above floor f3, destination of passenger p9 is not floor f5, floor f5 is not above floor f0, passenger p9 does not enter at floor f0, destination of passenger p1 is not floor f2, floor f3 is not above floor f1, passenger p0 does not enter at floor f0, floor f5 is not above floor f3, lift is not at floor f1, floor f6 is not above floor f4, passenger p1 does not enter at floor f0, passenger p6 does not enter at floor f1, passenger p3 does not enter at floor f2, floor f6 is not above floor f0, passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, lift is not at floor f0, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p3 is not served, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p5 is not boarded, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, passenger p4 is not boarded, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, passenger p2 is not boarded, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, lift is not at floor f5, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5 and destination of passenger p5 is not floor f5?\n\n[ANSWER]:\n", "response": "True"}
{"id": "2f2a40b2-c60c-42bb-a4cb-8d4e29d46ad7", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, list all valid properties of the state that involve p0. Write None if there are none.", "answer": "destination of passenger p0 is floor f5, passenger p0 enters at floor f0 and passenger p0 is boarded", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, list all valid properties of the state that involve p0. Write None if there are none.\n\n[ANSWER]:\n", "response": "- passenger p0 is boarded"}
{"id": "50577c83-1275-45e8-a248-fe317d01788c", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve p7. Write None if there are none.", "answer": "passenger p7 is not boarded, destination of passenger p7 is not floor f6, destination of passenger p7 is not floor f2, passenger p7 does not enter at floor f3, passenger p7 does not enter at floor f2, passenger p7 does not enter at floor f6, passenger p7 does not enter at floor f4, destination of passenger p7 is not floor f5, destination of passenger p7 is not floor f1, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p7 is not served and passenger p7 does not enter at floor f0", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve p7. Write None if there are none.\n\n[ANSWER]:\n", "response": "0lognese"}
{"id": "f1ddf799-09e9-4d1e-a111-0228f03634fe", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, is it True or False that destination of passenger p2 is floor f4?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, is it True or False that destination of passenger p2 is floor f4?\n\n[ANSWER]:\n", "response": "False"}
{"id": "6c881c92-7517-4ccb-aab9-6e51732601ed", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, is it True or False that destination of passenger p1 is not floor f5?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, is it True or False that destination of passenger p1 is not floor f5?\n\n[ANSWER]:\n", "response": "True"}
{"id": "62c6ed98-bcf5-4cc2-970a-f3d955739dd8", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, are all of the following properties of the state True or False: passenger p5 enters at floor f3, passenger p9 enters at floor f5, passenger p4 is served, floor f1 is above floor f5, floor f0 is above floor f3, destination of passenger p1 is floor f4, destination of passenger p7 is floor f6, passenger p4 is boarded, passenger p5 enters at floor f1, destination of passenger p9 is floor f0, passenger p3 enters at floor f4, passenger p7 enters at floor f3, destination of passenger p1 is floor f1, floor f5 is above floor f6, passenger p8 enters at floor f5, destination of passenger p5 is floor f4, passenger p1 is served, lift is at floor f2, passenger p6 enters at floor f3, passenger p7 enters at floor f2, passenger p4 enters at floor f3, passenger p3 enters at floor f3, passenger p5 enters at floor f2, lift is at floor f3, destination of passenger p1 is floor f6, destination of passenger p2 is floor f3, passenger p7 is served, passenger p1 enters at floor f6, destination of passenger p9 is floor f1, destination of passenger p5 is floor f6, passenger p3 enters at floor f1, passenger p2 enters at floor f3, passenger p5 is boarded, passenger p4 enters at floor f6, lift is at floor f5, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5 and passenger p9 is boarded?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, are all of the following properties of the state True or False: passenger p5 enters at floor f3, passenger p9 enters at floor f5, passenger p4 is served, floor f1 is above floor f5, floor f0 is above floor f3, destination of passenger p1 is floor f4, destination of passenger p7 is floor f6, passenger p4 is boarded, passenger p5 enters at floor f1, destination of passenger p9 is floor f0, passenger p3 enters at floor f4, passenger p7 enters at floor f3, destination of passenger p1 is floor f1, floor f5 is above floor f6, passenger p8 enters at floor f5, destination of passenger p5 is floor f4, passenger p1 is served, lift is at floor f2, passenger p6 enters at floor f3, passenger p7 enters at floor f2, passenger p4 enters at floor f3, passenger p3 enters at floor f3, passenger p5 enters at floor f2, lift is at floor f3, destination of passenger p1 is floor f6, destination of passenger p2 is floor f3, passenger p7 is served, passenger p1 enters at floor f6, destination of passenger p9 is floor f1, destination of passenger p5 is floor f6, passenger p3 enters at floor f1, passenger p2 enters at floor f3, passenger p5 is boarded, passenger p4 enters at floor f6, lift is at floor f5, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5 and passenger p9 is boarded?\n\n[ANSWER]:\n", "response": "Passenger p5 enters at floor f3: True\nPassenger p9 enters at floor f5: True\nPassenger p4 is served: False\nFloor f1 is above floor f5: False\nFloor f0 is above floor f3: False\nDestination of passenger p1 is floor f4: False\nDestination of passenger p7 is floor f6: False\nPassenger p4 is boarded: False\nPassenger p5 enters at floor f1: False\nDestination of passenger p9 is floor f0: True\nPassenger p3 enters at floor f4: False\nPassenger p7 enters at floor f3: False\nDestination of passenger p1 is floor f1: True\nFloor f5 is above floor f6: False\nPassenger p8 enters at floor f5: True\nDestination of passenger p5 is floor f4: False\nPassenger p1 is served: False\nLift is at floor f2: False\nPassenger p6 enters at floor f3: True\nPassenger p7 enters at floor f2: False\nPassenger p4 enters at floor f3: False\nPassenger p3 enters at floor f3: False\nPassenger p5 enters at floor f2: True\nLift is at floor f3: True\nDestination of passenger p1 is floor f6: True\nDestination of passenger p2 is floor f3: False\nPassenger p7 is served: True\nPassenger p1 enters at floor f6: True\nDestination of passenger p9 is floor f1: True\nDestination of passenger p5 is floor f6: True\nPassenger p3 enters at floor f1: True\nPassenger p2 enters at floor f3: False\nPassenger p5 is boarded: False\nPassenger p4 enters at floor f6: True\nLift is at floor f5: True\nDestination of passenger p3 is floor f0: True\nDestination of passenger p2 is floor f6: True\nDestination of passenger p4 is floor f3: True\nFloor f1 is above floor f0: True\nFloor f2 is above floor f1: True\nFloor f6 is above floor f5: True\nFloor f6 is above floor f1: True\nPassenger p7 enters at floor f5: False\nPassenger p4 enters at floor f4: True\nFloor f5 is above floor f4: True\nDestination of passenger p5 is floor f3: True\nPassenger p5 enters at floor f5: True\nPassenger p9 is boarded: True"}
{"id": "e6c11e49-d692-4eba-98ba-9bad67f1ca23", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, are all of the following properties of the state True or False: passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p5 is not boarded, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, passenger p4 is not boarded, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, lift is not at floor f5, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, are all of the following properties of the state True or False: passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p5 is not boarded, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, passenger p4 is not boarded, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, lift is not at floor f5, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "6c20e33c-2afa-44ae-9ce8-2f0be1aa9528", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, list all valid properties of the state that involve p8. Write None if there are none.", "answer": "passenger p8 enters at floor f6 and destination of passenger p8 is floor f2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, list all valid properties of the state that involve p8. Write None if there are none.\n\n[ANSWER]:\n", "response": "passenger p8 is at floor f6"}
{"id": "7fafa996-aed3-4675-8935-e5232725fc6b", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, list all valid properties of the state that involve negations that involve f5. Write None if there are none.", "answer": "destination of passenger p2 is not floor f5, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, floor f2 is not above floor f5, floor f1 is not above floor f5, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, destination of passenger p6 is not floor f5, passenger p1 does not enter at floor f5, destination of passenger p8 is not floor f5, passenger p4 does not enter at floor f5, destination of passenger p3 is not floor f5, destination of passenger p7 is not floor f5, passenger p9 does not enter at floor f5, lift is not at floor f5, destination of passenger p4 is not floor f5, passenger p3 does not enter at floor f5, floor f0 is not above floor f5, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, passenger p6 does not enter at floor f5, passenger p2 does not enter at floor f5 and floor f5 is not above floor f6", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, list all valid properties of the state that involve negations that involve f5. Write None if there are none.\n\n[ANSWER]:\n", "response": "- passenger p7 is not on floor f5\n- passenger p4 is not on floor f5\n- passenger p5 is not on floor f5\n- passenger p0 is not on floor f5\n- passenger p1 is not on floor f5\n- passenger p9 is not on floor f5\n- passenger p6 is not on floor f5\n- passenger p2 is not on floor f5\n- passenger p8 is not on floor f5"}
{"id": "eff44b6a-bf2f-4da8-b9c5-deba0c9669c5", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, is it True or False that destination of passenger p2 is floor f6?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, is it True or False that destination of passenger p2 is floor f6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "dd9133c7-9e3c-4b6f-a3ec-82384807f311", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, is it True or False that passenger p0 does not enter at floor f0?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, is it True or False that passenger p0 does not enter at floor f0?\n\n[ANSWER]:\n", "response": "False"}
{"id": "105d1ee1-bffe-46d8-afb1-14a0b5700e79", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, are all of the following properties of the state True or False: passenger p8 enters at floor f4, floor f1 is above floor f2, destination of passenger p9 is floor f0, passenger p7 enters at floor f1, destination of passenger p6 is floor f6, passenger p8 enters at floor f0, passenger p4 enters at floor f1, destination of passenger p4 is floor f5, passenger p2 enters at floor f1, destination of passenger p9 is floor f2, passenger p2 enters at floor f6, destination of passenger p1 is floor f6, floor f2 is above floor f4, passenger p8 enters at floor f1, passenger p9 enters at floor f1, destination of passenger p7 is floor f4, destination of passenger p2 is floor f1, destination of passenger p3 is floor f6, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p9 is boarded, passenger p7 is boarded, passenger p3 enters at floor f2, floor f6 is above floor f3, passenger p2 is boarded, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, passenger p3 is served, destination of passenger p1 is floor f2, passenger p5 is boarded, passenger p1 is boarded, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, passenger p4 is boarded, floor f4 is above floor f1 and passenger p0 enters at floor f0?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, are all of the following properties of the state True or False: passenger p8 enters at floor f4, floor f1 is above floor f2, destination of passenger p9 is floor f0, passenger p7 enters at floor f1, destination of passenger p6 is floor f6, passenger p8 enters at floor f0, passenger p4 enters at floor f1, destination of passenger p4 is floor f5, passenger p2 enters at floor f1, destination of passenger p9 is floor f2, passenger p2 enters at floor f6, destination of passenger p1 is floor f6, floor f2 is above floor f4, passenger p8 enters at floor f1, passenger p9 enters at floor f1, destination of passenger p7 is floor f4, destination of passenger p2 is floor f1, destination of passenger p3 is floor f6, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p9 is boarded, passenger p7 is boarded, passenger p3 enters at floor f2, floor f6 is above floor f3, passenger p2 is boarded, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, passenger p3 is served, destination of passenger p1 is floor f2, passenger p5 is boarded, passenger p1 is boarded, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, passenger p4 is boarded, floor f4 is above floor f1 and passenger p0 enters at floor f0?\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "5965ae65-32c3-4d05-8833-ed1fadb3aa66", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, are all of the following properties of the state True or False: floor f5 is not above floor f4, floor f6 is not above floor f2, floor f4 is not above floor f3, destination of passenger p8 is not floor f2, floor f5 is not above floor f3, floor f5 is not above floor f0, floor f2 is not above floor f1, passenger p4 is not boarded, passenger p8 does not enter at floor f6, destination of passenger p7 is not floor f3, passenger p7 does not enter at floor f5, floor f3 is not above floor f2, passenger p6 is not boarded, floor f6 is not above floor f5, floor f6 is not above floor f0, passenger p3 is not served, floor f4 is not above floor f2, floor f3 is not above floor f0, floor f5 is not above floor f1, destination of passenger p1 is not floor f2, destination of passenger p6 is not floor f3, passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, lift is not at floor f0, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p3 does not enter at floor f5 and destination of passenger p3 is not floor f3?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, are all of the following properties of the state True or False: floor f5 is not above floor f4, floor f6 is not above floor f2, floor f4 is not above floor f3, destination of passenger p8 is not floor f2, floor f5 is not above floor f3, floor f5 is not above floor f0, floor f2 is not above floor f1, passenger p4 is not boarded, passenger p8 does not enter at floor f6, destination of passenger p7 is not floor f3, passenger p7 does not enter at floor f5, floor f3 is not above floor f2, passenger p6 is not boarded, floor f6 is not above floor f5, floor f6 is not above floor f0, passenger p3 is not served, floor f4 is not above floor f2, floor f3 is not above floor f0, floor f5 is not above floor f1, destination of passenger p1 is not floor f2, destination of passenger p6 is not floor f3, passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, lift is not at floor f0, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p3 does not enter at floor f5 and destination of passenger p3 is not floor f3?\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "4cc5ec4c-78e7-4c10-89bd-23e117b91fe9", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, list all valid properties of the state that involve f5. Write None if there are none.", "answer": "floor f6 is above floor f5, passenger p7 enters at floor f5, floor f5 is above floor f4, passenger p5 enters at floor f5, floor f5 is above floor f1, destination of passenger p0 is floor f5, floor f5 is above floor f2, floor f5 is above floor f0, destination of passenger p9 is floor f5, floor f5 is above floor f3 and lift is at floor f5", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, list all valid properties of the state that involve f5. Write None if there are none.\n\n[ANSWER]:\n", "response": "A lift can only be on one floor at a time, so the lift is on floor f5."}
{"id": "9cdb5e71-058c-4ba6-b2a2-ed529e6dd716", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, list all valid properties of the state that involve negations that involve f6. Write None if there are none.", "answer": "destination of passenger p4 is not floor f6, passenger p6 does not enter at floor f6, passenger p4 does not enter at floor f6, destination of passenger p7 is not floor f6, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, passenger p7 does not enter at floor f6, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f6, destination of passenger p6 is not floor f6, lift is not at floor f6, destination of passenger p8 is not floor f6, floor f0 is not above floor f6, destination of passenger p9 is not floor f6, floor f3 is not above floor f6, passenger p0 does not enter at floor f6, passenger p2 does not enter at floor f6, passenger p9 does not enter at floor f6, floor f1 is not above floor f6, floor f4 is not above floor f6, passenger p5 does not enter at floor f6, passenger p1 does not enter at floor f6 and floor f5 is not above floor f6", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, list all valid properties of the state that involve negations that involve f6. Write None if there are none.\n\n[ANSWER]:\n", "response": "- p8 is not on floor f6 \n- p7 is not on floor f6\n- p6 is not on floor f6\n- p5 is not on floor f6\n- p4 is not on floor f6\n- p3 is not on floor f6\n- p2 is not on floor f6\n- p1 is not on floor f6\n- p0 is not on floor f6\n- Lift is not on floor f6"}
{"id": "f44b5686-2471-46c0-85cd-df271ee06706", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, is it True or False that passenger p5 enters at floor f6?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, is it True or False that passenger p5 enters at floor f6?\n\n[ANSWER]:\n", "response": "False"}
{"id": "9dc3ab7e-58a7-4e4e-8bd4-863d00e1c3c7", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, is it True or False that destination of passenger p3 is not floor f5?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, is it True or False that destination of passenger p3 is not floor f5?\n\n[ANSWER]:\n", "response": "True"}
{"id": "4373de55-c1cc-4fdc-a213-d89204ef82ae", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, are all of the following properties of the state True or False: passenger p7 enters at floor f1, destination of passenger p3 is floor f2, passenger p0 enters at floor f2, passenger p5 enters at floor f1, destination of passenger p5 is floor f2, passenger p8 enters at floor f1, passenger p3 enters at floor f5, passenger p4 enters at floor f1, destination of passenger p9 is floor f0, destination of passenger p3 is floor f3, lift is at floor f6, destination of passenger p1 is floor f1, floor f0 is above floor f1, destination of passenger p6 is floor f0, passenger p9 enters at floor f3, passenger p1 is served, passenger p9 enters at floor f4, destination of passenger p0 is floor f3, destination of passenger p9 is floor f6, destination of passenger p1 is floor f6, passenger p4 enters at floor f5, destination of passenger p7 is floor f6, destination of passenger p7 is floor f5, floor f4 is above floor f6, destination of passenger p1 is floor f5, destination of passenger p8 is floor f4, passenger p9 enters at floor f2, destination of passenger p0 is floor f1, passenger p3 enters at floor f6, destination of passenger p2 is floor f3, floor f2 is above floor f5, destination of passenger p4 is floor f5, passenger p7 enters at floor f3, passenger p6 enters at floor f5, destination of passenger p9 is floor f4, passenger p9 enters at floor f6, passenger p1 enters at floor f2, destination of passenger p4 is floor f0, lift is at floor f5, floor f5 is above floor f6, passenger p2 enters at floor f4, passenger p4 enters at floor f2, passenger p5 is served, floor f2 is above floor f4, floor f0 is above floor f4, passenger p4 is served, destination of passenger p5 is floor f6, destination of passenger p2 is floor f2, floor f0 is above floor f5, passenger p0 enters at floor f3 and destination of passenger p3 is floor f0?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, are all of the following properties of the state True or False: passenger p7 enters at floor f1, destination of passenger p3 is floor f2, passenger p0 enters at floor f2, passenger p5 enters at floor f1, destination of passenger p5 is floor f2, passenger p8 enters at floor f1, passenger p3 enters at floor f5, passenger p4 enters at floor f1, destination of passenger p9 is floor f0, destination of passenger p3 is floor f3, lift is at floor f6, destination of passenger p1 is floor f1, floor f0 is above floor f1, destination of passenger p6 is floor f0, passenger p9 enters at floor f3, passenger p1 is served, passenger p9 enters at floor f4, destination of passenger p0 is floor f3, destination of passenger p9 is floor f6, destination of passenger p1 is floor f6, passenger p4 enters at floor f5, destination of passenger p7 is floor f6, destination of passenger p7 is floor f5, floor f4 is above floor f6, destination of passenger p1 is floor f5, destination of passenger p8 is floor f4, passenger p9 enters at floor f2, destination of passenger p0 is floor f1, passenger p3 enters at floor f6, destination of passenger p2 is floor f3, floor f2 is above floor f5, destination of passenger p4 is floor f5, passenger p7 enters at floor f3, passenger p6 enters at floor f5, destination of passenger p9 is floor f4, passenger p9 enters at floor f6, passenger p1 enters at floor f2, destination of passenger p4 is floor f0, lift is at floor f5, floor f5 is above floor f6, passenger p2 enters at floor f4, passenger p4 enters at floor f2, passenger p5 is served, floor f2 is above floor f4, floor f0 is above floor f4, passenger p4 is served, destination of passenger p5 is floor f6, destination of passenger p2 is floor f2, floor f0 is above floor f5, passenger p0 enters at floor f3 and destination of passenger p3 is floor f0?\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "d25530e5-b410-46b1-b25d-f52ef67d6d54", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, are all of the following properties of the state True or False: passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, destination of passenger p6 is not floor f0, destination of passenger p5 is not floor f4, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, lift is not at floor f0, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p6 does not enter at floor f0, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, passenger p9 is not boarded, lift is not at floor f5, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p0 is not boarded, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, are all of the following properties of the state True or False: passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, destination of passenger p6 is not floor f0, destination of passenger p5 is not floor f4, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, lift is not at floor f0, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p6 does not enter at floor f0, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, passenger p9 is not boarded, lift is not at floor f5, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p0 is not boarded, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "9310b861-ac27-47bd-9dc9-05f6dc02b57a", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, list all valid properties of the state that involve p3. Write None if there are none.", "answer": "destination of passenger p3 is floor f0, passenger p3 enters at floor f2 and passenger p3 is served", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, list all valid properties of the state that involve p3. Write None if there are none.\n\n[ANSWER]:\n", "response": "- passenger p3 is not boarded\n- passenger p3 is served"}
{"id": "9593194b-9894-4d3c-b6fb-62d55cc746c0", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve p6. Write None if there are none.", "answer": "destination of passenger p6 is not floor f0, destination of passenger p6 is not floor f1, passenger p6 does not enter at floor f6, passenger p6 does not enter at floor f2, passenger p6 does not enter at floor f3, passenger p6 does not enter at floor f4, passenger p6 is not served, destination of passenger p6 is not floor f2, passenger p6 does not enter at floor f0, destination of passenger p6 is not floor f5, destination of passenger p6 is not floor f6, destination of passenger p6 is not floor f4 and passenger p6 does not enter at floor f5", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve p6. Write None if there are none.\n\n[ANSWER]:\n", "response": "passenger p6 is not boarded"}
{"id": "78606dba-dc4a-4351-b024-3ae3222e42e4", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, are all of the following properties: passenger p1 enters at floor f4, passenger p6 enters at floor f6, floor f0 is above floor f1, passenger p7 is served, passenger p2 enters at floor f4, lift is at floor f2, passenger p3 enters at floor f4, passenger p7 enters at floor f4, passenger p8 enters at floor f4, destination of passenger p0 is floor f4, destination of passenger p5 is floor f6, destination of passenger p6 is floor f2, passenger p1 enters at floor f2, destination of passenger p9 is floor f3, passenger p5 enters at floor f3, destination of passenger p0 is floor f0, passenger p5 enters at floor f4, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f3, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1 and passenger p0 enters at floor f0, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, are all of the following properties: passenger p1 enters at floor f4, passenger p6 enters at floor f6, floor f0 is above floor f1, passenger p7 is served, passenger p2 enters at floor f4, lift is at floor f2, passenger p3 enters at floor f4, passenger p7 enters at floor f4, passenger p8 enters at floor f4, destination of passenger p0 is floor f4, destination of passenger p5 is floor f6, destination of passenger p6 is floor f2, passenger p1 enters at floor f2, destination of passenger p9 is floor f3, passenger p5 enters at floor f3, destination of passenger p0 is floor f0, passenger p5 enters at floor f4, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f3, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1 and passenger p0 enters at floor f0, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "f639f91a-00f5-42e1-81d6-a62bfd507a57", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, are all of the following properties: passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p3 is not served, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p5 is not boarded, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p1 is not boarded, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, passenger p4 is not boarded, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, passenger p2 is not boarded, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, passenger p9 is not boarded, lift is not at floor f5, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p6 is not boarded, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6, correct? Respond with True or False.", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, are all of the following properties: passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p3 is not served, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p5 is not boarded, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p1 is not boarded, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, passenger p4 is not boarded, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, passenger p2 is not boarded, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, passenger p9 is not boarded, lift is not at floor f5, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p6 is not boarded, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "e4427f06-485d-46c8-b3a1-9811ff19c410", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f3, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, destination of passenger p7 is floor f3, floor f5 is above floor f2, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p0 is boarded, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f4, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.\n\n[ANSWER]:\n", "response": "- passenger p0 is boarded\n- passenger p2 is boarded\n- passenger p4 is boarded\n- passenger p5 is boarded\n- passenger p7 is boarded\n- passenger p6 is boarded\n- passenger p8 is boarded\n- passenger p9 is boarded\n- lift is at floor f0"}
{"id": "6a7efa5a-788f-4577-b02f-d80828461b6c", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p3 is not served, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p5 is not boarded, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p1 is not boarded, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, passenger p4 is not boarded, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, passenger p2 is not boarded, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, passenger p9 is not boarded, lift is not at floor f5, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p6 is not boarded, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.\n\n[ANSWER]:\n", "response": "None"}
{"id": "f1b44437-31da-4b2a-9a65-5510366d9fe6", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, are all of the following properties: passenger p1 enters at floor f3, destination of passenger p9 is floor f6, passenger p8 enters at floor f2, passenger p3 is boarded, floor f0 is above floor f1, lift is at floor f5, floor f0 is above floor f5, passenger p6 enters at floor f3, destination of passenger p2 is floor f4, passenger p7 enters at floor f4, destination of passenger p8 is floor f1, destination of passenger p6 is floor f5, passenger p3 enters at floor f5, passenger p2 enters at floor f0, passenger p1 is served, destination of passenger p5 is floor f5, passenger p3 enters at floor f6, passenger p4 is served, passenger p7 is boarded, floor f0 is above floor f6, destination of passenger p5 is floor f2, floor f2 is above floor f5, passenger p8 is boarded, destination of passenger p0 is floor f4, floor f2 is above floor f3, destination of passenger p1 is floor f5, destination of passenger p4 is floor f2, floor f3 is above floor f6, floor f2 is above floor f4, destination of passenger p7 is floor f0, passenger p2 enters at floor f4, destination of passenger p8 is floor f0, destination of passenger p8 is floor f5, floor f0 is above floor f4, destination of passenger p6 is floor f2, lift is at floor f6, passenger p7 enters at floor f0, destination of passenger p8 is floor f6, destination of passenger p4 is floor f1, lift is at floor f4, floor f2 is above floor f6, passenger p5 is boarded, passenger p2 enters at floor f3, passenger p5 is served, destination of passenger p3 is floor f0 and destination of passenger p2 is floor f6, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, are all of the following properties: passenger p1 enters at floor f3, destination of passenger p9 is floor f6, passenger p8 enters at floor f2, passenger p3 is boarded, floor f0 is above floor f1, lift is at floor f5, floor f0 is above floor f5, passenger p6 enters at floor f3, destination of passenger p2 is floor f4, passenger p7 enters at floor f4, destination of passenger p8 is floor f1, destination of passenger p6 is floor f5, passenger p3 enters at floor f5, passenger p2 enters at floor f0, passenger p1 is served, destination of passenger p5 is floor f5, passenger p3 enters at floor f6, passenger p4 is served, passenger p7 is boarded, floor f0 is above floor f6, destination of passenger p5 is floor f2, floor f2 is above floor f5, passenger p8 is boarded, destination of passenger p0 is floor f4, floor f2 is above floor f3, destination of passenger p1 is floor f5, destination of passenger p4 is floor f2, floor f3 is above floor f6, floor f2 is above floor f4, destination of passenger p7 is floor f0, passenger p2 enters at floor f4, destination of passenger p8 is floor f0, destination of passenger p8 is floor f5, floor f0 is above floor f4, destination of passenger p6 is floor f2, lift is at floor f6, passenger p7 enters at floor f0, destination of passenger p8 is floor f6, destination of passenger p4 is floor f1, lift is at floor f4, floor f2 is above floor f6, passenger p5 is boarded, passenger p2 enters at floor f3, passenger p5 is served, destination of passenger p3 is floor f0 and destination of passenger p2 is floor f6, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "False"}
{"id": "bee10f54-0891-4f5e-99e1-55309d6511e1", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, are all of the following properties: passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, lift is not at floor f0, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p3 is not served, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p5 is not boarded, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, passenger p4 is not boarded, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, passenger p2 is not boarded, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, lift is not at floor f5, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6, correct? Respond with True or False.", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, are all of the following properties: passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, lift is not at floor f0, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p3 is not served, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p5 is not boarded, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, passenger p4 is not boarded, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, passenger p2 is not boarded, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, lift is not at floor f5, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "baf1bd3a-7f9e-4c2d-b9ba-1a752a32ce12", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p9 is boarded, passenger p3 enters at floor f2, floor f6 is above floor f3, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, passenger p1 is boarded, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, lift is at floor f1, passenger p0 enters at floor f0, destination of passenger p7 is floor f3, floor f5 is above floor f2, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p0 is boarded, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, passenger p6 is boarded, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f4, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.\n\n[ANSWER]:\n", "response": "- destination of passenger p3 is floor f0\n- destination of passenger p2 is floor f6\n- destination of passenger p4 is floor f3\n- floor f1 is above floor f0\n- floor f2 is above floor f1\n- floor f6 is above floor f5\n- floor f6 is above floor f1\n- passenger p7 enters at floor f5\n- passenger p4 enters at floor f4\n- floor f5 is above floor f4\n- destination of passenger p5 is floor f3\n- passenger p5 enters at floor f5\n- passenger p3 enters at floor f2\n- floor f6 is above floor f4\n- floor f6 is above floor f0\n- floor f5 is above floor f1\n- floor f6 is above floor f2\n- destination of passenger p0 is floor f5\n- passenger p1 enters at floor f0\n- destination of passenger p1 is floor f2\n- floor f3 is above floor f2\n- passenger p2 enters at floor f2\n- floor f4 is above floor f3\n- floor f4 is above floor f0\n- floor f4 is above floor f1\n- passenger p0 enters at floor f0\n- floor f5 is above floor f2\n- destination of passenger p7 is floor f3\n- passenger p6 enters at floor f1\n- floor f3 is above floor f1\n- floor f2 is above floor f0\n- passenger p8 enters at floor f6\n- passenger p9 enters at floor f0\n- floor f3 is above floor f0\n- floor f5 is above floor f0\n- floor f4 is above floor f2\n- destination of passenger p9 is floor f5\n- floor f5 is above floor f3\n- floor f6 is above floor f3\n- lift is at floor f1\n- destination of passenger p8 is floor f2\n- destination of passenger p6 is floor f3\n- passenger p0 is boarded\n- passenger p1 is boarded\n- passenger p9 is boarded"}
{"id": "6c98344b-79c0-45e6-b932-a2eb74103876", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, lift is not at floor f0, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p3 is not served, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p5 is not boarded, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, passenger p4 is not boarded, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, passenger p2 is not boarded, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, lift is not at floor f5, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Passenger p2 is not on floor f1\n- Passenger p2 is not on floor f0\n- Passenger p3 is not on floor f1\n- Passenger p3 is not on floor f0\n- Passenger p4 is not on floor f1\n- Passenger p4 is not on floor f0\n- Passenger p5 is not on floor f1\n- Passenger p5 is not on floor f0\n- Passenger p6 is not on floor f0\n- Passenger p7 is not on floor f1\n- Passenger p7 is not on floor f0\n- Passenger p8 is not on floor f1\n- Passenger p8 is not on floor f0\n- Passenger p9 is not on floor f1\n- Lift is not on floor f6\n- Lift is not on floor f5\n- Lift is not on floor f4\n- Lift is not on floor f3\n- Lift is not on floor f2"}
{"id": "4e5f15a9-68b6-422b-b62f-2477c0f55854", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, are all of the following properties: destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p9 is boarded, passenger p3 enters at floor f2, floor f6 is above floor f3, passenger p2 is boarded, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, passenger p3 is served, destination of passenger p1 is floor f2, passenger p1 is boarded, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, destination of passenger p7 is floor f3, floor f5 is above floor f2, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p0 is boarded, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, passenger p6 is boarded, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f4, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3, correct? Respond with True or False.", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, are all of the following properties: destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p9 is boarded, passenger p3 enters at floor f2, floor f6 is above floor f3, passenger p2 is boarded, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, passenger p3 is served, destination of passenger p1 is floor f2, passenger p1 is boarded, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, destination of passenger p7 is floor f3, floor f5 is above floor f2, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p0 is boarded, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, passenger p6 is boarded, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f4, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "1bde5d18-29f2-4f23-ad70-8d7547c4a367", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, are all of the following properties: floor f1 is not above floor f0, destination of passenger p1 is not floor f2, passenger p1 is not boarded, passenger p9 is not boarded, floor f5 is not above floor f4, lift is not at floor f0, destination of passenger p0 is not floor f5, floor f2 is not above floor f0, passenger p6 does not enter at floor f1, floor f5 is not above floor f3, destination of passenger p9 is not floor f5, floor f6 is not above floor f1, floor f2 is not above floor f1, passenger p0 does not enter at floor f0, floor f4 is not above floor f1, passenger p2 is not boarded, floor f6 is not above floor f2, destination of passenger p4 is not floor f3, floor f5 is not above floor f2, passenger p1 does not enter at floor f0, destination of passenger p7 is not floor f3, destination of passenger p6 is not floor f3, passenger p7 does not enter at floor f5, passenger p8 does not enter at floor f6, destination of passenger p8 is not floor f2, floor f6 is not above floor f3, floor f3 is not above floor f0, passenger p3 is not served, floor f6 is not above floor f4, floor f4 is not above floor f3, passenger p4 does not enter at floor f4, passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p5 is not boarded, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, passenger p4 is not boarded, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, lift is not at floor f5, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1 and passenger p1 does not enter at floor f4, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, are all of the following properties: floor f1 is not above floor f0, destination of passenger p1 is not floor f2, passenger p1 is not boarded, passenger p9 is not boarded, floor f5 is not above floor f4, lift is not at floor f0, destination of passenger p0 is not floor f5, floor f2 is not above floor f0, passenger p6 does not enter at floor f1, floor f5 is not above floor f3, destination of passenger p9 is not floor f5, floor f6 is not above floor f1, floor f2 is not above floor f1, passenger p0 does not enter at floor f0, floor f4 is not above floor f1, passenger p2 is not boarded, floor f6 is not above floor f2, destination of passenger p4 is not floor f3, floor f5 is not above floor f2, passenger p1 does not enter at floor f0, destination of passenger p7 is not floor f3, destination of passenger p6 is not floor f3, passenger p7 does not enter at floor f5, passenger p8 does not enter at floor f6, destination of passenger p8 is not floor f2, floor f6 is not above floor f3, floor f3 is not above floor f0, passenger p3 is not served, floor f6 is not above floor f4, floor f4 is not above floor f3, passenger p4 does not enter at floor f4, passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p5 is not boarded, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, passenger p4 is not boarded, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, lift is not at floor f5, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1 and passenger p1 does not enter at floor f4, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "36d0dec4-f603-4c30-9133-91d6094df998", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p9 is boarded, passenger p3 enters at floor f2, floor f6 is above floor f3, passenger p2 is boarded, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, passenger p3 is served, destination of passenger p1 is floor f2, passenger p1 is boarded, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, destination of passenger p7 is floor f3, floor f5 is above floor f2, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p0 is boarded, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, passenger p6 is boarded, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f4, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.\n\n[ANSWER]:\n", "response": ", 0, 0, 0, 0,board, 0"}
{"id": "52a48e83-b3dd-46bf-9738-9393f29bff83", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p5 is not boarded, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, passenger p4 is not boarded, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, lift is not at floor f5, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.\n\n[ANSWER]:\n", "response": "- passenger p0 is not boarded\n- passenger p1 is not boarded\n- passenger p9 is not boarded\n- passenger p3 is not on floor f0\n- passenger p3 is not served\n- passenger p6 is not boarded\n- passenger p2 is not boarded\n- passenger p3 is not boarded"}
{"id": "18f4a70f-63d5-428a-99e5-9a94802f18b4", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, are all of the following properties: destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p9 is boarded, passenger p7 is boarded, passenger p3 enters at floor f2, floor f6 is above floor f3, passenger p2 is boarded, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, passenger p3 is served, destination of passenger p1 is floor f2, passenger p5 is boarded, passenger p1 is boarded, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, passenger p4 is boarded, floor f4 is above floor f1, passenger p0 enters at floor f0, destination of passenger p7 is floor f3, floor f5 is above floor f2, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p0 is boarded, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, passenger p6 is boarded, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, lift is at floor f5, floor f6 is above floor f4, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3, correct? Respond with True or False.", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, are all of the following properties: destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p9 is boarded, passenger p7 is boarded, passenger p3 enters at floor f2, floor f6 is above floor f3, passenger p2 is boarded, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, passenger p3 is served, destination of passenger p1 is floor f2, passenger p5 is boarded, passenger p1 is boarded, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, passenger p4 is boarded, floor f4 is above floor f1, passenger p0 enters at floor f0, destination of passenger p7 is floor f3, floor f5 is above floor f2, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p0 is boarded, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, passenger p6 is boarded, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, lift is at floor f5, floor f6 is above floor f4, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "False"}
{"id": "f4cf685e-6dce-432c-a05c-5f6cdfd69e1d", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, are all of the following properties: passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, lift is not at floor f0, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6, correct? Respond with True or False.", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, are all of the following properties: passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, lift is not at floor f0, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "592abc13-5ca9-4b45-b559-24ee779391a8", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p9 is boarded, passenger p7 is boarded, passenger p3 enters at floor f2, floor f6 is above floor f3, passenger p2 is boarded, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, passenger p3 is served, destination of passenger p1 is floor f2, passenger p5 is boarded, passenger p1 is boarded, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, passenger p4 is boarded, floor f4 is above floor f1, passenger p0 enters at floor f0, destination of passenger p7 is floor f3, floor f5 is above floor f2, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p0 is boarded, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, passenger p6 is boarded, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, lift is at floor f5, floor f6 is above floor f4, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.\n\n[ANSWER]:\n", "response": "- passenger p0 is boarded\n- passenger p1 is boarded\n- passenger p9 is boarded\n- passenger p6 is boarded\n- passenger p2 is boarded\n- passenger p3 is served\n- passenger p4 is boarded\n- passenger p5 is boarded\n- passenger p7 is boarded"}
{"id": "b24ebd98-4cc4-4cf9-a8d1-9cc682928779", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, lift is not at floor f0, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Passenger p3 is not on floor f0\n- Passenger p0 is not on floor f4\n- Passenger p2 is not on floor f0\n- Passenger p6 is not on floor f5\n- Passenger p1 is not on floor f0\n- Passenger p8 is not on floor f0\n- Passenger p5 is not on floor f3\n- Passenger p9 is not on floor f0\n- Passenger p7 is not on floor f3"}
{"id": "3b83b49a-bbfc-4357-b159-0920c739084f", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, are all of the following properties: passenger p8 is boarded, destination of passenger p7 is floor f2, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f3, passenger p2 is boarded, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, passenger p9 is served, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, passenger p3 is served, destination of passenger p1 is floor f2, passenger p7 is served, passenger p5 is boarded, passenger p1 is boarded, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, passenger p4 is boarded, floor f4 is above floor f1, passenger p0 enters at floor f0, destination of passenger p7 is floor f3, floor f5 is above floor f2, passenger p0 is served, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, passenger p6 is boarded, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, lift is at floor f3 and floor f6 is above floor f4, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, are all of the following properties: passenger p8 is boarded, destination of passenger p7 is floor f2, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f3, passenger p2 is boarded, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, passenger p9 is served, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, passenger p3 is served, destination of passenger p1 is floor f2, passenger p7 is served, passenger p5 is boarded, passenger p1 is boarded, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, passenger p4 is boarded, floor f4 is above floor f1, passenger p0 enters at floor f0, destination of passenger p7 is floor f3, floor f5 is above floor f2, passenger p0 is served, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, passenger p6 is boarded, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, lift is at floor f3 and floor f6 is above floor f4, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "b0255096-97fe-4705-93ea-f040f4fa7d1f", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, are all of the following properties: floor f4 is not above floor f2, passenger p8 does not enter at floor f6, passenger p9 does not enter at floor f0, destination of passenger p8 is not floor f2, floor f5 is not above floor f0, passenger p3 does not enter at floor f2, lift is not at floor f3, floor f5 is not above floor f1, floor f6 is not above floor f1, destination of passenger p0 is not floor f5, passenger p6 is not boarded, floor f4 is not above floor f0, floor f4 is not above floor f1, passenger p0 does not enter at floor f0, destination of passenger p6 is not floor f3, floor f6 is not above floor f0, passenger p4 does not enter at floor f4, destination of passenger p9 is not floor f5, floor f4 is not above floor f3, passenger p1 does not enter at floor f0, floor f2 is not above floor f0, floor f6 is not above floor f3, passenger p5 does not enter at floor f5, destination of passenger p3 is not floor f0, floor f3 is not above floor f1, floor f5 is not above floor f4, passenger p9 is not served, floor f5 is not above floor f2, passenger p4 is not boarded, passenger p6 does not enter at floor f1, destination of passenger p5 is not floor f3, floor f3 is not above floor f0, floor f5 is not above floor f3, destination of passenger p4 is not floor f3, passenger p5 is not boarded, passenger p2 is not boarded, passenger p7 does not enter at floor f5, passenger p3 is not served, passenger p7 is not served, destination of passenger p7 is not floor f3, passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, destination of passenger p6 is not floor f0, destination of passenger p5 is not floor f4, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, lift is not at floor f0, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p6 does not enter at floor f0, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, passenger p9 is not boarded, lift is not at floor f5, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2 and destination of passenger p5 is not floor f1, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, are all of the following properties: floor f4 is not above floor f2, passenger p8 does not enter at floor f6, passenger p9 does not enter at floor f0, destination of passenger p8 is not floor f2, floor f5 is not above floor f0, passenger p3 does not enter at floor f2, lift is not at floor f3, floor f5 is not above floor f1, floor f6 is not above floor f1, destination of passenger p0 is not floor f5, passenger p6 is not boarded, floor f4 is not above floor f0, floor f4 is not above floor f1, passenger p0 does not enter at floor f0, destination of passenger p6 is not floor f3, floor f6 is not above floor f0, passenger p4 does not enter at floor f4, destination of passenger p9 is not floor f5, floor f4 is not above floor f3, passenger p1 does not enter at floor f0, floor f2 is not above floor f0, floor f6 is not above floor f3, passenger p5 does not enter at floor f5, destination of passenger p3 is not floor f0, floor f3 is not above floor f1, floor f5 is not above floor f4, passenger p9 is not served, floor f5 is not above floor f2, passenger p4 is not boarded, passenger p6 does not enter at floor f1, destination of passenger p5 is not floor f3, floor f3 is not above floor f0, floor f5 is not above floor f3, destination of passenger p4 is not floor f3, passenger p5 is not boarded, passenger p2 is not boarded, passenger p7 does not enter at floor f5, passenger p3 is not served, passenger p7 is not served, destination of passenger p7 is not floor f3, passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, destination of passenger p6 is not floor f0, destination of passenger p5 is not floor f4, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, lift is not at floor f0, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p6 does not enter at floor f0, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, passenger p9 is not boarded, lift is not at floor f5, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2 and destination of passenger p5 is not floor f1, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "19083bad-cff3-43e0-b9bc-c4d1c033ea6d", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f3, passenger p2 is boarded, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, passenger p9 is served, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, passenger p3 is served, destination of passenger p1 is floor f2, passenger p7 is served, passenger p5 is boarded, passenger p1 is boarded, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, passenger p4 is boarded, floor f4 is above floor f1, passenger p0 enters at floor f0, destination of passenger p7 is floor f3, floor f5 is above floor f2, passenger p0 is served, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, passenger p6 is boarded, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, lift is at floor f3, floor f6 is above floor f4, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.\n\n[ANSWER]:\n", "response": "- passenger p1 is boarded\n- passenger p2 is boarded\n- passenger p4 is boarded\n- passenger p5 is boarded\n- passenger p6 is boarded\n- passenger p8 is boarded\n- lift is at floor f3\n- destination of passenger p1 is floor f2\n- destination of passenger p2 is floor f6\n- destination of passenger p4 is floor f3\n- destination of passenger p5 is floor f3\n- destination of passenger p6 is floor f3\n- destination of passenger p8 is floor f2"}
{"id": "cfbc5f14-4f57-4a37-803f-9f426990938c", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, destination of passenger p6 is not floor f0, destination of passenger p5 is not floor f4, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, lift is not at floor f0, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p6 does not enter at floor f0, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, passenger p9 is not boarded, lift is not at floor f5, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p0 is not boarded, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.\n\n[ANSWER]:\n", "response": "- passenger p2 is not boarded\n- passenger p8 is not served\n- passenger p6 is not boarded\n- passenger p5 is not boarded\n- lift is not on floor f0\n- passenger p0 is not boarded\n- passenger p3 is not boarded\n- passenger p4 is not served\n- passenger p9 is not boarded\n- passenger p1 is not served"}
{"id": "bb0187d9-0849-48cd-9d23-bcf3ad731e71", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p7 departs at floor f4. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p7 departs at floor f4. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "45c5fc9f-e831-494a-81ff-7c02cdf9eaf7", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: passenger p0 boards at floor f0. Is the action: passenger p0 boards at floor f0 executable at step 1, True or False?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 1 the following actions are planned to be performed: passenger p0 boards at floor f0. Is the action: passenger p0 boards at floor f0 executable at step 1, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "a7454e17-0b65-4f4e-a627-5ef335236c5a", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "the elevator goes up from floor f0 to floor f2, passenger p0 boards at floor f0, the elevator goes up from floor f0 to floor f5, the elevator goes up from floor f0 to floor f6, the elevator goes up from floor f0 to floor f1, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f3 and the elevator goes up from floor f0 to floor f4", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, list all executable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "passenger p1 boards at floor f0"}
{"id": "49a0838c-2621-4047-ac89-51a63d617fdf", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "passenger p9 boards at floor f6, the elevator goes down from floor f6 to floor f2, passenger p2 departs at floor f5, passenger p5 departs at floor f0, the elevator goes up from floor f5 to floor f0, passenger p0 departs at floor f4, passenger p2 boards at floor f5, passenger p2 boards at floor f3, passenger p4 boards at floor f6, passenger p7 boards at floor f1, passenger p8 departs at floor f2, passenger p7 departs at floor f3, passenger p3 departs at floor f6, passenger p5 boards at floor f0, passenger p1 departs at floor f4, passenger p8 boards at floor f5, passenger p2 boards at floor f4, passenger p1 boards at floor f6, passenger p5 departs at floor f1, the elevator goes up from floor f4 to floor f3, passenger p6 boards at floor f0, the elevator goes up from floor f1 to floor f0, passenger p7 departs at floor f5, passenger p0 departs at floor f1, passenger p1 departs at floor f5, passenger p6 departs at floor f3, the elevator goes down from floor f3 to floor f6, the elevator goes down from floor f0 to floor f1, passenger p5 departs at floor f5, passenger p0 boards at floor f6, the elevator goes up from floor f4 to floor f0, passenger p9 departs at floor f0, the elevator goes up from floor f6 to floor f1, passenger p4 boards at floor f4, passenger p7 departs at floor f0, passenger p5 boards at floor f1, the elevator goes up from floor f4 to floor f1, passenger p6 departs at floor f2, passenger p7 departs at floor f1, passenger p5 departs at floor f3, the elevator goes up from floor f1 to floor f2, the elevator goes down from floor f0 to floor f3, passenger p9 boards at floor f1, passenger p4 departs at floor f5, passenger p9 departs at floor f3, the elevator goes down from floor f1 to floor f0, passenger p4 departs at floor f6, passenger p7 boards at floor f2, passenger p4 boards at floor f1, the elevator goes down from floor f2 to floor f3, passenger p8 departs at floor f4, the elevator goes down from floor f0 to floor f6, the elevator goes up from floor f1 to floor f6, passenger p3 departs at floor f0, passenger p0 boards at floor f3, the elevator goes up from floor f3 to floor f0, passenger p7 boards at floor f6, passenger p1 boards at floor f5, passenger p1 departs at floor f2, passenger p2 departs at floor f0, passenger p6 departs at floor f5, the elevator goes up from floor f1 to floor f4, the elevator goes down from floor f3 to floor f4, passenger p8 boards at floor f0, passenger p3 departs at floor f2, passenger p6 departs at floor f4, passenger p3 boards at floor f3, passenger p9 boards at floor f5, passenger p7 boards at floor f0, passenger p4 departs at floor f0, the elevator goes up from floor f6 to floor f3, the elevator goes down from floor f6 to floor f0, passenger p4 boards at floor f0, passenger p1 departs at floor f0, passenger p5 boards at floor f5, passenger p3 boards at floor f5, the elevator goes up from floor f2 to floor f0, passenger p4 departs at floor f1, passenger p8 boards at floor f6, the elevator goes up from floor f3 to floor f5, the elevator goes down from floor f4 to floor f0, passenger p2 departs at floor f4, passenger p5 boards at floor f4, passenger p4 boards at floor f2, passenger p0 departs at floor f6, passenger p3 boards at floor f0, passenger p3 departs at floor f4, the elevator goes down from floor f2 to floor f5, passenger p8 boards at floor f4, passenger p0 departs at floor f2, the elevator goes down from floor f5 to floor f4, passenger p2 boards at floor f0, passenger p5 departs at floor f4, passenger p5 departs at floor f6, the elevator goes down from floor f6 to floor f5, the elevator goes up from floor f4 to floor f2, passenger p0 boards at floor f5, the elevator goes up from floor f5 to floor f6, the elevator goes down from floor f6 to floor f1, the elevator goes down from floor f1 to floor f6, the elevator goes up from floor f3 to floor f2, passenger p3 departs at floor f3, passenger p1 departs at floor f6, passenger p9 boards at floor f3, passenger p0 boards at floor f4, the elevator goes up from floor f2 to floor f6, passenger p9 departs at floor f1, passenger p1 departs at floor f3, the elevator goes down from floor f3 to floor f2, passenger p4 departs at floor f4, passenger p8 boards at floor f2, the elevator goes down from floor f2 to floor f4, passenger p2 boards at floor f2, passenger p7 departs at floor f4, the elevator goes down from floor f3 to floor f1, the elevator goes up from floor f6 to floor f0, the elevator goes up from floor f1 to floor f5, the elevator goes up from floor f6 to floor f4, the elevator goes down from floor f4 to floor f6, passenger p6 boards at floor f5, the elevator goes down from floor f4 to floor f3, passenger p2 departs at floor f3, the elevator goes down from floor f1 to floor f4, passenger p8 departs at floor f6, passenger p5 departs at floor f2, passenger p6 departs at floor f0, passenger p3 boards at floor f2, passenger p4 boards at floor f5, the elevator goes up from floor f2 to floor f3, passenger p0 boards at floor f1, the elevator goes down from floor f2 to floor f1, the elevator goes up from floor f4 to floor f5, the elevator goes down from floor f3 to floor f0, the elevator goes down from floor f0 to floor f5, passenger p5 boards at floor f6, the elevator goes up from floor f6 to floor f2, passenger p1 boards at floor f2, the elevator goes up from floor f5 to floor f2, the elevator goes down from floor f3 to floor f5, passenger p1 departs at floor f1, the elevator goes up from floor f5 to floor f1, passenger p6 boards at floor f6, passenger p4 boards at floor f3, the elevator goes down from floor f2 to floor f0, the elevator goes down from floor f5 to floor f6, passenger p8 departs at floor f0, the elevator goes down from floor f1 to floor f3, passenger p8 departs at floor f5, passenger p3 boards at floor f1, the elevator goes down from floor f2 to floor f6, passenger p1 boards at floor f4, passenger p6 boards at floor f2, passenger p0 departs at floor f5, the elevator goes up from floor f3 to floor f6, the elevator goes down from floor f4 to floor f1, the elevator goes up from floor f2 to floor f4, passenger p4 departs at floor f2, passenger p1 boards at floor f1, the elevator goes down from floor f5 to floor f2, passenger p3 boards at floor f4, passenger p1 boards at floor f3, the elevator goes up from floor f4 to floor f6, passenger p3 departs at floor f1, the elevator goes down from floor f5 to floor f0, passenger p5 boards at floor f3, the elevator goes up from floor f2 to floor f5, the elevator goes down from floor f4 to floor f5, passenger p7 departs at floor f2, passenger p7 departs at floor f6, passenger p2 boards at floor f1, the elevator goes down from floor f5 to floor f3, passenger p6 boards at floor f3, passenger p6 departs at floor f6, passenger p6 boards at floor f1, passenger p2 boards at floor f6, passenger p2 departs at floor f1, passenger p3 boards at floor f6, the elevator goes up from floor f6 to floor f5, passenger p6 boards at floor f4, the elevator goes down from floor f1 to floor f2, the elevator goes up from floor f3 to floor f1, the elevator goes up from floor f5 to floor f4, passenger p8 departs at floor f1, the elevator goes down from floor f0 to floor f2, passenger p7 boards at floor f3, passenger p9 departs at floor f4, the elevator goes down from floor f0 to floor f4, passenger p8 boards at floor f1, passenger p0 departs at floor f3, passenger p7 boards at floor f4, the elevator goes down from floor f1 to floor f5, the elevator goes up from floor f5 to floor f3, the elevator goes down from floor f6 to floor f4, passenger p0 departs at floor f0, passenger p9 departs at floor f5, the elevator goes up from floor f3 to floor f4, the elevator goes up from floor f1 to floor f3, passenger p2 departs at floor f2, passenger p2 departs at floor f6, the elevator goes down from floor f5 to floor f1, passenger p9 boards at floor f4, passenger p4 departs at floor f3, passenger p9 boards at floor f2, passenger p5 boards at floor f2, passenger p3 departs at floor f5, passenger p6 departs at floor f1, passenger p9 departs at floor f2, passenger p0 boards at floor f2, the elevator goes up from floor f2 to floor f1, passenger p9 departs at floor f6, passenger p8 departs at floor f3, passenger p7 boards at floor f5, the elevator goes down from floor f4 to floor f2, passenger p8 boards at floor f3 and the elevator goes down from floor f6 to floor f3", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "passenger p1 boards at floor f0\npassenger p8 departs at floor f0\npassenger p2 boards at floor f2\npassenger p1 boards at floor f2\npassenger p3 boards at floor f2\nlift goes down from floor f0 to floor f0\nlift goes up from floor f0 to floor f1\nlift goes down from floor f0 to floor f2\npassenger p0 departs at floor f2\npassenger p1 boards at floor f2\npassenger p2 boards at floor f2\npassenger p3 boards at floor f2\npassenger p6 departs at floor f2\npassenger p3 boards at floor f3\npassenger p9 departs at floor f3\nlift goes down from floor f2 to floor f1\npassenger p2 departs at floor f2\npassenger p3 boards at floor f2\npassenger p4 departs at floor f3\npassenger p6 departs at floor f3\npassenger p4 boards at floor f4\npassenger p1 departs at floor f4\nlift goes down from floor f4 to floor f3\npassenger p5 departs at floor f3\npassenger p8 boards at floor f6\npassenger p4 boards at floor f6\npassenger p1 departs at floor f6\npassenger p6 boards at floor f6\npassenger p9 boards at floor f6\npassenger p1 boards at floor f6"}
{"id": "20a0ac04-849e-41a3-a8fc-b7787dac950b", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p5 boards at floor f4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "passenger p5 boards at floor f4", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p5 boards at floor f4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "passenger p7 boards at floor f5"}
{"id": "8b492ce6-0514-49bb-bcd7-8a00ff9ed6f5", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f5, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f5, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "99dfc3a8-6fcc-4544-bdb8-7a36b6c29491", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1. Is the action: passenger p0 boards at floor f0 executable at step 1, True or False?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 5 the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1. Is the action: passenger p0 boards at floor f0 executable at step 1, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "d8341a77-49d9-48c1-9773-87d74341d0de", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "the elevator goes up from floor f1 to floor f2, the elevator goes down from floor f1 to floor f0, the elevator goes up from floor f1 to floor f6, the elevator goes up from floor f1 to floor f4, the elevator goes up from floor f1 to floor f5, passenger p6 boards at floor f1 and the elevator goes up from floor f1 to floor f3", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, list all executable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "passenger p4 boards at floor f4"}
{"id": "d7703319-4317-4840-9bf1-682dbb850cfe", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "passenger p9 boards at floor f6, the elevator goes down from floor f6 to floor f2, passenger p2 departs at floor f5, passenger p5 departs at floor f0, the elevator goes up from floor f5 to floor f0, passenger p0 departs at floor f4, passenger p2 boards at floor f5, passenger p2 boards at floor f3, the elevator goes up from floor f0 to floor f2, passenger p4 boards at floor f6, passenger p7 boards at floor f1, passenger p8 departs at floor f2, passenger p7 departs at floor f3, passenger p3 departs at floor f6, passenger p5 boards at floor f0, passenger p1 departs at floor f4, passenger p8 boards at floor f5, passenger p2 boards at floor f4, passenger p1 boards at floor f6, passenger p5 departs at floor f1, the elevator goes up from floor f4 to floor f3, passenger p6 boards at floor f0, the elevator goes up from floor f1 to floor f0, passenger p7 departs at floor f5, passenger p0 departs at floor f1, passenger p1 departs at floor f5, passenger p6 departs at floor f3, the elevator goes down from floor f3 to floor f6, the elevator goes down from floor f0 to floor f1, passenger p5 departs at floor f5, passenger p0 boards at floor f6, the elevator goes up from floor f4 to floor f0, passenger p9 departs at floor f0, the elevator goes up from floor f6 to floor f1, passenger p4 boards at floor f4, passenger p7 departs at floor f0, passenger p5 boards at floor f1, the elevator goes up from floor f4 to floor f1, passenger p6 departs at floor f2, passenger p0 boards at floor f0, passenger p7 departs at floor f1, passenger p5 departs at floor f3, the elevator goes down from floor f0 to floor f3, passenger p9 boards at floor f1, passenger p4 departs at floor f5, passenger p9 departs at floor f3, passenger p4 departs at floor f6, passenger p7 boards at floor f2, passenger p4 boards at floor f1, the elevator goes down from floor f2 to floor f3, passenger p8 departs at floor f4, the elevator goes down from floor f0 to floor f6, passenger p3 departs at floor f0, passenger p0 boards at floor f3, the elevator goes up from floor f3 to floor f0, passenger p7 boards at floor f6, passenger p1 boards at floor f5, passenger p1 departs at floor f2, the elevator goes up from floor f0 to floor f5, passenger p2 departs at floor f0, passenger p6 departs at floor f5, the elevator goes down from floor f3 to floor f4, passenger p8 boards at floor f0, passenger p3 departs at floor f2, passenger p6 departs at floor f4, passenger p3 boards at floor f3, passenger p9 boards at floor f5, passenger p7 boards at floor f0, passenger p4 departs at floor f0, the elevator goes up from floor f6 to floor f3, the elevator goes down from floor f6 to floor f0, passenger p4 boards at floor f0, passenger p1 departs at floor f0, passenger p5 boards at floor f5, passenger p3 boards at floor f5, the elevator goes up from floor f2 to floor f0, passenger p4 departs at floor f1, passenger p8 boards at floor f6, the elevator goes up from floor f3 to floor f5, the elevator goes down from floor f4 to floor f0, passenger p2 departs at floor f4, passenger p5 boards at floor f4, passenger p4 boards at floor f2, passenger p0 departs at floor f6, passenger p3 boards at floor f0, passenger p3 departs at floor f4, the elevator goes down from floor f2 to floor f5, passenger p8 boards at floor f4, passenger p0 departs at floor f2, the elevator goes down from floor f5 to floor f4, passenger p2 boards at floor f0, passenger p5 departs at floor f4, passenger p5 departs at floor f6, the elevator goes down from floor f6 to floor f5, the elevator goes up from floor f4 to floor f2, passenger p0 boards at floor f5, the elevator goes up from floor f5 to floor f6, the elevator goes down from floor f6 to floor f1, the elevator goes down from floor f1 to floor f6, the elevator goes up from floor f3 to floor f2, passenger p3 departs at floor f3, passenger p1 departs at floor f6, passenger p9 boards at floor f3, passenger p0 boards at floor f4, the elevator goes up from floor f2 to floor f6, passenger p9 departs at floor f1, passenger p1 departs at floor f3, the elevator goes down from floor f3 to floor f2, passenger p4 departs at floor f4, passenger p8 boards at floor f2, the elevator goes down from floor f2 to floor f4, passenger p2 boards at floor f2, passenger p7 departs at floor f4, the elevator goes down from floor f3 to floor f1, the elevator goes up from floor f6 to floor f0, the elevator goes up from floor f6 to floor f4, the elevator goes down from floor f4 to floor f6, passenger p6 boards at floor f5, the elevator goes down from floor f4 to floor f3, passenger p2 departs at floor f3, the elevator goes down from floor f1 to floor f4, passenger p8 departs at floor f6, passenger p5 departs at floor f2, passenger p6 departs at floor f0, passenger p3 boards at floor f2, passenger p4 boards at floor f5, the elevator goes up from floor f2 to floor f3, passenger p0 boards at floor f1, the elevator goes down from floor f2 to floor f1, the elevator goes up from floor f0 to floor f6, the elevator goes up from floor f4 to floor f5, the elevator goes down from floor f3 to floor f0, the elevator goes down from floor f0 to floor f5, passenger p5 boards at floor f6, the elevator goes up from floor f6 to floor f2, passenger p1 boards at floor f2, the elevator goes up from floor f5 to floor f2, the elevator goes down from floor f3 to floor f5, passenger p1 departs at floor f1, the elevator goes up from floor f5 to floor f1, passenger p6 boards at floor f6, passenger p4 boards at floor f3, the elevator goes down from floor f2 to floor f0, the elevator goes down from floor f5 to floor f6, passenger p8 departs at floor f0, the elevator goes down from floor f1 to floor f3, passenger p8 departs at floor f5, passenger p3 boards at floor f1, the elevator goes down from floor f2 to floor f6, passenger p1 boards at floor f4, passenger p6 boards at floor f2, passenger p0 departs at floor f5, the elevator goes up from floor f3 to floor f6, the elevator goes down from floor f4 to floor f1, the elevator goes up from floor f2 to floor f4, passenger p4 departs at floor f2, passenger p1 boards at floor f1, the elevator goes up from floor f0 to floor f1, the elevator goes down from floor f5 to floor f2, passenger p3 boards at floor f4, passenger p1 boards at floor f3, the elevator goes up from floor f4 to floor f6, passenger p1 boards at floor f0, passenger p3 departs at floor f1, the elevator goes down from floor f5 to floor f0, passenger p5 boards at floor f3, the elevator goes up from floor f2 to floor f5, the elevator goes down from floor f4 to floor f5, passenger p7 departs at floor f2, passenger p7 departs at floor f6, passenger p2 boards at floor f1, the elevator goes down from floor f5 to floor f3, passenger p6 boards at floor f3, passenger p6 departs at floor f6, passenger p2 boards at floor f6, passenger p2 departs at floor f1, passenger p3 boards at floor f6, the elevator goes up from floor f6 to floor f5, passenger p6 boards at floor f4, the elevator goes down from floor f1 to floor f2, the elevator goes up from floor f3 to floor f1, the elevator goes up from floor f5 to floor f4, passenger p8 departs at floor f1, the elevator goes down from floor f0 to floor f2, passenger p7 boards at floor f3, passenger p9 departs at floor f4, the elevator goes down from floor f0 to floor f4, passenger p8 boards at floor f1, passenger p0 departs at floor f3, passenger p7 boards at floor f4, the elevator goes down from floor f1 to floor f5, the elevator goes up from floor f5 to floor f3, the elevator goes down from floor f6 to floor f4, passenger p9 boards at floor f0, passenger p0 departs at floor f0, passenger p9 departs at floor f5, the elevator goes up from floor f3 to floor f4, passenger p2 departs at floor f2, passenger p2 departs at floor f6, the elevator goes down from floor f5 to floor f1, passenger p9 boards at floor f4, passenger p4 departs at floor f3, passenger p9 boards at floor f2, passenger p5 boards at floor f2, passenger p3 departs at floor f5, passenger p6 departs at floor f1, passenger p9 departs at floor f2, passenger p0 boards at floor f2, the elevator goes up from floor f2 to floor f1, passenger p9 departs at floor f6, the elevator goes up from floor f0 to floor f3, passenger p8 departs at floor f3, passenger p7 boards at floor f5, the elevator goes down from floor f4 to floor f2, passenger p8 boards at floor f3, the elevator goes down from floor f6 to floor f3 and the elevator goes up from floor f0 to floor f4", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "passenger p0 departs at floor f0, passenger p1 departs at floor f0, passenger p9 departs at floor f0, passenger p6 departs at floor f0, passenger p0 boards at floor f1, passenger p1 boards at floor f1, passenger p9 boards at floor f1, passenger p6 boards at floor f1, the elevator goes down from floor f1 to floor f0, passenger p0 departs at floor f1, passenger p1 departs at floor f1, passenger p9 departs at floor f1, passenger p6 departs at floor f1, passenger p0 boards at floor f2, passenger p1 boards at floor f2, passenger p9 boards at floor f2, passenger p6 boards at floor f2, the elevator goes down from floor f2 to floor f1, passenger p0 departs at floor f2, passenger p1 departs at floor f2, passenger p9 departs at floor f2, passenger p6 departs at floor f2, passenger p0 boards at floor f3, passenger p1 boards at floor f3, passenger p9 boards at floor f3, passenger p6 boards at floor f3, the elevator goes down from floor f3 to floor f2, passenger p0 departs at floor f3, passenger p1 departs at floor f3, passenger p9 departs at floor f3, passenger p6 departs at floor f3, passenger p0 boards at floor f4, passenger p1 boards at floor f4, passenger p9 boards at floor f4, passenger p6 boards at floor f4, the elevator goes down from floor f4 to floor f3, passenger p0 departs at floor f4, passenger p1 departs at floor f4, passenger p9 departs at floor f4, passenger p6 departs at floor f4, passenger p0 boards at floor f5, passenger p1 boards at floor f5, passenger p9 boards at floor f5, passenger p6 boards at floor f5, the elevator goes down from floor f5 to floor f4, passenger p0 departs at floor f5, passenger p1 departs at floor f5, passenger p9 departs at floor f5, passenger p6 departs at floor f5, passenger p0 boards at floor f6, passenger p1 boards at floor f6, passenger p9 boards at floor f6, passenger p6 boards at floor f6, the elevator goes down from floor f6 to floor f5, passenger p0 departs at floor f6, passenger p1 departs at floor f6, passenger p9 departs at floor f6, passenger p6 departs at floor f6"}
{"id": "65d97c46-b2df-4eb7-bbb9-1bf2b916c05e", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "passenger p1 boards at floor f0"}
{"id": "b78ebe17-0cfe-4704-8deb-5326c6686b5e", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "df666393-9b0c-4a69-bb1d-3086de051f9f", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0. Is the action: passenger p3 departs at floor f0 executable at step 10, True or False?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 10 the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0. Is the action: passenger p3 departs at floor f0 executable at step 10, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "7a9e4402-4f90-4365-98a1-35793bb35b7b", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "the elevator goes up from floor f0 to floor f2, passenger p0 boards at floor f0, the elevator goes up from floor f0 to floor f5, the elevator goes up from floor f0 to floor f6, the elevator goes up from floor f0 to floor f1, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f3 and the elevator goes up from floor f0 to floor f4", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, list all executable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0"}
{"id": "f688c256-012d-4125-90f3-4592c3aa771f", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "passenger p9 boards at floor f6, the elevator goes down from floor f6 to floor f2, passenger p2 departs at floor f5, passenger p5 departs at floor f0, the elevator goes up from floor f5 to floor f0, passenger p0 departs at floor f4, passenger p2 boards at floor f5, passenger p2 boards at floor f3, passenger p4 boards at floor f6, passenger p7 boards at floor f1, passenger p8 departs at floor f2, passenger p7 departs at floor f3, passenger p3 departs at floor f6, passenger p5 boards at floor f0, passenger p1 departs at floor f4, passenger p8 boards at floor f5, passenger p2 boards at floor f4, passenger p1 boards at floor f6, passenger p5 departs at floor f1, the elevator goes up from floor f4 to floor f3, passenger p6 boards at floor f0, the elevator goes up from floor f1 to floor f0, passenger p7 departs at floor f5, passenger p0 departs at floor f1, passenger p1 departs at floor f5, passenger p6 departs at floor f3, the elevator goes down from floor f3 to floor f6, the elevator goes down from floor f0 to floor f1, passenger p5 departs at floor f5, passenger p0 boards at floor f6, the elevator goes up from floor f4 to floor f0, passenger p9 departs at floor f0, the elevator goes up from floor f6 to floor f1, passenger p4 boards at floor f4, passenger p7 departs at floor f0, passenger p5 boards at floor f1, the elevator goes up from floor f4 to floor f1, passenger p6 departs at floor f2, passenger p7 departs at floor f1, passenger p5 departs at floor f3, the elevator goes up from floor f1 to floor f2, the elevator goes down from floor f0 to floor f3, passenger p9 boards at floor f1, passenger p4 departs at floor f5, passenger p9 departs at floor f3, the elevator goes down from floor f1 to floor f0, passenger p4 departs at floor f6, passenger p7 boards at floor f2, passenger p4 boards at floor f1, the elevator goes down from floor f2 to floor f3, passenger p8 departs at floor f4, the elevator goes down from floor f0 to floor f6, the elevator goes up from floor f1 to floor f6, passenger p3 departs at floor f0, passenger p0 boards at floor f3, the elevator goes up from floor f3 to floor f0, passenger p7 boards at floor f6, passenger p1 boards at floor f5, passenger p1 departs at floor f2, passenger p2 departs at floor f0, passenger p6 departs at floor f5, the elevator goes up from floor f1 to floor f4, the elevator goes down from floor f3 to floor f4, passenger p8 boards at floor f0, passenger p3 departs at floor f2, passenger p6 departs at floor f4, passenger p3 boards at floor f3, passenger p9 boards at floor f5, passenger p7 boards at floor f0, passenger p4 departs at floor f0, the elevator goes up from floor f6 to floor f3, the elevator goes down from floor f6 to floor f0, passenger p4 boards at floor f0, passenger p1 departs at floor f0, passenger p5 boards at floor f5, passenger p3 boards at floor f5, the elevator goes up from floor f2 to floor f0, passenger p4 departs at floor f1, passenger p8 boards at floor f6, the elevator goes up from floor f3 to floor f5, the elevator goes down from floor f4 to floor f0, passenger p2 departs at floor f4, passenger p5 boards at floor f4, passenger p4 boards at floor f2, passenger p0 departs at floor f6, passenger p3 boards at floor f0, passenger p3 departs at floor f4, the elevator goes down from floor f2 to floor f5, passenger p8 boards at floor f4, passenger p0 departs at floor f2, the elevator goes down from floor f5 to floor f4, passenger p2 boards at floor f0, passenger p5 departs at floor f4, passenger p5 departs at floor f6, the elevator goes down from floor f6 to floor f5, the elevator goes up from floor f4 to floor f2, passenger p0 boards at floor f5, the elevator goes up from floor f5 to floor f6, the elevator goes down from floor f6 to floor f1, the elevator goes down from floor f1 to floor f6, the elevator goes up from floor f3 to floor f2, passenger p3 departs at floor f3, passenger p1 departs at floor f6, passenger p9 boards at floor f3, passenger p0 boards at floor f4, the elevator goes up from floor f2 to floor f6, passenger p9 departs at floor f1, passenger p1 departs at floor f3, the elevator goes down from floor f3 to floor f2, passenger p4 departs at floor f4, passenger p8 boards at floor f2, the elevator goes down from floor f2 to floor f4, passenger p2 boards at floor f2, passenger p7 departs at floor f4, the elevator goes down from floor f3 to floor f1, the elevator goes up from floor f6 to floor f0, the elevator goes up from floor f1 to floor f5, the elevator goes up from floor f6 to floor f4, the elevator goes down from floor f4 to floor f6, passenger p6 boards at floor f5, the elevator goes down from floor f4 to floor f3, passenger p2 departs at floor f3, the elevator goes down from floor f1 to floor f4, passenger p8 departs at floor f6, passenger p5 departs at floor f2, passenger p6 departs at floor f0, passenger p3 boards at floor f2, passenger p4 boards at floor f5, the elevator goes up from floor f2 to floor f3, passenger p0 boards at floor f1, the elevator goes down from floor f2 to floor f1, the elevator goes up from floor f4 to floor f5, the elevator goes down from floor f3 to floor f0, the elevator goes down from floor f0 to floor f5, passenger p5 boards at floor f6, the elevator goes up from floor f6 to floor f2, passenger p1 boards at floor f2, the elevator goes up from floor f5 to floor f2, the elevator goes down from floor f3 to floor f5, passenger p1 departs at floor f1, the elevator goes up from floor f5 to floor f1, passenger p6 boards at floor f6, passenger p4 boards at floor f3, the elevator goes down from floor f2 to floor f0, the elevator goes down from floor f5 to floor f6, passenger p8 departs at floor f0, the elevator goes down from floor f1 to floor f3, passenger p8 departs at floor f5, passenger p3 boards at floor f1, the elevator goes down from floor f2 to floor f6, passenger p1 boards at floor f4, passenger p6 boards at floor f2, passenger p0 departs at floor f5, the elevator goes up from floor f3 to floor f6, the elevator goes down from floor f4 to floor f1, the elevator goes up from floor f2 to floor f4, passenger p4 departs at floor f2, passenger p1 boards at floor f1, the elevator goes down from floor f5 to floor f2, passenger p3 boards at floor f4, passenger p1 boards at floor f3, the elevator goes up from floor f4 to floor f6, passenger p3 departs at floor f1, the elevator goes down from floor f5 to floor f0, passenger p5 boards at floor f3, the elevator goes up from floor f2 to floor f5, the elevator goes down from floor f4 to floor f5, passenger p7 departs at floor f2, passenger p7 departs at floor f6, passenger p2 boards at floor f1, the elevator goes down from floor f5 to floor f3, passenger p6 boards at floor f3, passenger p6 departs at floor f6, passenger p6 boards at floor f1, passenger p2 boards at floor f6, passenger p2 departs at floor f1, passenger p3 boards at floor f6, the elevator goes up from floor f6 to floor f5, passenger p6 boards at floor f4, the elevator goes down from floor f1 to floor f2, the elevator goes up from floor f3 to floor f1, the elevator goes up from floor f5 to floor f4, passenger p8 departs at floor f1, the elevator goes down from floor f0 to floor f2, passenger p7 boards at floor f3, passenger p9 departs at floor f4, the elevator goes down from floor f0 to floor f4, passenger p8 boards at floor f1, passenger p0 departs at floor f3, passenger p7 boards at floor f4, the elevator goes down from floor f1 to floor f5, the elevator goes up from floor f5 to floor f3, the elevator goes down from floor f6 to floor f4, passenger p0 departs at floor f0, passenger p9 departs at floor f5, the elevator goes up from floor f3 to floor f4, the elevator goes up from floor f1 to floor f3, passenger p2 departs at floor f2, passenger p2 departs at floor f6, the elevator goes down from floor f5 to floor f1, passenger p9 boards at floor f4, passenger p4 departs at floor f3, passenger p9 boards at floor f2, passenger p5 boards at floor f2, passenger p3 departs at floor f5, passenger p6 departs at floor f1, passenger p9 departs at floor f2, passenger p0 boards at floor f2, the elevator goes up from floor f2 to floor f1, passenger p9 departs at floor f6, passenger p8 departs at floor f3, passenger p7 boards at floor f5, the elevator goes down from floor f4 to floor f2, passenger p8 boards at floor f3 and the elevator goes down from floor f6 to floor f3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "passenger p0 departs at floor f0, passenger p1 departs at floor f0, passenger p2 departs at floor f2, passenger p3 departs at floor f2, passenger p4 departs at floor f3, passenger p5 departs at floor f3, passenger p6 departs at floor f3, passenger p7 departs at floor f3, passenger p8 departs at floor f2, passenger p9 departs at floor f0"}
{"id": "ca5ec0f0-28d3-4c12-92f1-328fbf0e412f", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "None"}
{"id": "3e50fb22-49ec-4fe3-bc30-983465173a71", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p6 departs at floor f3, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p6 departs at floor f3, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "3766b80e-534f-4526-b129-abb4423ba5fd", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5. Is the action: passenger p7 boards at floor f5 executable at step 15, True or False?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 15 the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5. Is the action: passenger p7 boards at floor f5 executable at step 15, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "5aa33060-4bb7-4eaa-907c-14feb5a06baa", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "passenger p5 boards at floor f5, the elevator goes down from floor f5 to floor f4, the elevator goes up from floor f5 to floor f6, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f2, the elevator goes down from floor f5 to floor f0, the elevator goes down from floor f5 to floor f3, passenger p9 departs at floor f5, the elevator goes down from floor f5 to floor f1 and passenger p7 boards at floor f5", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, list all executable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "passenger p0 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes up from floor f2 to floor f3, passenger p4 boards at floor f3, the elevator goes up from floor f3 to floor f4, passenger p5 boards at floor f4 and passenger p7 boards at floor f4 to reach the current state. In this state, list all executable actions."}
{"id": "dfeaf337-ae24-4005-9842-85a7c361f783", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "passenger p9 boards at floor f6, the elevator goes down from floor f6 to floor f2, passenger p2 departs at floor f5, passenger p5 departs at floor f0, the elevator goes up from floor f5 to floor f0, passenger p0 departs at floor f4, passenger p2 boards at floor f5, passenger p2 boards at floor f3, the elevator goes up from floor f0 to floor f2, passenger p4 boards at floor f6, passenger p7 boards at floor f1, passenger p8 departs at floor f2, passenger p7 departs at floor f3, passenger p3 departs at floor f6, passenger p5 boards at floor f0, passenger p1 departs at floor f4, passenger p8 boards at floor f5, passenger p2 boards at floor f4, passenger p1 boards at floor f6, passenger p5 departs at floor f1, the elevator goes up from floor f4 to floor f3, passenger p6 boards at floor f0, the elevator goes up from floor f1 to floor f0, passenger p7 departs at floor f5, passenger p0 departs at floor f1, passenger p1 departs at floor f5, passenger p6 departs at floor f3, the elevator goes down from floor f3 to floor f6, the elevator goes down from floor f0 to floor f1, passenger p5 departs at floor f5, passenger p0 boards at floor f6, the elevator goes up from floor f4 to floor f0, passenger p9 departs at floor f0, the elevator goes up from floor f6 to floor f1, passenger p4 boards at floor f4, passenger p7 departs at floor f0, passenger p5 boards at floor f1, the elevator goes up from floor f4 to floor f1, passenger p6 departs at floor f2, passenger p0 boards at floor f0, passenger p7 departs at floor f1, passenger p5 departs at floor f3, the elevator goes up from floor f1 to floor f2, the elevator goes down from floor f0 to floor f3, passenger p9 boards at floor f1, passenger p4 departs at floor f5, passenger p9 departs at floor f3, the elevator goes down from floor f1 to floor f0, passenger p4 departs at floor f6, passenger p7 boards at floor f2, passenger p4 boards at floor f1, the elevator goes down from floor f2 to floor f3, passenger p8 departs at floor f4, the elevator goes down from floor f0 to floor f6, the elevator goes up from floor f1 to floor f6, passenger p3 departs at floor f0, passenger p0 boards at floor f3, the elevator goes up from floor f3 to floor f0, passenger p7 boards at floor f6, passenger p1 boards at floor f5, passenger p1 departs at floor f2, the elevator goes up from floor f0 to floor f5, passenger p2 departs at floor f0, passenger p6 departs at floor f5, the elevator goes up from floor f1 to floor f4, the elevator goes down from floor f3 to floor f4, passenger p8 boards at floor f0, passenger p3 departs at floor f2, passenger p6 departs at floor f4, passenger p3 boards at floor f3, passenger p9 boards at floor f5, passenger p7 boards at floor f0, passenger p4 departs at floor f0, the elevator goes up from floor f6 to floor f3, the elevator goes down from floor f6 to floor f0, passenger p4 boards at floor f0, passenger p1 departs at floor f0, passenger p3 boards at floor f5, the elevator goes up from floor f2 to floor f0, passenger p4 departs at floor f1, passenger p8 boards at floor f6, the elevator goes up from floor f3 to floor f5, the elevator goes down from floor f4 to floor f0, passenger p2 departs at floor f4, passenger p5 boards at floor f4, passenger p4 boards at floor f2, passenger p0 departs at floor f6, passenger p3 boards at floor f0, passenger p3 departs at floor f4, the elevator goes down from floor f2 to floor f5, passenger p8 boards at floor f4, passenger p0 departs at floor f2, passenger p2 boards at floor f0, passenger p5 departs at floor f4, passenger p5 departs at floor f6, the elevator goes down from floor f6 to floor f5, the elevator goes up from floor f4 to floor f2, passenger p0 boards at floor f5, the elevator goes down from floor f6 to floor f1, the elevator goes down from floor f1 to floor f6, the elevator goes up from floor f3 to floor f2, passenger p3 departs at floor f3, passenger p1 departs at floor f6, passenger p9 boards at floor f3, passenger p0 boards at floor f4, the elevator goes up from floor f2 to floor f6, passenger p9 departs at floor f1, passenger p1 departs at floor f3, the elevator goes down from floor f3 to floor f2, passenger p4 departs at floor f4, passenger p8 boards at floor f2, the elevator goes down from floor f2 to floor f4, passenger p2 boards at floor f2, passenger p7 departs at floor f4, the elevator goes down from floor f3 to floor f1, the elevator goes up from floor f6 to floor f0, the elevator goes up from floor f1 to floor f5, the elevator goes up from floor f6 to floor f4, the elevator goes down from floor f4 to floor f6, passenger p6 boards at floor f5, the elevator goes down from floor f4 to floor f3, passenger p2 departs at floor f3, the elevator goes down from floor f1 to floor f4, passenger p8 departs at floor f6, passenger p5 departs at floor f2, passenger p6 departs at floor f0, passenger p3 boards at floor f2, passenger p4 boards at floor f5, the elevator goes up from floor f2 to floor f3, passenger p0 boards at floor f1, the elevator goes down from floor f2 to floor f1, the elevator goes up from floor f0 to floor f6, the elevator goes up from floor f4 to floor f5, the elevator goes down from floor f3 to floor f0, the elevator goes down from floor f0 to floor f5, passenger p5 boards at floor f6, the elevator goes up from floor f6 to floor f2, passenger p1 boards at floor f2, the elevator goes up from floor f5 to floor f2, the elevator goes down from floor f3 to floor f5, passenger p1 departs at floor f1, the elevator goes up from floor f5 to floor f1, passenger p6 boards at floor f6, passenger p4 boards at floor f3, the elevator goes down from floor f2 to floor f0, the elevator goes down from floor f5 to floor f6, passenger p8 departs at floor f0, the elevator goes down from floor f1 to floor f3, passenger p8 departs at floor f5, passenger p3 boards at floor f1, the elevator goes down from floor f2 to floor f6, passenger p1 boards at floor f4, passenger p6 boards at floor f2, the elevator goes up from floor f3 to floor f6, the elevator goes down from floor f4 to floor f1, the elevator goes up from floor f2 to floor f4, passenger p4 departs at floor f2, passenger p1 boards at floor f1, the elevator goes up from floor f0 to floor f1, passenger p3 boards at floor f4, passenger p1 boards at floor f3, the elevator goes up from floor f4 to floor f6, passenger p1 boards at floor f0, passenger p3 departs at floor f1, passenger p5 boards at floor f3, the elevator goes up from floor f2 to floor f5, the elevator goes down from floor f4 to floor f5, passenger p7 departs at floor f2, passenger p7 departs at floor f6, passenger p2 boards at floor f1, passenger p6 boards at floor f3, passenger p6 departs at floor f6, passenger p6 boards at floor f1, passenger p2 boards at floor f6, passenger p2 departs at floor f1, passenger p3 boards at floor f6, the elevator goes up from floor f6 to floor f5, passenger p6 boards at floor f4, the elevator goes down from floor f1 to floor f2, the elevator goes up from floor f3 to floor f1, the elevator goes up from floor f5 to floor f4, passenger p8 departs at floor f1, the elevator goes down from floor f0 to floor f2, passenger p7 boards at floor f3, passenger p9 departs at floor f4, the elevator goes down from floor f0 to floor f4, passenger p8 boards at floor f1, passenger p0 departs at floor f3, passenger p7 boards at floor f4, the elevator goes down from floor f1 to floor f5, the elevator goes up from floor f5 to floor f3, the elevator goes down from floor f6 to floor f4, passenger p9 boards at floor f0, passenger p0 departs at floor f0, the elevator goes up from floor f3 to floor f4, the elevator goes up from floor f1 to floor f3, passenger p2 departs at floor f2, passenger p2 departs at floor f6, passenger p9 boards at floor f4, passenger p4 departs at floor f3, passenger p9 boards at floor f2, passenger p5 boards at floor f2, passenger p3 departs at floor f5, passenger p6 departs at floor f1, passenger p9 departs at floor f2, passenger p0 boards at floor f2, the elevator goes up from floor f2 to floor f1, passenger p9 departs at floor f6, the elevator goes up from floor f0 to floor f3, passenger p8 departs at floor f3, the elevator goes down from floor f4 to floor f2, passenger p8 boards at floor f3, the elevator goes down from floor f6 to floor f3 and the elevator goes up from floor f0 to floor f4", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "passenger p9 boards at floor f0, passenger p6 boards at floor f1, passenger p3 boards at floor f2, passenger p3 departs at floor f0, passenger p4 boards at floor f4, passenger p5 boards at floor f5, passenger p7 boards at floor f5"}
{"id": "294b0e51-ca01-4d89-b21c-c9aa14c3de99", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "Passenger p2 boards at floor f2"}
{"id": "f1842a63-198a-4548-a9f3-da6172d1add1", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, passenger p7 departs at floor f1, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, passenger p7 departs at floor f1, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "959223ab-1dfb-4da7-a7a8-d8edcc4dbe49", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes down from floor f1 to floor f2, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3. Is the action: the elevator goes down from floor f1 to floor f2 executable at step 13, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 19 the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes down from floor f1 to floor f2, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3. Is the action: the elevator goes down from floor f1 to floor f2 executable at step 13, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "e97e62dc-96e7-446d-868a-6ab7fd23b930", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "passenger p6 departs at floor f3, passenger p5 departs at floor f3, the elevator goes up from floor f3 to floor f5, the elevator goes down from floor f3 to floor f2, the elevator goes down from floor f3 to floor f1, the elevator goes down from floor f3 to floor f0, the elevator goes up from floor f3 to floor f6, the elevator goes up from floor f3 to floor f4 and passenger p4 departs at floor f3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, list all executable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": ","}
{"id": "b6aac6ee-6d64-4587-bcea-f82e2d9562c4", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "passenger p9 boards at floor f6, the elevator goes down from floor f6 to floor f2, passenger p2 departs at floor f5, passenger p5 departs at floor f0, the elevator goes up from floor f5 to floor f0, passenger p0 departs at floor f4, passenger p2 boards at floor f5, passenger p2 boards at floor f3, the elevator goes up from floor f0 to floor f2, passenger p4 boards at floor f6, passenger p7 boards at floor f1, passenger p8 departs at floor f2, passenger p7 departs at floor f3, passenger p3 departs at floor f6, passenger p5 boards at floor f0, passenger p1 departs at floor f4, passenger p8 boards at floor f5, passenger p2 boards at floor f4, passenger p1 boards at floor f6, passenger p5 departs at floor f1, the elevator goes up from floor f4 to floor f3, passenger p6 boards at floor f0, the elevator goes up from floor f1 to floor f0, passenger p7 departs at floor f5, passenger p0 departs at floor f1, passenger p1 departs at floor f5, the elevator goes down from floor f3 to floor f6, the elevator goes down from floor f0 to floor f1, passenger p5 departs at floor f5, passenger p0 boards at floor f6, the elevator goes up from floor f4 to floor f0, passenger p9 departs at floor f0, the elevator goes up from floor f6 to floor f1, passenger p4 boards at floor f4, passenger p7 departs at floor f0, passenger p5 boards at floor f1, the elevator goes up from floor f4 to floor f1, passenger p6 departs at floor f2, passenger p0 boards at floor f0, passenger p7 departs at floor f1, the elevator goes up from floor f1 to floor f2, the elevator goes down from floor f0 to floor f3, passenger p9 boards at floor f1, passenger p4 departs at floor f5, passenger p9 departs at floor f3, the elevator goes down from floor f1 to floor f0, passenger p4 departs at floor f6, passenger p7 boards at floor f2, passenger p4 boards at floor f1, the elevator goes down from floor f2 to floor f3, passenger p8 departs at floor f4, the elevator goes down from floor f0 to floor f6, the elevator goes up from floor f1 to floor f6, passenger p3 departs at floor f0, passenger p0 boards at floor f3, the elevator goes up from floor f3 to floor f0, passenger p7 boards at floor f6, passenger p1 boards at floor f5, passenger p1 departs at floor f2, the elevator goes up from floor f0 to floor f5, passenger p2 departs at floor f0, passenger p6 departs at floor f5, the elevator goes up from floor f1 to floor f4, the elevator goes down from floor f3 to floor f4, passenger p8 boards at floor f0, passenger p3 departs at floor f2, passenger p6 departs at floor f4, passenger p3 boards at floor f3, passenger p9 boards at floor f5, passenger p7 boards at floor f0, passenger p4 departs at floor f0, the elevator goes up from floor f6 to floor f3, the elevator goes down from floor f6 to floor f0, passenger p4 boards at floor f0, passenger p1 departs at floor f0, passenger p5 boards at floor f5, passenger p3 boards at floor f5, the elevator goes up from floor f2 to floor f0, passenger p4 departs at floor f1, passenger p8 boards at floor f6, the elevator goes down from floor f4 to floor f0, passenger p2 departs at floor f4, passenger p5 boards at floor f4, passenger p4 boards at floor f2, passenger p0 departs at floor f6, passenger p3 boards at floor f0, passenger p3 departs at floor f4, the elevator goes down from floor f2 to floor f5, passenger p8 boards at floor f4, passenger p0 departs at floor f2, the elevator goes down from floor f5 to floor f4, passenger p2 boards at floor f0, passenger p5 departs at floor f4, passenger p5 departs at floor f6, the elevator goes down from floor f6 to floor f5, the elevator goes up from floor f4 to floor f2, passenger p0 boards at floor f5, the elevator goes up from floor f5 to floor f6, the elevator goes down from floor f6 to floor f1, the elevator goes down from floor f1 to floor f6, the elevator goes up from floor f3 to floor f2, passenger p3 departs at floor f3, passenger p1 departs at floor f6, passenger p9 boards at floor f3, passenger p0 boards at floor f4, the elevator goes up from floor f2 to floor f6, passenger p9 departs at floor f1, passenger p1 departs at floor f3, passenger p4 departs at floor f4, passenger p8 boards at floor f2, the elevator goes down from floor f2 to floor f4, passenger p2 boards at floor f2, passenger p7 departs at floor f4, the elevator goes up from floor f6 to floor f0, the elevator goes up from floor f1 to floor f5, the elevator goes up from floor f6 to floor f4, the elevator goes down from floor f4 to floor f6, passenger p6 boards at floor f5, the elevator goes down from floor f4 to floor f3, passenger p2 departs at floor f3, the elevator goes down from floor f1 to floor f4, passenger p8 departs at floor f6, passenger p5 departs at floor f2, passenger p6 departs at floor f0, passenger p3 boards at floor f2, passenger p4 boards at floor f5, the elevator goes up from floor f2 to floor f3, passenger p0 boards at floor f1, the elevator goes down from floor f2 to floor f1, the elevator goes up from floor f0 to floor f6, the elevator goes up from floor f4 to floor f5, the elevator goes down from floor f0 to floor f5, passenger p5 boards at floor f6, the elevator goes up from floor f6 to floor f2, passenger p1 boards at floor f2, the elevator goes up from floor f5 to floor f2, the elevator goes down from floor f3 to floor f5, passenger p1 departs at floor f1, the elevator goes up from floor f5 to floor f1, passenger p6 boards at floor f6, passenger p4 boards at floor f3, the elevator goes down from floor f2 to floor f0, the elevator goes down from floor f5 to floor f6, passenger p8 departs at floor f0, the elevator goes down from floor f1 to floor f3, passenger p8 departs at floor f5, passenger p3 boards at floor f1, the elevator goes down from floor f2 to floor f6, passenger p1 boards at floor f4, passenger p6 boards at floor f2, passenger p0 departs at floor f5, the elevator goes down from floor f4 to floor f1, the elevator goes up from floor f2 to floor f4, passenger p4 departs at floor f2, passenger p1 boards at floor f1, the elevator goes up from floor f0 to floor f1, the elevator goes down from floor f5 to floor f2, passenger p3 boards at floor f4, passenger p1 boards at floor f3, the elevator goes up from floor f4 to floor f6, passenger p1 boards at floor f0, passenger p3 departs at floor f1, the elevator goes down from floor f5 to floor f0, passenger p5 boards at floor f3, the elevator goes up from floor f2 to floor f5, the elevator goes down from floor f4 to floor f5, passenger p7 departs at floor f2, passenger p7 departs at floor f6, passenger p2 boards at floor f1, the elevator goes down from floor f5 to floor f3, passenger p6 boards at floor f3, passenger p6 departs at floor f6, passenger p6 boards at floor f1, passenger p2 boards at floor f6, passenger p2 departs at floor f1, passenger p3 boards at floor f6, the elevator goes up from floor f6 to floor f5, passenger p6 boards at floor f4, the elevator goes down from floor f1 to floor f2, the elevator goes up from floor f3 to floor f1, the elevator goes up from floor f5 to floor f4, passenger p8 departs at floor f1, the elevator goes down from floor f0 to floor f2, passenger p7 boards at floor f3, passenger p9 departs at floor f4, the elevator goes down from floor f0 to floor f4, passenger p8 boards at floor f1, passenger p0 departs at floor f3, passenger p7 boards at floor f4, the elevator goes down from floor f1 to floor f5, the elevator goes up from floor f5 to floor f3, the elevator goes down from floor f6 to floor f4, passenger p9 boards at floor f0, passenger p0 departs at floor f0, passenger p9 departs at floor f5, the elevator goes up from floor f1 to floor f3, passenger p2 departs at floor f2, passenger p2 departs at floor f6, the elevator goes down from floor f5 to floor f1, passenger p9 boards at floor f4, passenger p9 boards at floor f2, passenger p5 boards at floor f2, passenger p3 departs at floor f5, passenger p6 departs at floor f1, passenger p9 departs at floor f2, passenger p0 boards at floor f2, the elevator goes up from floor f2 to floor f1, passenger p9 departs at floor f6, the elevator goes up from floor f0 to floor f3, passenger p8 departs at floor f3, passenger p7 boards at floor f5, the elevator goes down from floor f4 to floor f2, passenger p8 boards at floor f3, the elevator goes down from floor f6 to floor f3 and the elevator goes up from floor f0 to floor f4", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "- passenger p4 boards at floor f5\n- passenger p7 boards at floor f5\n- passenger p1 boards at floor f2\n- passenger p1 departs at floor f2\n- passenger p3 boards at floor f2\n- passenger p4 boards at floor f4\n- the elevator goes up from floor f0 to floor f5\n- passenger p0 boards at floor f5\n- passenger p5 boards at floor f5"}
{"id": "76c28d19-eb9b-433c-ad13-ae4ff393cd82", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p8 departs at floor f1, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "passenger p8 departs at floor f1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p8 departs at floor f1, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "passenger p6 boards at floor f1"}
{"id": "4316b303-14ca-430e-b16b-a6877e8c834c", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, if passenger p1 boards at floor f0, is it True or False that passenger p1 is boarded?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, if passenger p1 boards at floor f0, is it True or False that passenger p1 is boarded?\n\n[ANSWER]:\n", "response": "True"}
{"id": "707a827a-5437-4cd3-8ae9-51d1c6b7c1ab", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, if passenger p1 boards at floor f0, is it True or False that destination of passenger p1 is not floor f4?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, if passenger p1 boards at floor f0, is it True or False that destination of passenger p1 is not floor f4?\n\n[ANSWER]:\n", "response": "True"}
{"id": "4f849c6d-a4ce-408b-8ac7-4e052d2dc14a", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, if passenger p1 boards at floor f0, what would be all of the valid properties of the state? Write None if there are none.", "answer": "destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f3, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, passenger p1 is boarded, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, destination of passenger p7 is floor f3, floor f5 is above floor f2, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p0 is boarded, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f4, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, if passenger p1 boards at floor f0, what would be all of the valid properties of the state? Write None if there are none.\n\n[ANSWER]:\n", "response": ","}
{"id": "750f64f0-b81e-43f5-9c82-a354d8e05829", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, if passenger p1 boards at floor f0, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p3 is not served, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p5 is not boarded, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, passenger p4 is not boarded, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, passenger p2 is not boarded, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, passenger p9 is not boarded, lift is not at floor f5, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p6 is not boarded, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, if passenger p1 boards at floor f0, what would be all of the valid properties of the state that involve negations? Write None if there are none.\n\n[ANSWER]:\n", "response": "- passenger p1 is not boarded\n- passenger p1 is not served"}
{"id": "9820c7b7-0f0d-40f0-a33d-5ce82d7b34a8", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, if the elevator goes up from floor f1 to floor f2, is it True or False that lift is not at floor f1 and lift is at floor f2?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, if the elevator goes up from floor f1 to floor f2, is it True or False that lift is not at floor f1 and lift is at floor f2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "d0b3a7f3-d3ee-4c3c-ba50-e421256507b9", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, if the elevator goes up from floor f1 to floor f2, is it True or False that lift is not at floor f1 and passenger p9 does not enter at floor f6?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, if the elevator goes up from floor f1 to floor f2, is it True or False that lift is not at floor f1 and passenger p9 does not enter at floor f6?\n\n[ANSWER]:\n", "response": "False"}
{"id": "59677656-fcfe-40ad-874f-2be0eeb0071a", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, if the elevator goes up from floor f1 to floor f2, what would be all of the valid properties of the state? Write None if there are none.", "answer": "destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p9 is boarded, passenger p3 enters at floor f2, floor f6 is above floor f3, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, lift is at floor f2, destination of passenger p1 is floor f2, passenger p1 is boarded, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, destination of passenger p7 is floor f3, floor f5 is above floor f2, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p0 is boarded, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, passenger p6 is boarded, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f4, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, if the elevator goes up from floor f1 to floor f2, what would be all of the valid properties of the state? Write None if there are none.\n\n[ANSWER]:\n", "response": "- lift is at floor f2\n- destination of passenger p3 is floor f0\n- destination of passenger p2 is floor f6\n- destination of passenger p4 is floor f3\n- floor f1 is above floor f0\n- floor f2 is above floor f1\n- floor f6 is above floor f5\n- floor f6 is above floor f1\n- passenger p7 is boarded\n- passenger p4 is boarded\n- floor f5 is above floor f4\n- destination of passenger p5 is floor f3 \n- passenger p5 is boarded\n- passenger p3 is boarded \n- floor f6 is above floor f4\n- floor f6 is above floor f0\n- floor f5 is above floor f1\n- floor f6 is above floor f2\n- destination of passenger p0 is floor f5\n- passenger p1 is boarded\n- destination of passenger p1 is floor f2\n- floor f3 is above floor f2\n- passenger p2 is boarded\n- floor f4 is above floor f3\n- floor f4 is above floor f0\n- floor f4 is above floor f1\n- passenger p0 is boarded\n- floor f5 is above floor f2\n- destination of passenger p7 is floor f3\n- passenger p6 is boarded\n- floor f3 is above floor f1\n- floor f2 is above floor f0\n- passenger p8 is boarded\n- passenger p9 is boarded\n- floor f3 is above floor f0\n- floor f5 is above floor f0\n- floor f4 is above floor f2\n- destination of passenger p9 is floor f5\n- floor f5 is above floor f3\n- floor f6 is above floor f3"}
{"id": "6bce716e-09a0-418e-a8dc-9f0ff6ae157b", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, if the elevator goes up from floor f1 to floor f2, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, lift is not at floor f0, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p3 is not served, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p5 is not boarded, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, passenger p4 is not boarded, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, passenger p2 is not boarded, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, lift is not at floor f5, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, if the elevator goes up from floor f1 to floor f2, what would be all of the valid properties of the state that involve negations? Write None if there are none.\n\n[ANSWER]:\n", "response": "-  destination of p3 is floor f0\n- destination of p2 is floor f0\n- p4 at floor f5\n- destination of p0 is floor f0\n- destination of p8 is floor f5\n- p5 at floor f5\n- p1 at floor f0\n- lift is at floor f2\n- destination of p6 is floor f0"}
{"id": "49e6737a-f7a2-4a44-b9ba-a362be11933a", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, if the elevator goes up from floor f0 to floor f4, is it True or False that lift is at floor f4 and lift is not at floor f0?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, if the elevator goes up from floor f0 to floor f4, is it True or False that lift is at floor f4 and lift is not at floor f0?\n\n[ANSWER]:\n", "response": "True"}
{"id": "0fadb29d-e97d-45d3-bda9-48fb3a4346a6", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, if the elevator goes up from floor f0 to floor f4, is it True or False that passenger p6 is not served and lift is not at floor f0?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, if the elevator goes up from floor f0 to floor f4, is it True or False that passenger p6 is not served and lift is not at floor f0?\n\n[ANSWER]:\n", "response": "True"}
{"id": "81d43736-c3b9-447b-9d98-c527e5dff731", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, if the elevator goes up from floor f0 to floor f4, what would be all of the valid properties of the state? Write None if there are none.", "answer": "lift is at floor f4, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p9 is boarded, passenger p3 enters at floor f2, floor f6 is above floor f3, passenger p2 is boarded, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, passenger p3 is served, destination of passenger p1 is floor f2, passenger p1 is boarded, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, destination of passenger p7 is floor f3, floor f5 is above floor f2, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p0 is boarded, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, passenger p6 is boarded, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f4, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, if the elevator goes up from floor f0 to floor f4, what would be all of the valid properties of the state? Write None if there are none.\n\n[ANSWER]:\n", "response": "- passenger p0 is boarded\n- passenger p1 is boarded\n- passenger p9 is boarded\n- passenger p6 is boarded\n- passenger p2 is boarded\n- passenger p8 is boarded\n- lift is at floor f4\n- destination of passenger p0 is floor f5\n- destination of passenger p1 is floor f2\n- destination of passenger p2 is floor f6\n- destination of passenger p6 is floor f3\n- destination of passenger p8 is floor f2\n- destination of passenger p9 is floor f5"}
{"id": "7889fb99-3911-40a2-ad01-baad3f859a5e", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, if the elevator goes up from floor f0 to floor f4, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, lift is not at floor f0, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p5 is not boarded, passenger p6 does not enter at floor f0, passenger p9 is not served, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, destination of passenger p0 is not floor f6, passenger p4 is not boarded, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, lift is not at floor f5, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, if the elevator goes up from floor f0 to floor f4, what would be all of the valid properties of the state that involve negations? Write None if there are none.\n\n[ANSWER]:\n", "response": "- passenger p3 is not boarded\n- passenger p3 is not served\n- passenger p0 is not on floor f0\n- passenger p0 is not on floor f1\n- passenger p0 is not on floor f2\n- passenger p0 is not on floor f3\n- passenger p0 is not on floor f4\n- passenger p0 is not on floor f5\n- passenger p0 is not on floor f6\n- passenger p1 is not on floor f0\n- passenger p1 is not on floor f1\n- passenger p1 is not on floor f2\n- passenger p1 is not on floor f3\n- passenger p1 is not on floor f4\n- passenger p1 is not on floor f5\n- passenger p1 is not on floor f6\n- passenger p9 is not on floor f0\n- passenger p9 is not on floor f1\n- passenger p9 is not on floor f2\n- passenger p9 is not on floor f3\n- passenger p9 is not on floor f4\n- passenger p9 is not on floor f5\n- passenger p9 is not on floor f6\n- passenger p6 is not on floor f0\n- passenger p6 is not on floor f1\n- passenger p6 is not on floor f2\n- passenger p6 is not on floor f3\n- passenger p6 is not on floor f4\n- passenger p6 is not on floor f5\n- passenger p6 is not on floor f6\n- passenger p2 is not on floor f0\n- passenger p2 is not on floor f1\n- passenger p2 is not on floor f2\n- passenger p2 is not on floor f3\n- passenger p2 is not on floor f4\n- passenger p2 is not on floor f5\n- passenger p2 is not on floor f6\n- elevator is not on floor f0\n- elevator is not on floor f1\n- elevator is not on floor f2\n- elevator is not on floor f3\n- elevator is not on floor f5\n- elevator is not on floor f6"}
{"id": "d90cbc24-a8c0-44b8-9a4f-3337ec02ad53", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, if passenger p9 departs at floor f5, is it True or False that passenger p9 is served and passenger p9 is not boarded?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, if passenger p9 departs at floor f5, is it True or False that passenger p9 is served and passenger p9 is not boarded?\n\n[ANSWER]:\n", "response": "True"}
{"id": "bc2d2105-b8f0-4845-9544-75f6a8ee0fa4", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, if passenger p9 departs at floor f5, is it True or False that passenger p9 is served and passenger p5 does not enter at floor f6?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, if passenger p9 departs at floor f5, is it True or False that passenger p9 is served and passenger p5 does not enter at floor f6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "18c39964-1165-4cb4-b583-16e31ccdc48a", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, if passenger p9 departs at floor f5, what would be all of the valid properties of the state? Write None if there are none.", "answer": "destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p7 is boarded, passenger p3 enters at floor f2, floor f6 is above floor f3, passenger p2 is boarded, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, passenger p9 is served, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, passenger p3 is served, destination of passenger p1 is floor f2, passenger p5 is boarded, passenger p1 is boarded, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, passenger p4 is boarded, floor f4 is above floor f1, passenger p0 enters at floor f0, destination of passenger p7 is floor f3, floor f5 is above floor f2, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p0 is boarded, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, passenger p6 is boarded, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, lift is at floor f5, floor f6 is above floor f4, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, if passenger p9 departs at floor f5, what would be all of the valid properties of the state? Write None if there are none.\n\n[ANSWER]:\n", "response": "- passenger p9 is served\n- passenger p9 is not boarded\n- the lift is on floor f5\n- the lift is not on floor f0\n- the lift is not on floor f1\n- the lift is not on floor f2\n- the lift is not on floor f3\n- the lift is not on floor f4\n- the lift is not on floor f6"}
{"id": "5dee4b56-3d12-42da-bb4e-19a2176c55dc", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, if passenger p9 departs at floor f5, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, lift is not at floor f3, destination of passenger p6 is not floor f0, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p5 is not floor f4, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, lift is not at floor f0, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p6 is not served, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p6 does not enter at floor f0, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, passenger p0 is not served, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, passenger p9 is not boarded, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p7 is not served, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, if passenger p9 departs at floor f5, what would be all of the valid properties of the state that involve negations? Write None if there are none.\n\n[ANSWER]:\n", "response": "- p9 is not boarded\n- p9 is not served"}
{"id": "35ba8ded-2dd6-4e23-8a21-ebfab94e621c", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, if passenger p6 departs at floor f3, is it True or False that passenger p6 is served and passenger p6 is not boarded?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, if passenger p6 departs at floor f3, is it True or False that passenger p6 is served and passenger p6 is not boarded?\n\n[ANSWER]:\n", "response": "True"}
{"id": "76ad2fb0-c710-4862-9a9c-b01d48fe01ea", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, if passenger p6 departs at floor f3, is it True or False that destination of passenger p2 is not floor f3 and passenger p6 is not boarded?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, if passenger p6 departs at floor f3, is it True or False that destination of passenger p2 is not floor f3 and passenger p6 is not boarded?\n\n[ANSWER]:\n", "response": "False"}
{"id": "f802d149-85bf-475e-a79d-1e7779c2a978", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, if passenger p6 departs at floor f3, what would be all of the valid properties of the state? Write None if there are none.", "answer": "destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f3, passenger p2 is boarded, floor f5 is above floor f1, floor f6 is above floor f2, floor f6 is above floor f0, passenger p9 is served, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, passenger p3 is served, destination of passenger p1 is floor f2, passenger p7 is served, passenger p5 is boarded, passenger p1 is boarded, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, passenger p4 is boarded, floor f4 is above floor f1, passenger p0 enters at floor f0, destination of passenger p7 is floor f3, floor f5 is above floor f2, passenger p0 is served, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, lift is at floor f3, passenger p6 is served, floor f6 is above floor f4, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, if passenger p6 departs at floor f3, what would be all of the valid properties of the state? Write None if there are none.\n\n[ANSWER]:\n", "response": "- passenger p1 is boarded\n- passenger p2 is boarded\n- passenger p4 is boarded\n- passenger p5 is boarded\n- passenger p8 is boarded\n- lift is at floor f3\n- destination of passenger p6 is floor f3"}
{"id": "40ea19c3-c8c0-4a8d-bdb5-483a4817ab5a", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, if passenger p6 departs at floor f3, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "passenger p4 does not enter at floor f1, passenger p4 does not enter at floor f2, destination of passenger p6 is not floor f0, destination of passenger p5 is not floor f4, destination of passenger p3 is not floor f4, passenger p8 does not enter at floor f0, destination of passenger p4 is not floor f6, destination of passenger p2 is not floor f5, passenger p3 is not boarded, destination of passenger p2 is not floor f4, destination of passenger p0 is not floor f1, passenger p9 does not enter at floor f4, destination of passenger p6 is not floor f1, passenger p2 does not enter at floor f3, passenger p6 does not enter at floor f6, lift is not at floor f0, passenger p4 does not enter at floor f6, destination of passenger p4 is not floor f4, passenger p4 does not enter at floor f3, passenger p7 is not boarded, passenger p9 does not enter at floor f2, passenger p5 does not enter at floor f0, passenger p3 does not enter at floor f0, destination of passenger p0 is not floor f4, passenger p6 does not enter at floor f2, passenger p8 does not enter at floor f5, floor f3 is not above floor f5, destination of passenger p7 is not floor f6, passenger p6 does not enter at floor f3, destination of passenger p7 is not floor f2, passenger p5 does not enter at floor f2, floor f2 is not above floor f5, passenger p6 does not enter at floor f4, floor f1 is not above floor f5, lift is not at floor f2, passenger p7 does not enter at floor f3, passenger p7 does not enter at floor f2, passenger p3 does not enter at floor f3, destination of passenger p2 is not floor f0, destination of passenger p6 is not floor f2, passenger p9 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p1 is not floor f5, passenger p9 does not enter at floor f1, passenger p3 does not enter at floor f4, passenger p6 does not enter at floor f0, destination of passenger p1 is not floor f0, passenger p3 does not enter at floor f6, destination of passenger p3 is not floor f6, destination of passenger p4 is not floor f0, destination of passenger p2 is not floor f2, passenger p2 is not served, passenger p7 does not enter at floor f6, passenger p8 is not served, destination of passenger p1 is not floor f6, floor f2 is not above floor f6, destination of passenger p1 is not floor f3, destination of passenger p6 is not floor f5, destination of passenger p5 is not floor f6, destination of passenger p0 is not floor f3, passenger p8 does not enter at floor f4, destination of passenger p1 is not floor f1, lift is not at floor f4, destination of passenger p0 is not floor f6, destination of passenger p6 is not floor f6, passenger p1 does not enter at floor f5, destination of passenger p3 is not floor f1, destination of passenger p8 is not floor f5, floor f1 is not above floor f2, destination of passenger p8 is not floor f0, passenger p4 does not enter at floor f5, lift is not at floor f6, destination of passenger p3 is not floor f5, destination of passenger p5 is not floor f0, destination of passenger p5 is not floor f2, destination of passenger p9 is not floor f3, passenger p5 does not enter at floor f1, destination of passenger p3 is not floor f2, passenger p7 does not enter at floor f4, passenger p2 does not enter at floor f0, floor f0 is not above floor f1, destination of passenger p7 is not floor f5, destination of passenger p8 is not floor f1, passenger p0 does not enter at floor f4, passenger p9 does not enter at floor f5, destination of passenger p1 is not floor f4, destination of passenger p8 is not floor f6, destination of passenger p4 is not floor f2, passenger p0 does not enter at floor f1, floor f0 is not above floor f4, passenger p1 does not enter at floor f3, floor f1 is not above floor f4, passenger p1 does not enter at floor f1, destination of passenger p7 is not floor f1, passenger p8 is not boarded, floor f0 is not above floor f3, passenger p8 does not enter at floor f3, passenger p8 does not enter at floor f2, floor f0 is not above floor f6, passenger p4 does not enter at floor f0, destination of passenger p9 is not floor f6, passenger p9 is not boarded, lift is not at floor f5, lift is not at floor f1, passenger p8 does not enter at floor f1, floor f2 is not above floor f3, floor f3 is not above floor f6, floor f1 is not above floor f3, destination of passenger p9 is not floor f1, floor f0 is not above floor f2, destination of passenger p4 is not floor f5, passenger p0 does not enter at floor f6, destination of passenger p9 is not floor f2, destination of passenger p8 is not floor f4, destination of passenger p0 is not floor f0, passenger p1 does not enter at floor f2, destination of passenger p5 is not floor f1, passenger p2 does not enter at floor f6, destination of passenger p7 is not floor f0, passenger p7 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p9 does not enter at floor f6, passenger p3 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f1, passenger p1 does not enter at floor f4, passenger p0 does not enter at floor f2, passenger p4 is not served, destination of passenger p2 is not floor f1, destination of passenger p9 is not floor f0, floor f1 is not above floor f6, passenger p0 does not enter at floor f3, floor f2 is not above floor f4, passenger p6 is not boarded, passenger p3 does not enter at floor f5, destination of passenger p3 is not floor f3, floor f0 is not above floor f5, destination of passenger p2 is not floor f3, floor f4 is not above floor f5, destination of passenger p5 is not floor f5, destination of passenger p0 is not floor f2, floor f3 is not above floor f4, passenger p5 is not served, passenger p0 is not boarded, passenger p5 does not enter at floor f3, passenger p7 does not enter at floor f0, passenger p5 does not enter at floor f4, destination of passenger p4 is not floor f1, floor f4 is not above floor f6, passenger p6 does not enter at floor f5, passenger p5 does not enter at floor f6, destination of passenger p9 is not floor f4, passenger p2 does not enter at floor f5, passenger p1 does not enter at floor f6, destination of passenger p8 is not floor f3, passenger p2 does not enter at floor f4, passenger p1 is not served and floor f5 is not above floor f6", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, if passenger p6 departs at floor f3, what would be all of the valid properties of the state that involve negations? Write None if there are none.\n\n[ANSWER]:\n", "response": "Passenger psetViewportViewed"}
{"id": "ad58ec2c-fb3a-42ed-b863-c1295cc3368b", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, is the number of objects equal to 13? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, is the number of objects equal to 13? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "a174a15c-ef7c-4148-b358-a180c58e8b36", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, is the number of executable actions equal to 11? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, is the number of executable actions equal to 11? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "da00aa10-9075-415b-9742-2c0a1cd10faf", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, is the number of inexecutable actions equal to 197? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, is the number of inexecutable actions equal to 197? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "b9940f90-bc2a-4e03-a80f-f8989888fc4c", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "b48294a6-8299-411b-9309-fdb02e766c3b", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "17", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "71ab058a-a101-45a3-a9fd-38cac9db75e3", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "43", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "9.0"}
{"id": "d5670c51-afea-43e6-af70-54b98aad9f76", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "166", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "0.3333333333333333"}
{"id": "40161901-0059-4213-a0c4-a0c4a734b44d", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "9", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "0d6ab325-14d1-47ae-aa80-9ce8bb7124da", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "215", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "None"}
{"id": "9689dfea-7262-45a7-aca5-0ab9f9988ee9", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: the elevator goes up from floor f3 to floor f6 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: the elevator goes up from floor f3 to floor f6 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "29478d43-802c-4b0b-b009-e653a0a71359", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, is the number of objects equal to 17? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "245531d2-e69e-4758-87a6-4de1a3a6ebdc", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, is the number of executable actions equal to 7? True or False", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, is the number of executable actions equal to 7? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "a89b15ce-2555-477c-a13f-e7b36cf86f9d", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, is the number of inexecutable actions equal to 217? True or False", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, is the number of inexecutable actions equal to 217? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "adceb0a5-96ec-46dd-8f9a-f975f5112522", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 5?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 5?\n\n[ANSWER]:\n", "response": "True"}
{"id": "fe7782ec-ce6a-4440-ab5a-271259531797", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "17", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "14"}
{"id": "934d8210-28fc-46d2-b8d9-0458a5d81d53", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "46", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "7.0"}
{"id": "cb9b5a20-e461-4ac2-a1b1-3c514913dab2", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "163", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "0.25"}
{"id": "256e34af-4bca-4879-a56f-0bc51fb906a5", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "7", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "2.0"}
{"id": "f6de1d02-dc5d-451d-91f2-dc77a6a6abbc", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "217", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "None"}
{"id": "3331994d-89fa-4bcb-9c14-46061ade079d", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, the elevator goes down from floor f4 to floor f2, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, the elevator goes down from floor f4 to floor f2, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "38515fd6-ad95-472f-8358-e6112304565c", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, is the number of objects equal to 17? True or False\n\n[ANSWER]:\n", "response": "False"}
{"id": "265b5562-fa5c-4e02-b0a8-f1b1f4037109", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, is the number of executable actions equal to 10? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, is the number of executable actions equal to 10? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "aa062f65-d6e1-44c6-a7a0-aa47f7d1be86", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, is the number of inexecutable actions equal to 244? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, is the number of inexecutable actions equal to 244? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "8235672a-0c83-440b-9538-ac20c99a9891", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 10?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 10?\n\n[ANSWER]:\n", "response": "True"}
{"id": "93b83c7d-fb2c-461f-929d-875c5f3f0cd5", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "17", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "11"}
{"id": "da04edb8-ecdf-4bb0-8469-d1152da80d8d", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "48", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "9.0"}
{"id": "b1dc4f89-143b-4d6b-aeda-c2830c36a1ae", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "161", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "0.3125"}
{"id": "9f4d5eeb-90d8-4753-bc9e-fd026709e80d", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "9", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "7d8c801b-92d3-49ba-825b-fbc4f4539788", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "215", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "None"}
{"id": "782f9ea5-1573-4d5e-8083-4f025cb835ad", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, the elevator goes up from floor f5 to floor f0, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "7", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, the elevator goes up from floor f5 to floor f0, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "45bb43d7-6919-4512-8e4c-0ca0e87a7d1e", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, is the number of objects equal to 19? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, is the number of objects equal to 19? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "9eac52de-6331-4a17-b39c-ec77400100e3", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, is the number of executable actions equal to 8? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, is the number of executable actions equal to 8? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "320f8f23-89f4-4bde-a0dd-fc4f8f87357c", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, is the number of inexecutable actions equal to 214? True or False", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, is the number of inexecutable actions equal to 214? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "79b27d1b-f894-4238-bf17-cbb0657dd8fc", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 14?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 14?\n\n[ANSWER]:\n", "response": "True"}
{"id": "3f78745b-cdda-4fbc-891b-57b88361a3b5", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "17", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "13.0"}
{"id": "259def7d-0c83-406c-b5f4-4f794ca6f1df", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "51", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "10"}
{"id": "b85b8c00-c97e-4b80-b798-057c76ce08d1", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "158", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": " passenger[."}
{"id": "68243623-f5d9-43ef-9d99-7bc3b37e1596", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "10", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "2.0"}
{"id": "a70139d2-1339-48a4-a912-e06e8550e1f9", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "214", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "1.0"}
{"id": "6d0ee78a-d12c-47d3-aa22-f706cb5400b6", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p7 departs at floor f5, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "7", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p7 departs at floor f5, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "07408d6b-c8a7-425f-9bba-a3ca416e1154", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, is the number of objects equal to 19? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, is the number of objects equal to 19? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "061a303b-9aee-4b31-b353-d00c358020d6", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, is the number of executable actions equal to 7? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, is the number of executable actions equal to 7? True or False\n\n[ANSWER]:\n", "response": "False"}
{"id": "904c8721-1986-4b04-b764-a152d2f1e858", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, is the number of inexecutable actions equal to 173? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, is the number of inexecutable actions equal to 173? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "7f219ca7-4baa-4185-8a85-4644b2fcb185", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 19?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 19?\n\n[ANSWER]:\n", "response": "True"}
{"id": "3a7bc5ec-38b0-4a24-afbb-a1f7e36a1672", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "17", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "11.0"}
{"id": "ea78f769-09c1-41da-a2b7-3882bd065d5e", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "51", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "1.0"}
{"id": "8cec92bd-632d-4784-b794-849a08f15414", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "158", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "0.4"}
{"id": "e729caca-aaa4-40fd-956c-94058c15d981", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "9", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "0.5"}
{"id": "baad2c83-6a75-49d0-b147-35d43082bd70", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "215", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "1.0"}
{"id": "50baf3f6-24c7-4e52-ba14-18c87eb4ab60", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, passenger p6 departs at floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, passenger p6 departs at floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "6263fe1d-f9c0-4555-95c9-4fcd81c11050", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that f1 is part of the state?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that f1 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "64411040-37b5-49e9-bf8a-0aa9c378bb76", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that passenger p4 evacuates at floor f3?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that passenger p4 evacuates at floor f3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "0e3b78da-9549-4df2-8558-44d55729b286", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that passenger p9 does not enter at floor f6?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that passenger p9 does not enter at floor f6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "47b7cfcb-5d04-4638-9632-1beae93ddc19", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, the elevator goes up from floor f0 to floor f1, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, the elevator goes up from floor f0 to floor f1, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "b12f76db-5a64-4ad4-b433-72eee3d997e1", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, the elevator is stuck between floor f2 and floor f4, is defined?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, the elevator is stuck between floor f2 and floor f4, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "9cdcef3a-b284-4820-a988-eb96f8555d81", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, p8, p3, f6, p2, f4, f5 and p0, is not defined? Write None if all are defined.", "answer": "f4", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, p8, p3, f6, p2, f4, f5 and p0, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "706bd41d-277e-4252-826f-250b34ebfc78", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, destination of passenger p4 is floor f3, passenger p7 evacuates at floor f3, floor f5 is above floor f3, floor f6 is above floor f4, floor f6 is above floor f5 and floor f4 is above floor f1, is not defined? Write None if all are defined.", "answer": "passenger p7 evacuates at floor f3", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, destination of passenger p4 is floor f3, passenger p7 evacuates at floor f3, floor f5 is above floor f3, floor f6 is above floor f4, floor f6 is above floor f5 and floor f4 is above floor f1, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "destination of passenger p4 is floor f3"}
{"id": "68ee3bc9-6f5a-4411-91b3-e28ab337a4c8", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, passenger p5 does not enter at floor f6, destination of passenger p3 is not floor f6, floor f3 is not above floor f6, floor f2 is not above floor f6, destination of passenger p8 is not floor f5, destination of passenger p9 is not floor f2, destination of passenger p7 is not floor f0, destination of passenger p0 is not floor f6, floor f1 is not above floor f5, passenger p5 does not enter at floor f3, passenger p3 does not enter at floor f3, destination of passenger p1 is not floor f4, passenger p2 is not boarded, passenger p9 is not served, floor f0 is not above floor f3, destination of passenger p3 is not floor f5, passenger p3 does not enter at floor f6, passenger p7 does not enter at floor f2, passenger p2 does not enter at floor f3, destination of passenger p0 is not floor f3, passenger p4 is not boarded, passenger p6 does not enter at floor f5, destination of passenger p4 is not floor f6, destination of passenger p5 is not floor f4, destination of passenger p5 is not floor f0, passenger p1 is not boarded, passenger p5 is not boarded, destination of passenger p4 is not floor f0, destination of passenger p4 is not floor f4, passenger p5 is not served, destination of passenger p8 is not floor f0, passenger p8 does not enter at floor f0, passenger p9 does not enter at floor f2, destination of passenger p1 is not floor f5, passenger p0 does not enter at floor f6, passenger p2 does not enter at floor f0, passenger p6 does not enter at floor f0, passenger p0 does not enter at floor f4, passenger p4 does not enter at floor f0, destination of passenger p4 is not floor f2, floor f3 is not above floor f5, passenger p0 does not enter at floor f1, floor f5 is not above floor f6, passenger p4 does not enter at floor f3, destination of passenger p7 is not floor f1, floor f2 is not above floor f5, destination of passenger p9 is not floor f6, floor f0 is not above floor f1, floor f4 is not above floor f5, lift is not at floor f2, passenger p0 does not enter at floor f3, destination of passenger p9 is not floor f3, destination of passenger p6 is not floor f0, passenger p9 does not enter at floor f5, passenger p1 does not enter at floor f2, passenger p4 is not served, lift is not at floor f6, passenger p8 is not served, passenger p1 does not enter at floor f3, floor f1 is not above floor f6, destination of passenger p3 is not floor f2, passenger p6 does not enter at floor f3, passenger p8 is not boarded, destination of passenger p6 is not floor f2, passenger p4 does not enter at floor f6, destination of passenger p0 is not floor f2, passenger p3 is not boarded, passenger p5 does not enter at floor f4, destination of passenger p1 is not floor f3, passenger p9 is not boarded, lift is not at floor f3, passenger p6 is not boarded, floor f0 is not above floor f2, passenger p8 does not enter at floor f5, passenger p8 does not enter at floor f4, destination of passenger p9 is not floor f1, passenger p2 does not enter at floor f1, passenger p7 does not enter at floor f0, destination of passenger p0 is not floor f4, destination of passenger p8 is not floor f1, floor f0 is not above floor f4, destination of passenger p3 is not floor f4, floor f1 is not above floor f2, passenger p7 is not served, passenger p1 does not enter at floor f5, passenger p3 does not enter at floor f0, passenger p3 does not enter at floor f4, destination of passenger p6 is not floor f4, passenger p5 does not enter at floor f1, floor f2 is not above floor f3, passenger p7 does not enter at floor f4, destination of passenger p2 is not floor f0, destination of passenger p0 is not floor f1, destination of passenger p5 is not floor f2, passenger p5 does not enter at floor f0, floor f1 is not above floor f3, destination of passenger p8 is not floor f6, destination of passenger p2 is not floor f1, passenger p3 does not enter at floor f5, passenger p4 does not enter at floor f5, passenger p7 does not enter at floor f6, floor f0 is not above floor f6, destination of passenger p2 is not floor f2, destination of passenger p1 is not floor f1, destination of passenger p3 is not floor f1, destination of passenger p1 is not floor f0, passenger p0 does not enter at floor f2, destination of passenger p5 is not floor f1, destination of passenger p2 is not floor f4, passenger p2 does not enter at floor f6, destination of passenger p1 is not floor f6, lift is not at floor f4, passenger p7 is not boarded, destination of passenger p7 is not floor f2, destination of passenger p4 is not floor f1, passenger p6 does not enter at floor f4, passenger p2 does not enter at floor f5, destination of passenger p5 is not floor f5, passenger p1 does not enter at floor f6, passenger p4 does not enter at floor f1, floor f3 is not above floor f4, floor f1 is not above floor f4, passenger p6 does not enter at floor f2, passenger p3 does not enter at floor f1, destination of passenger p9 is not floor f4, passenger p0 is not served, passenger p5 does not enter at floor f2, floor f4 is not above floor f6, passenger p2 is not served, passenger p9 does not enter at floor f6, passenger p1 is not served, destination of passenger p0 is not floor f0, passenger p4 does not enter at floor f2, floor f2 is not above floor f4, destination of passenger p2 is not floor f3, floor f0 is not above floor f5, passenger p6 does not enter at floor f6, destination of passenger p6 is not floor f6, lift is not at floor f1, destination of passenger p2 is not floor f5, destination of passenger p7 is not floor f6, destination of passenger p9 is not floor f0, passenger p3 is not served, passenger p1 does not enter at floor f1, passenger p7 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p8 is not floor f3, destination of passenger p5 is not floor f6, passenger p8 does not enter at floor f3, passenger p9 does not enter at floor f3, passenger p7 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f4, destination of passenger p8 is not floor f4, passenger p1 does not enter at floor f4, passenger p9 does not enter at floor f4, passenger p9 does not enter at floor f1 and passenger p8 does not enter at floor f1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, passenger p5 does not enter at floor f6, destination of passenger p3 is not floor f6, floor f3 is not above floor f6, floor f2 is not above floor f6, destination of passenger p8 is not floor f5, destination of passenger p9 is not floor f2, destination of passenger p7 is not floor f0, destination of passenger p0 is not floor f6, floor f1 is not above floor f5, passenger p5 does not enter at floor f3, passenger p3 does not enter at floor f3, destination of passenger p1 is not floor f4, passenger p2 is not boarded, passenger p9 is not served, floor f0 is not above floor f3, destination of passenger p3 is not floor f5, passenger p3 does not enter at floor f6, passenger p7 does not enter at floor f2, passenger p2 does not enter at floor f3, destination of passenger p0 is not floor f3, passenger p4 is not boarded, passenger p6 does not enter at floor f5, destination of passenger p4 is not floor f6, destination of passenger p5 is not floor f4, destination of passenger p5 is not floor f0, passenger p1 is not boarded, passenger p5 is not boarded, destination of passenger p4 is not floor f0, destination of passenger p4 is not floor f4, passenger p5 is not served, destination of passenger p8 is not floor f0, passenger p8 does not enter at floor f0, passenger p9 does not enter at floor f2, destination of passenger p1 is not floor f5, passenger p0 does not enter at floor f6, passenger p2 does not enter at floor f0, passenger p6 does not enter at floor f0, passenger p0 does not enter at floor f4, passenger p4 does not enter at floor f0, destination of passenger p4 is not floor f2, floor f3 is not above floor f5, passenger p0 does not enter at floor f1, floor f5 is not above floor f6, passenger p4 does not enter at floor f3, destination of passenger p7 is not floor f1, floor f2 is not above floor f5, destination of passenger p9 is not floor f6, floor f0 is not above floor f1, floor f4 is not above floor f5, lift is not at floor f2, passenger p0 does not enter at floor f3, destination of passenger p9 is not floor f3, destination of passenger p6 is not floor f0, passenger p9 does not enter at floor f5, passenger p1 does not enter at floor f2, passenger p4 is not served, lift is not at floor f6, passenger p8 is not served, passenger p1 does not enter at floor f3, floor f1 is not above floor f6, destination of passenger p3 is not floor f2, passenger p6 does not enter at floor f3, passenger p8 is not boarded, destination of passenger p6 is not floor f2, passenger p4 does not enter at floor f6, destination of passenger p0 is not floor f2, passenger p3 is not boarded, passenger p5 does not enter at floor f4, destination of passenger p1 is not floor f3, passenger p9 is not boarded, lift is not at floor f3, passenger p6 is not boarded, floor f0 is not above floor f2, passenger p8 does not enter at floor f5, passenger p8 does not enter at floor f4, destination of passenger p9 is not floor f1, passenger p2 does not enter at floor f1, passenger p7 does not enter at floor f0, destination of passenger p0 is not floor f4, destination of passenger p8 is not floor f1, floor f0 is not above floor f4, destination of passenger p3 is not floor f4, floor f1 is not above floor f2, passenger p7 is not served, passenger p1 does not enter at floor f5, passenger p3 does not enter at floor f0, passenger p3 does not enter at floor f4, destination of passenger p6 is not floor f4, passenger p5 does not enter at floor f1, floor f2 is not above floor f3, passenger p7 does not enter at floor f4, destination of passenger p2 is not floor f0, destination of passenger p0 is not floor f1, destination of passenger p5 is not floor f2, passenger p5 does not enter at floor f0, floor f1 is not above floor f3, destination of passenger p8 is not floor f6, destination of passenger p2 is not floor f1, passenger p3 does not enter at floor f5, passenger p4 does not enter at floor f5, passenger p7 does not enter at floor f6, floor f0 is not above floor f6, destination of passenger p2 is not floor f2, destination of passenger p1 is not floor f1, destination of passenger p3 is not floor f1, destination of passenger p1 is not floor f0, passenger p0 does not enter at floor f2, destination of passenger p5 is not floor f1, destination of passenger p2 is not floor f4, passenger p2 does not enter at floor f6, destination of passenger p1 is not floor f6, lift is not at floor f4, passenger p7 is not boarded, destination of passenger p7 is not floor f2, destination of passenger p4 is not floor f1, passenger p6 does not enter at floor f4, passenger p2 does not enter at floor f5, destination of passenger p5 is not floor f5, passenger p1 does not enter at floor f6, passenger p4 does not enter at floor f1, floor f3 is not above floor f4, floor f1 is not above floor f4, passenger p6 does not enter at floor f2, passenger p3 does not enter at floor f1, destination of passenger p9 is not floor f4, passenger p0 is not served, passenger p5 does not enter at floor f2, floor f4 is not above floor f6, passenger p2 is not served, passenger p9 does not enter at floor f6, passenger p1 is not served, destination of passenger p0 is not floor f0, passenger p4 does not enter at floor f2, floor f2 is not above floor f4, destination of passenger p2 is not floor f3, floor f0 is not above floor f5, passenger p6 does not enter at floor f6, destination of passenger p6 is not floor f6, lift is not at floor f1, destination of passenger p2 is not floor f5, destination of passenger p7 is not floor f6, destination of passenger p9 is not floor f0, passenger p3 is not served, passenger p1 does not enter at floor f1, passenger p7 does not enter at floor f3, passenger p0 does not enter at floor f5, destination of passenger p8 is not floor f3, destination of passenger p5 is not floor f6, passenger p8 does not enter at floor f3, passenger p9 does not enter at floor f3, passenger p7 does not enter at floor f1, destination of passenger p7 is not floor f4, passenger p2 does not enter at floor f4, destination of passenger p8 is not floor f4, passenger p1 does not enter at floor f4, passenger p9 does not enter at floor f4, passenger p9 does not enter at floor f1 and passenger p8 does not enter at floor f1, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "passenger p5 does not enter at floor f6"}
{"id": "2e6a8965-63e9-4f83-bea3-8c3a7456e88e", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that f4 is part of the state?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that f4 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "57a9f094-7012-45aa-a556-b3bf37adfd62", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that passenger p0 walks?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that passenger p0 walks?\n\n[ANSWER]:\n", "response": "True"}
{"id": "08d0f853-9a72-4227-9b67-57abd9f12917", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that passenger p6 does not enter at floor f4?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that passenger p6 does not enter at floor f4?\n\n[ANSWER]:\n", "response": "True"}
{"id": "f7551ab0-86b4-4efb-bb60-6b2a097c659d", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, the elevator is stuck between floor f1 and floor f6, is defined?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, the elevator is stuck between floor f1 and floor f6, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "d30470bb-7f45-4cf5-862a-4a6c32efd529", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, passenger p2 boards at floor f1, is defined?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, passenger p2 boards at floor f1, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "3936727e-ccf7-4740-8fec-252a4ccd5328", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, p7 and p6, is not defined? Write None if all are defined.", "answer": "p6", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, p7 and p6, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "2576fc41-ff94-4df6-860b-907f686b0503", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, floor f5 is above floor f4, passenger p0 is boarded, destination of passenger p0 is floor f5, destination of passenger p9 is floor f5, floor f4 is above floor f0, floor f2 is cleaner than floor f1, passenger p9 enters at floor f0, floor f4 is above floor f2, floor f3 is above floor f1, passenger p3 enters at floor f2, passenger p6 enters at floor f1, floor f6 is above floor f3, floor f5 is above floor f2, floor f6 is above floor f4, floor f1 is above floor f0, passenger p6 is boarded, lift is at floor f1, destination of passenger p1 is floor f2, passenger p4 enters at floor f4, destination of passenger p5 is floor f3, floor f4 is above floor f1, floor f6 is above floor f5, passenger p2 enters at floor f2, floor f5 is above floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, passenger p1 enters at floor f0, passenger p9 is boarded, floor f4 is above floor f3, floor f2 is above floor f0, floor f3 is above floor f0, passenger p8 enters at floor f6, floor f6 is above floor f1, floor f6 is above floor f2, destination of passenger p8 is floor f2, destination of passenger p6 is floor f3, passenger p7 enters at floor f5, floor f5 is above floor f1, floor f3 is above floor f2 and passenger p0 enters at floor f0, is not defined? Write None if all are defined.", "answer": "floor f2 is cleaner than floor f1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, floor f5 is above floor f4, passenger p0 is boarded, destination of passenger p0 is floor f5, destination of passenger p9 is floor f5, floor f4 is above floor f0, floor f2 is cleaner than floor f1, passenger p9 enters at floor f0, floor f4 is above floor f2, floor f3 is above floor f1, passenger p3 enters at floor f2, passenger p6 enters at floor f1, floor f6 is above floor f3, floor f5 is above floor f2, floor f6 is above floor f4, floor f1 is above floor f0, passenger p6 is boarded, lift is at floor f1, destination of passenger p1 is floor f2, passenger p4 enters at floor f4, destination of passenger p5 is floor f3, floor f4 is above floor f1, floor f6 is above floor f5, passenger p2 enters at floor f2, floor f5 is above floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, passenger p1 enters at floor f0, passenger p9 is boarded, floor f4 is above floor f3, floor f2 is above floor f0, floor f3 is above floor f0, passenger p8 enters at floor f6, floor f6 is above floor f1, floor f6 is above floor f2, destination of passenger p8 is floor f2, destination of passenger p6 is floor f3, passenger p7 enters at floor f5, floor f5 is above floor f1, floor f3 is above floor f2 and passenger p0 enters at floor f0, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "7c40124b-f954-4b04-9ddf-65cc9f057cfc", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, destination of passenger p6 is not floor f6, destination of passenger p1 is not floor f0, passenger p5 does not enter at floor f0, destination of passenger p8 is not floor f4, floor f1 is not above floor f4, destination of passenger p7 is not floor f0, destination of passenger p1 is not floor f3, passenger p9 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p8 is not served, floor f1 is not above floor f5, destination of passenger p4 is not floor f1, passenger p3 is not served, passenger p7 is not boarded, passenger p6 does not enter at floor f6, passenger p4 does not enter at floor f2, passenger p1 does not enter at floor f3, passenger p8 does not enter at floor f2, destination of passenger p3 is not floor f6, passenger p9 does not enter at floor f3, passenger p2 is not served, passenger p0 does not enter at floor f5, passenger p7 does not enter at floor f6, passenger p5 is not served, destination of passenger p4 is not floor f6, destination of passenger p6 is not floor f5, passenger p6 does not enter at floor f0, passenger p6 does not enter at floor f2, passenger p2 does not enter at floor f5, floor f0 is not above floor f4, destination of passenger p2 is not floor f2, destination of passenger p0 is not floor f2, passenger p8 does not enter at floor f5, passenger p6 does not enter at floor f4, destination of passenger p9 is not floor f4, passenger p5 is not boarded, passenger p3 does not enter at floor f0, passenger p6 is not served and passenger p4 does not enter at floor f6, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1 and passenger p6 boards at floor f1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, destination of passenger p6 is not floor f6, destination of passenger p1 is not floor f0, passenger p5 does not enter at floor f0, destination of passenger p8 is not floor f4, floor f1 is not above floor f4, destination of passenger p7 is not floor f0, destination of passenger p1 is not floor f3, passenger p9 does not enter at floor f1, destination of passenger p6 is not floor f4, passenger p8 is not served, floor f1 is not above floor f5, destination of passenger p4 is not floor f1, passenger p3 is not served, passenger p7 is not boarded, passenger p6 does not enter at floor f6, passenger p4 does not enter at floor f2, passenger p1 does not enter at floor f3, passenger p8 does not enter at floor f2, destination of passenger p3 is not floor f6, passenger p9 does not enter at floor f3, passenger p2 is not served, passenger p0 does not enter at floor f5, passenger p7 does not enter at floor f6, passenger p5 is not served, destination of passenger p4 is not floor f6, destination of passenger p6 is not floor f5, passenger p6 does not enter at floor f0, passenger p6 does not enter at floor f2, passenger p2 does not enter at floor f5, floor f0 is not above floor f4, destination of passenger p2 is not floor f2, destination of passenger p0 is not floor f2, passenger p8 does not enter at floor f5, passenger p6 does not enter at floor f4, destination of passenger p9 is not floor f4, passenger p5 is not boarded, passenger p3 does not enter at floor f0, passenger p6 is not served and passenger p4 does not enter at floor f6, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "passenger p6 does not enter at floor f6"}
{"id": "b6afbdad-8f4b-4c3a-b534-f220c672400a", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that f2 is part of the state?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that f2 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "c183b6a1-d521-44df-82bd-2ea1ebd693a7", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that passenger p3 enters at floor f2?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that passenger p3 enters at floor f2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "06f5ed2b-872a-4388-bcc4-ac029b372099", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that passenger p8 does not evacuates at floor f3?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that passenger p8 does not evacuates at floor f3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "a47c3558-8a8d-4873-935a-d5dd598498a5", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, the elevator goes up from floor f0 to floor f6, is defined?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, the elevator goes up from floor f0 to floor f6, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "56ffdfa5-a176-483d-863e-d36a86579a5b", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, the elevator navigates from floor f4 to floor f0, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, the elevator navigates from floor f4 to floor f0, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "0dffb77a-5dd9-425e-b626-49e3d55845f1", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, p5, p3, p4, f3, p0, p8, f4, f5, f1 and p6, is not defined? Write None if all are defined.", "answer": "p5", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, p5, p3, p4, f3, p0, p8, f4, f5, f1 and p6, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "f4"}
{"id": "b051d76e-6a97-4ab5-9683-d7e658ff6d89", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, floor f3 is above floor f0, passenger p8 waits at floor f6, passenger p0 is boarded, destination of passenger p9 is floor f5, floor f3 is above floor f2, destination of passenger p8 is floor f2, destination of passenger p4 is floor f3 and destination of passenger p1 is floor f2, is not defined? Write None if all are defined.", "answer": "passenger p8 waits at floor f6", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, floor f3 is above floor f0, passenger p8 waits at floor f6, passenger p0 is boarded, destination of passenger p9 is floor f5, floor f3 is above floor f2, destination of passenger p8 is floor f2, destination of passenger p4 is floor f3 and destination of passenger p1 is floor f2, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "passenger p8 waits at floor f6"}
{"id": "92d6fe87-1339-43c6-b234-e3d4a38a6d72", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, passenger p8 does not enter at floor f1 and passenger p3 does not enter at floor f0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0 and passenger p3 departs at floor f0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, passenger p8 does not enter at floor f1 and passenger p3 does not enter at floor f0, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "60681ecf-d393-4d3a-8068-9fe3721da7f0", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that p3 is part of the state?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that p3 is part of the state?\n\n[ANSWER]:\n", "response": "False"}
{"id": "e293f2d6-8f9d-4257-ba03-9680f8561c76", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that passenger p8 enters at floor f6?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that passenger p8 enters at floor f6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "e98b6014-3d15-4d7b-a3af-1cc0654a00ae", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that passenger p0 does not evacuates at floor f3?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that passenger p0 does not evacuates at floor f3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "1c22516e-8375-43b1-b47d-aac708567cb9", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, passenger p9 departs at floor f5, is defined?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, passenger p9 departs at floor f5, is defined?\n\n[ANSWER]:\n", "response": "True"}
{"id": "0d2d6dc1-0b68-4bb5-ae44-5ea62d2b631d", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, the elevator navigates from floor f1 to floor f5, is defined?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, the elevator navigates from floor f1 to floor f5, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "db96dd75-de67-48ff-a2d0-e9b603f4f43f", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, f7, p4, p0, f5 and p8, is not defined? Write None if all are defined.", "answer": "f7", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, f7, p4, p0, f5 and p8, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "802e7b21-bd40-4b4c-b726-24e61d1cfc46", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, passenger p7 enters at floor f5, destination of passenger p4 is floor f3, floor f6 is above floor f1, floor f2 is above floor f0, passenger p9 is boarded, passenger p7 is boarded, floor f4 is above floor f1, floor f6 is above floor f3, floor f3 is above floor f2, passenger p2 is boarded, floor f5 is above floor f3, lift is at floor f5, passenger p3 rides and passenger p4 is boarded, is not defined? Write None if all are defined.", "answer": "passenger p3 rides", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, passenger p7 enters at floor f5, destination of passenger p4 is floor f3, floor f6 is above floor f1, floor f2 is above floor f0, passenger p9 is boarded, passenger p7 is boarded, floor f4 is above floor f1, floor f6 is above floor f3, floor f3 is above floor f2, passenger p2 is boarded, floor f5 is above floor f3, lift is at floor f5, passenger p3 rides and passenger p4 is boarded, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "Floor f6 is above floor f1"}
{"id": "3790ddc6-a831-4edb-9f5e-905e8c563d27", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, passenger p1 does not wait at floor f5, destination of passenger p5 is not floor f6 and passenger p8 does not enter at floor f4, is not defined? Write None if all are defined.", "answer": "passenger p1 does not wait at floor f5", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5 and passenger p7 boards at floor f5 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, passenger p1 does not wait at floor f5, destination of passenger p5 is not floor f6 and passenger p8 does not enter at floor f4, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "destination of passenger p5 is not floor f6"}
{"id": "67017e79-f15e-48b4-bc2e-3a78c4a82764", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that f3 is part of the state?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that f3 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "08f2028a-9b07-4bcf-b527-f5608e0b22e0", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that floor f5 is above floor f3?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that floor f5 is above floor f3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "1c47bac9-0b2f-4391-8ed4-4d13dd50702e", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that passenger p7 does not evacuates at floor f6?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that passenger p7 does not evacuates at floor f6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "0535dd9b-c5e2-4245-9685-e7b213489204", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, passenger p6 walks out at floor f3, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, passenger p6 walks out at floor f3, is defined?\n\n[ANSWER]:\n", "response": "True"}
{"id": "e1aa1586-4090-46b9-8cf6-812346b2a917", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, passenger p8 departs at floor f5, is defined?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, passenger p8 departs at floor f5, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "c35ff481-6361-4fdc-a0a3-9b73519ca00b", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, p4, p3, p5, p2, f5 and p8, is not defined? Write None if all are defined.", "answer": "p4", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, p4, p3, p5, p2, f5 and p8, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "94dbc412-fca8-48ec-85aa-d75f650524be", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f5 is above floor f3, destination of passenger p9 is floor f5 and floor f4 is above floor f3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f5 is above floor f3, destination of passenger p9 is floor f5 and floor f4 is above floor f3, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "0\u3015."}
{"id": "0a457d35-1d96-45ae-bad8-962c0234838d", "domain_name": "miconic", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, floor f2 is not above floor f4, destination of passenger p3 is not floor f3, passenger p3 does not wait at floor f6, passenger p8 does not enter at floor f1, passenger p4 does not enter at floor f1, floor f3 is not above floor f5, passenger p5 does not enter at floor f3, destination of passenger p1 is not floor f6, passenger p3 does not enter at floor f5, passenger p5 does not enter at floor f1, passenger p5 does not enter at floor f2, destination of passenger p8 is not floor f3, passenger p7 does not enter at floor f3, destination of passenger p9 is not floor f0, passenger p6 does not enter at floor f3, destination of passenger p0 is not floor f0, passenger p2 is not served, destination of passenger p9 is not floor f2 and passenger p6 is not served, is not defined? Write None if all are defined.", "answer": "passenger p3 does not wait at floor f6", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["destin(p3,f0)", "destin(p2,f6)", "destin(p4,f3)", "above(f0,f1)", "above(f1,f2)", "above(f5,f6)", "above(f1,f6)", "origin(p7,f5)", "origin(p4,f4)", "above(f4,f5)", "destin(p5,f3)", "origin(p5,f5)", "origin(p3,f2)", "above(f4,f6)", "above(f0,f6)", "above(f1,f5)", "above(f2,f6)", "destin(p0,f5)", "origin(p1,f0)", "destin(p1,f2)", "above(f2,f3)", "origin(p2,f2)", "above(f3,f4)", "above(f0,f4)", "above(f1,f4)", "origin(p0,f0)", "above(f2,f5)", "destin(p7,f3)", "origin(p6,f1)", "above(f1,f3)", "above(f0,f2)", "origin(p8,f6)", "origin(p9,f0)", "above(f0,f3)", "above(f0,f5)", "above(f2,f4)", "destin(p9,f5)", "above(f3,f5)", "above(f3,f6)", "lift_at(f0)", "destin(p8,f2)", "destin(p6,f3)"], "neg_fluents": ["-origin(p4,f1)", "-origin(p4,f2)", "-lift_at(f3)", "-destin(p6,f0)", "-destin(p3,f4)", "-origin(p8,f0)", "-destin(p5,f4)", "-destin(p4,f6)", "-destin(p2,f5)", "-boarded(p3)", "-destin(p2,f4)", "-destin(p0,f1)", "-origin(p9,f4)", "-destin(p6,f1)", "-origin(p2,f3)", "-origin(p6,f6)", "-origin(p4,f6)", "-destin(p4,f4)", "-origin(p4,f3)", "-boarded(p7)", "-origin(p9,f2)", "-origin(p5,f0)", "-origin(p3,f0)", "-destin(p0,f4)", "-origin(p6,f2)", "-origin(p8,f5)", "-above(f5,f3)", "-destin(p7,f6)", "-origin(p6,f3)", "-destin(p7,f2)", "-origin(p5,f2)", "-above(f5,f2)", "-served(p3)", "-origin(p6,f4)", "-above(f5,f1)", "-lift_at(f2)", "-origin(p7,f3)", "-served(p6)", "-origin(p7,f2)", "-origin(p3,f3)", "-destin(p2,f0)", "-destin(p6,f2)", "-origin(p9,f3)", "-origin(p0,f5)", "-destin(p1,f5)", "-origin(p9,f1)", "-origin(p3,f4)", "-boarded(p5)", "-origin(p6,f0)", "-served(p9)", "-destin(p1,f0)", "-origin(p3,f6)", "-destin(p3,f6)", "-destin(p4,f0)", "-destin(p2,f2)", "-boarded(p1)", "-served(p2)", "-origin(p7,f6)", "-served(p8)", "-destin(p1,f6)", "-above(f6,f2)", "-destin(p1,f3)", "-destin(p6,f5)", "-destin(p5,f6)", "-destin(p0,f3)", "-origin(p8,f4)", "-destin(p1,f1)", "-lift_at(f4)", "-destin(p0,f6)", "-boarded(p4)", "-destin(p6,f6)", "-origin(p1,f5)", "-destin(p3,f1)", "-destin(p8,f5)", "-above(f2,f1)", "-destin(p8,f0)", "-origin(p4,f5)", "-lift_at(f6)", "-destin(p3,f5)", "-destin(p5,f0)", "-destin(p5,f2)", "-destin(p9,f3)", "-origin(p5,f1)", "-served(p0)", "-destin(p3,f2)", "-origin(p7,f4)", "-origin(p2,f0)", "-above(f1,f0)", "-destin(p7,f5)", "-destin(p8,f1)", "-origin(p0,f4)", "-origin(p9,f5)", "-destin(p1,f4)", "-destin(p8,f6)", "-destin(p4,f2)", "-origin(p0,f1)", "-boarded(p2)", "-above(f4,f0)", "-origin(p1,f3)", "-above(f4,f1)", "-origin(p1,f1)", "-destin(p7,f1)", "-boarded(p8)", "-above(f3,f0)", "-origin(p8,f3)", "-origin(p8,f2)", "-above(f6,f0)", "-origin(p4,f0)", "-destin(p9,f6)", "-boarded(p9)", "-lift_at(f5)", "-lift_at(f1)", "-origin(p8,f1)", "-above(f3,f2)", "-above(f6,f3)", "-above(f3,f1)", "-destin(p9,f1)", "-above(f2,f0)", "-destin(p4,f5)", "-origin(p0,f6)", "-destin(p9,f2)", "-destin(p8,f4)", "-destin(p0,f0)", "-origin(p1,f2)", "-destin(p5,f1)", "-origin(p2,f6)", "-destin(p7,f0)", "-origin(p7,f1)", "-destin(p6,f4)", "-origin(p9,f6)", "-origin(p3,f1)", "-destin(p7,f4)", "-origin(p2,f1)", "-origin(p1,f4)", "-origin(p0,f2)", "-served(p4)", "-destin(p2,f1)", "-destin(p9,f0)", "-above(f6,f1)", "-origin(p0,f3)", "-above(f4,f2)", "-served(p7)", "-boarded(p6)", "-origin(p3,f5)", "-destin(p3,f3)", "-above(f5,f0)", "-destin(p2,f3)", "-above(f5,f4)", "-destin(p5,f5)", "-destin(p0,f2)", "-above(f4,f3)", "-served(p5)", "-boarded(p0)", "-origin(p5,f3)", "-origin(p7,f0)", "-origin(p5,f4)", "-destin(p4,f1)", "-above(f6,f4)", "-origin(p6,f5)", "-origin(p5,f6)", "-destin(p9,f4)", "-origin(p2,f5)", "-origin(p1,f6)", "-destin(p8,f3)", "-origin(p2,f4)", "-served(p1)", "-above(f6,f5)"], "objects": {"passenger": ["p4", "p0", "p5", "p2", "p3", "p7", "p1", "p9", "p6", "p8"], "floor": ["f1", "f3", "f6", "f4", "f5", "f2", "f0"]}, "executable?": true}, "action_sequence": ["action_board(f0,p0)", "action_board(f0,p1)", "action_board(f0,p9)", "action_up(f0,f1)", "action_board(f1,p6)", "action_up(f1,f2)", "action_board(f2,p2)", "action_board(f2,p3)", "action_down(f2,f0)", "action_depart(f0,p3)", "action_up(f0,f4)", "action_board(f4,p4)", "action_up(f4,f5)", "action_board(f5,p5)", "action_board(f5,p7)", "action_depart(f5,p9)", "action_depart(f5,p0)", "action_down(f5,f3)", "action_depart(f3,p7)", "action_depart(f3,p6)", "action_depart(f3,p5)", "action_depart(f3,p4)", "action_up(f3,f6)", "action_board(f6,p8)", "action_depart(f6,p2)", "action_down(f6,f2)", "action_depart(f2,p8)", "action_depart(f2,p1)"], "prompt": "A passenger can board the lift on a floor only if the lift is on that floor and the passenger's travel originates from that floor. Boarding the lift causes the passenger to be boarded. Departing from the lift is executable only when the lift is on the floor, the passenger is boarded, and the passenger's destination is on that floor. Departing from the lift causes the passenger to be served. A lift can go up from one floor to another if and only if it is currently on the floor and the destination floor is above the source floor. Going up makes the lift on the destination floor. A lift can go down from one floor to another if and only if it is currently on a floor and the source floor is above the destination floor. Going down makes the lift on the destination floor. A lift can only be on one floor at a time If the passenger is served, then the passenger is not boarded \n\n[INITIAL CONDITIONS]\nInitially, destination of passenger p3 is floor f0, destination of passenger p2 is floor f6, destination of passenger p4 is floor f3, floor f1 is above floor f0, floor f2 is above floor f1, floor f6 is above floor f5, floor f6 is above floor f1, passenger p7 enters at floor f5, passenger p4 enters at floor f4, floor f5 is above floor f4, destination of passenger p5 is floor f3, passenger p5 enters at floor f5, passenger p3 enters at floor f2, floor f6 is above floor f4, floor f6 is above floor f0, floor f5 is above floor f1, floor f6 is above floor f2, destination of passenger p0 is floor f5, passenger p1 enters at floor f0, destination of passenger p1 is floor f2, floor f3 is above floor f2, passenger p2 enters at floor f2, floor f4 is above floor f3, floor f4 is above floor f0, floor f4 is above floor f1, passenger p0 enters at floor f0, floor f5 is above floor f2, destination of passenger p7 is floor f3, passenger p6 enters at floor f1, floor f3 is above floor f1, floor f2 is above floor f0, passenger p8 enters at floor f6, passenger p9 enters at floor f0, floor f3 is above floor f0, floor f5 is above floor f0, floor f4 is above floor f2, destination of passenger p9 is floor f5, floor f5 is above floor f3, floor f6 is above floor f3, lift is at floor f0, destination of passenger p8 is floor f2 and destination of passenger p6 is floor f3\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: passenger p0 boards at floor f0, passenger p1 boards at floor f0, passenger p9 boards at floor f0, the elevator goes up from floor f0 to floor f1, passenger p6 boards at floor f1, the elevator goes up from floor f1 to floor f2, passenger p2 boards at floor f2, passenger p3 boards at floor f2, the elevator goes down from floor f2 to floor f0, passenger p3 departs at floor f0, the elevator goes up from floor f0 to floor f4, passenger p4 boards at floor f4, the elevator goes up from floor f4 to floor f5, passenger p5 boards at floor f5, passenger p7 boards at floor f5, passenger p9 departs at floor f5, passenger p0 departs at floor f5, the elevator goes down from floor f5 to floor f3 and passenger p7 departs at floor f3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, floor f2 is not above floor f4, destination of passenger p3 is not floor f3, passenger p3 does not wait at floor f6, passenger p8 does not enter at floor f1, passenger p4 does not enter at floor f1, floor f3 is not above floor f5, passenger p5 does not enter at floor f3, destination of passenger p1 is not floor f6, passenger p3 does not enter at floor f5, passenger p5 does not enter at floor f1, passenger p5 does not enter at floor f2, destination of passenger p8 is not floor f3, passenger p7 does not enter at floor f3, destination of passenger p9 is not floor f0, passenger p6 does not enter at floor f3, destination of passenger p0 is not floor f0, passenger p2 is not served, destination of passenger p9 is not floor f2 and passenger p6 is not served, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "destination of passenger p3 is not floor f3"}
