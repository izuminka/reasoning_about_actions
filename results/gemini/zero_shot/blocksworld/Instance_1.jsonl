{"id": "5096ce32-578d-421c-a6de-2512dbba80db", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b2 is on block b1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b2 is on block b1?\n\n[ANSWER]:\n", "response": "False"}
{"id": "bb6a180b-6640-49d2-b0f2-2bd29c1d368b", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b3 is on block b1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b3 is on block b1?\n\n[ANSWER]:\n", "response": "False"}
{"id": "2fb0b492-c87b-4e0e-858e-a77ceae631bd", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b4 is on block b3?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b4 is on block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "b1867804-770e-4503-a9c1-3066776b5f2f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b7 is not on block b5, block b4 is not on block b5, block b5 is not on block b6, block b2 is not on block b5, block b5 is not on block b2, block b5 is not clear, block b5 is not on block b3, block b5 is not on the table, block b5 is not being held, block b6 is not on block b5 and block b1 is not on block b5?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b7 is not on block b5, block b4 is not on block b5, block b5 is not on block b6, block b2 is not on block b5, block b5 is not on block b2, block b5 is not clear, block b5 is not on block b3, block b5 is not on the table, block b5 is not being held, block b6 is not on block b5 and block b1 is not on block b5?\n\n[ANSWER]:\n", "response": "True"}
{"id": "21495131-1d6e-43a2-a329-0ea7dcf757f9", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b3 is not on block b1, block b3 is not on block b2 and block b3 is not on block b4?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b3 is not on block b1, block b3 is not on block b2 and block b3 is not on block b4?\n\n[ANSWER]:\n", "response": "True"}
{"id": "8761965f-7d5a-4d02-9868-d3698c69d1da", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b5 is not on block b7 and block b1 is not on block b7?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b5 is not on block b7 and block b1 is not on block b7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "113e9b66-f06f-4536-9591-8a7c4d4297f7", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b3 is on the table and block b3 is clear?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b3 is on the table and block b3 is clear?\n\n[ANSWER]:\n", "response": "False"}
{"id": "6aa74287-d318-498f-be41-eb70a9f80590", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b1 is on block b7?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b1 is on block b7?\n\n[ANSWER]:\n", "response": "False"}
{"id": "27d85aab-ca5f-45cb-b181-1ace1f1f569a", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b5 is on block b3?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b5 is on block b3?\n\n[ANSWER]:\n", "response": "False"}
{"id": "9baf0e6a-5226-4537-96c6-e38de96f166d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b1 is not on block b5, block b6 is not on block b5, block b5 is not on the table, block b5 is not on block b3 and block b5 is not on block b6?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b1 is not on block b5, block b6 is not on block b5, block b5 is not on the table, block b5 is not on block b3 and block b5 is not on block b6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "a14f0a56-17a1-40f8-8f73-c8000145c86f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b2 is not clear, block b7 is not on block b2, block b2 is not on the table, block b2 is not on block b4, block b1 is not on block b2 and block b2 is not on block b3?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b2 is not clear, block b7 is not on block b2, block b2 is not on the table, block b2 is not on block b4, block b1 is not on block b2 and block b2 is not on block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "2ce23ce2-c008-47c8-b23d-c59413395b27", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b7 is not on block b2, block b2 is not on block b1, block b2 is not on block b3, block b2 is not on block b4, block b2 is not on block b7, block b2 is not on block b5 and block b6 is not on block b2?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b7 is not on block b2, block b2 is not on block b1, block b2 is not on block b3, block b2 is not on block b4, block b2 is not on block b7, block b2 is not on block b5 and block b6 is not on block b2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "3587db12-2c21-4c33-a9ae-fb7e1ac91146", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b2 is clear?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b2 is clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "9a529567-cafa-4a5f-b8d1-750a1d4bb0ab", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b6 is on the table?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b6 is on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "76348dd1-5a2d-4d96-bf40-45f4b2385729", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b5 is on block b1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b5 is on block b1?\n\n[ANSWER]:\n", "response": "True"}
{"id": "e7b1b9fb-f180-40e8-9532-ea35151d746b", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b7 is not on block b5, block b7 is not clear and block b7 is not on block b6?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b7 is not on block b5, block b7 is not clear and block b7 is not on block b6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "b6d37600-8d9b-4c0a-b1b3-db13e5ba41d1", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b5 is not on block b4, block b4 is not on block b5, block b1 is not on block b5, block b5 is not on the table, block b5 is not on block b2, block b5 is not on block b7, block b7 is not on block b5, block b5 is not on block b6, block b5 is not on block b3, block b6 is not on block b5, block b2 is not on block b5, block b5 is not being held and block b3 is not on block b5?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b5 is not on block b4, block b4 is not on block b5, block b1 is not on block b5, block b5 is not on the table, block b5 is not on block b2, block b5 is not on block b7, block b7 is not on block b5, block b5 is not on block b6, block b5 is not on block b3, block b6 is not on block b5, block b2 is not on block b5, block b5 is not being held and block b3 is not on block b5?\n\n[ANSWER]:\n", "response": "True"}
{"id": "cadeeedf-d968-4c62-86a0-3ff479d08542", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b6 is not being held?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b6 is not being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "25cf114c-3df7-4f18-b6c9-24ba0771feab", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b7 is clear and block b7 is on block b4?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b7 is clear and block b7 is on block b4?\n\n[ANSWER]:\n", "response": "False"}
{"id": "e160fc6e-e970-4f5c-a071-5377e7f165d9", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b6 is on block b5?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b6 is on block b5?\n\n[ANSWER]:\n", "response": "True"}
{"id": "f03fb0a7-5ade-4909-83de-e09652958b37", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b2 is on block b4 and block b4 is on the table?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b2 is on block b4 and block b4 is on the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "a889e1d2-e051-4e4a-ab6a-8ffd4a0c903a", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b5 is not on the table, block b5 is not on block b6, block b5 is not clear, block b3 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b4, block b5 is not being held, block b5 is not on block b1, block b7 is not on block b5 and block b5 is not on block b2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b5 is not on the table, block b5 is not on block b6, block b5 is not clear, block b3 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b4, block b5 is not being held, block b5 is not on block b1, block b7 is not on block b5 and block b5 is not on block b2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "f58b5e03-584e-4738-92a4-a0351be985d1", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b2 is not on block b7?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b2 is not on block b7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "b904c6e0-efaf-490f-957b-b2d0ae70fa43", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b5 is not on block b7, block b2 is not on block b5, block b5 is not on block b1, block b7 is not on block b5 and block b1 is not on block b5?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b5 is not on block b7, block b2 is not on block b5, block b5 is not on block b1, block b7 is not on block b5 and block b1 is not on block b5?\n\n[ANSWER]:\n", "response": "True"}
{"id": "d75062b1-9dcf-44ee-9568-98f1831741df", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b3 is on block b2?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b3 is on block b2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "26f99ab8-5e8a-4111-9169-944c75535d1a", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b6 is being held and block b6 is on block b5?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b6 is being held and block b6 is on block b5?\n\n[ANSWER]:\n", "response": "False"}
{"id": "13f4ad1a-5315-4caa-b2ad-044a9d5c97df", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b2 is on the table and block b3 is on block b2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b2 is on the table and block b3 is on block b2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "5c054bed-345a-475d-8208-6551d1f175c8", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b1 is not on block b6, block b1 is not on block b3, block b1 is not clear, block b4 is not on block b1, block b6 is not on block b1, block b7 is not on block b1, block b2 is not on block b1, block b1 is not on block b5 and block b1 is not on block b4?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b1 is not on block b6, block b1 is not on block b3, block b1 is not clear, block b4 is not on block b1, block b6 is not on block b1, block b7 is not on block b1, block b2 is not on block b1, block b1 is not on block b5 and block b1 is not on block b4?\n\n[ANSWER]:\n", "response": "True"}
{"id": "73e901a1-5968-4fe7-a2f9-72118c7604ae", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b3 is not on block b1, block b3 is not on block b4, block b3 is not clear, block b2 is not on block b3, block b3 is not on block b6, block b1 is not on block b3, block b3 is not on block b7, block b3 is not being held, block b5 is not on block b3, block b3 is not on block b5, block b4 is not on block b3, block b3 is not on the table and block b7 is not on block b3?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b3 is not on block b1, block b3 is not on block b4, block b3 is not clear, block b2 is not on block b3, block b3 is not on block b6, block b1 is not on block b3, block b3 is not on block b7, block b3 is not being held, block b5 is not on block b3, block b3 is not on block b5, block b4 is not on block b3, block b3 is not on the table and block b7 is not on block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "9522c29d-27cf-4109-b66a-0bc4fdf5a63a", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b5 is not on block b2, block b2 is not on block b5, block b7 is not on block b2, block b1 is not on block b2, block b6 is not on block b2, block b2 is not on block b1, block b2 is not on the table, block b2 is not clear, block b2 is not on block b4, block b2 is not on block b3, block b2 is not on block b7 and block b2 is not on block b6?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b5 is not on block b2, block b2 is not on block b5, block b7 is not on block b2, block b1 is not on block b2, block b6 is not on block b2, block b2 is not on block b1, block b2 is not on the table, block b2 is not clear, block b2 is not on block b4, block b2 is not on block b3, block b2 is not on block b7 and block b2 is not on block b6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "f4af0166-b9ea-4af0-b6c0-5c7fef03cb50", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b7 is on block b2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b7 is on block b2?\n\n[ANSWER]:\n", "response": "False"}
{"id": "8ff5ed2f-d220-49aa-bc36-1ed15a482cae", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b7 is on block b3?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b7 is on block b3?\n\n[ANSWER]:\n", "response": "False"}
{"id": "861d8c1b-7200-4f63-9c56-30832df2d703", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b7 is clear?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b7 is clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "a79c3e8e-779f-4325-81c8-28f8cfdd5b3a", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b4 is not on block b5?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b4 is not on block b5?\n\n[ANSWER]:\n", "response": "True"}
{"id": "f566d5c9-2eb7-4f3d-a1cc-0bb1765e5155", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b2 is not on block b1?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b2 is not on block b1?\n\n[ANSWER]:\n", "response": "True"}
{"id": "6417903a-5fb7-4ca2-9d19-57f42838b689", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b3 is not on the table?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is it True or False that block b3 is not on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "d4428088-0c77-4948-ace1-24a50a565e36", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6, block b2 is on the table, block b3 is being held and block b4 is on block b1?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6, block b2 is on the table, block b3 is being held and block b4 is on block b1?\n\n[ANSWER]:\n", "response": "False"}
{"id": "d207cd79-8a8f-4fd7-a8ef-9448350ac90e", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is clear, block b3 is on block b6, block b6 is on block b2, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table and block b7 is on block b6?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is clear, block b3 is on block b6, block b6 is on block b2, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table and block b7 is on block b6?\n\n[ANSWER]:\n", "response": "False"}
{"id": "9a26f977-6e0e-4548-8d71-463cf66247a9", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is being held, block b5 is on block b1, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6 and block b2 is on the table?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is being held, block b5 is on block b1, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6 and block b2 is on the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "cc4232d3-832c-4549-aa66-1fde665d325f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "7e9eae92-0748-41c9-a3e1-d3a1a01e4604", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is not clear, block b7 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1 and block b2 is not being held?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is not clear, block b7 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1 and block b2 is not being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "f29023f5-6ae6-4f4f-bffb-de545c909260", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is not clear, block b2 is not clear, block b3 is not being held, block b2 is not on the table, block b5 is not on block b4, block b7 is not on block b6, block b6 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear and block b3 is not on the table?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is not clear, block b2 is not clear, block b3 is not being held, block b2 is not on the table, block b5 is not on block b4, block b7 is not on block b6, block b6 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear and block b3 is not on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "4ce15a37-aa82-473d-b709-23febefa362e", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all valid properties of the state that involve b4. Write None if there are none.", "answer": "block b5 is on block b4 and block b4 is on block b1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all valid properties of the state that involve b4. Write None if there are none.\n\n[ANSWER]:\n", "response": "* Block b4 is on block b1.\n* Block b4 is on the table."}
{"id": "b3da2efa-2211-4b6d-93ce-662f950a061c", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all valid properties of the state that involve b1. Write None if there are none.", "answer": "block b1 is on the table and block b4 is on block b1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all valid properties of the state that involve b1. Write None if there are none.\n\n[ANSWER]:\n", "response": "b1 is on the table"}
{"id": "2cc9319a-e713-485f-b82b-a72c7c6faf1c", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all valid properties of the state that involve b3. Write None if there are none.", "answer": "block b3 is being held", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all valid properties of the state that involve b3. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b3 is held.\n- Block b3 is not clear.\n- Block b3 is not on top of block b7."}
{"id": "a8e722f8-be7b-437d-8ee7-4ea260e43b1c", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b4. Write None if there are none.", "answer": "block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b4 is not on block b3, block b4 is not being held, block b4 is not on block b7, block b6 is not on block b4, block b3 is not on block b4, block b4 is not on the table, block b2 is not on block b4, block b4 is not clear, block b4 is not on block b5 and block b1 is not on block b4", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b4. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b4 is not being held\n- block b4 is not on top of block b1\n- block b4 is not on top of block b6\n- block b4 is not on block b7\n- block b4 is not clear"}
{"id": "9b6f946f-035f-4e61-9d4b-fddc19be0eef", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b5. Write None if there are none.", "answer": "block b3 is not on block b5, block b6 is not on block b5, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b5 is not on block b3, block b5 is not on block b6, block b5 is not on the table, block b2 is not on block b5, block b5 is not being held, block b1 is not on block b5, block b4 is not on block b5 and block b5 is not on block b1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b5. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b5 is not being held\n- block b5 is not clear\n- block b5 is not on top of block b4"}
{"id": "b3c95bc8-01f8-42a5-a455-5d4a7a3ccceb", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b2. Write None if there are none.", "answer": "block b4 is not on block b2, block b2 is not on block b1, block b2 is not on block b3, block b5 is not on block b2, block b2 is not on block b4, block b2 is not on block b7, block b7 is not on block b2, block b2 is not on block b5, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b2, block b6 is not on block b2 and block b2 is not being held", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b2. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b2 is not on b1\n- b2 is not on b4\n- b2 is not on b5\n- b2 is not on b6\n- b2 is not on b7\n- b2 is not being held"}
{"id": "17e6013e-ed44-4952-8cad-f4fad1e2a41c", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b5 is on block b3?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b5 is on block b3?\n\n[ANSWER]:\n", "response": "False"}
{"id": "b3a0eaea-2ee0-4f15-aef4-50fc0c9d5ad7", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b4 is on block b2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b4 is on block b2?\n\n[ANSWER]:\n", "response": "False"}
{"id": "ee591d3a-d94e-420a-bb5b-3f6de643d9ea", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b3 is on block b5?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b3 is on block b5?\n\n[ANSWER]:\n", "response": "False"}
{"id": "4cb4468f-1640-4f77-ae56-b931a0d25bba", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b3 is not on block b7?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b3 is not on block b7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "510332e1-fb61-4cdb-b192-544410dfd930", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b6 is not on the table?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that block b6 is not on the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "f7fb3d96-433d-4f61-b575-e033b38204ad", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that hand is not empty?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is it True or False that hand is not empty?\n\n[ANSWER]:\n", "response": "True"}
{"id": "b1cca438-6ff0-4b84-8cb6-907a1fd51172", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear, block b4 is being held, block b7 is on block b6, block b6 is on the table and block b2 is on the table?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear, block b4 is being held, block b7 is on block b6, block b6 is on the table and block b2 is on the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "c3a3b27c-f7ef-4162-a012-f6c1f37320ca", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is on block b1, block b6 is on block b7, block b4 is on block b6, block b4 is on the table, block b4 is on block b5, block b4 is on block b2, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2 and block b7 is clear?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is on block b1, block b6 is on block b7, block b4 is on block b6, block b4 is on the table, block b4 is on block b5, block b4 is on block b2, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2 and block b7 is clear?\n\n[ANSWER]:\n", "response": "False"}
{"id": "c41a306a-0436-46fd-bd90-9655a9df01c1", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is on block b1, block b5 is on the table, block b1 is on block b4, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear and block b4 is being held?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is on block b1, block b5 is on the table, block b1 is on block b4, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear and block b4 is being held?\n\n[ANSWER]:\n", "response": "False"}
{"id": "ca864d4a-f586-467c-937c-e4d65c0d7301", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3?\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "9f372fbf-db12-425b-a9f3-308cb788f037", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held and block b1 is not being held?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held and block b1 is not being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "d707fab5-4a43-4c51-b17c-7341b9107e36", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is not on block b2, block b5 is not clear, block b2 is not on the table, block b1 is not clear, block b7 is not clear, block b4 is not being held, block b3 is not on the table, block b3 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3 and block b3 is not being held?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is not on block b2, block b5 is not clear, block b2 is not on the table, block b1 is not clear, block b7 is not clear, block b4 is not being held, block b3 is not on the table, block b3 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3 and block b3 is not being held?\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "cb3517e7-64b8-4d8a-90f1-1082aa128383", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all valid properties of the state that involve b5. Write None if there are none.", "answer": "block b5 is on block b2 and block b5 is clear", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all valid properties of the state that involve b5. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b5 is clear.\n- b5 is on top of block b2."}
{"id": "905441a2-0ffd-4a46-b2e4-abee1ce9e820", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all valid properties of the state that involve b2. Write None if there are none.", "answer": "block b5 is on block b2 and block b2 is on the table", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all valid properties of the state that involve b2. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b2 is on the table\n- block b2 is clear\n- block b2 is not being held\n- block b2 is not on top of another block\n- block b5 is on top of block b2"}
{"id": "e1425b59-1d7a-41bd-a584-a578f84e866e", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.", "answer": "block b7 is on block b6 and block b6 is on the table", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b6 is on the table."}
{"id": "f68e97ab-f98c-48a0-96fe-d030f2dc799d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b3. Write None if there are none.", "answer": "block b3 is not on block b5, block b3 is not on block b6, block b4 is not on block b3, block b2 is not on block b3, block b7 is not on block b3, block b5 is not on block b3, block b3 is not on block b4, block b3 is not on block b7, block b3 is not on block b2, block b1 is not on block b3, block b3 is not being held, block b3 is not on block b1 and block b6 is not on block b3", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b3. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b3 is not being held.\n- Block b3 is not clear.\n- Block b3 is not on the table.\n- Block b3 is not on top of block b7."}
{"id": "638b9246-4a64-4069-949d-8417a96dc238", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b1. Write None if there are none.", "answer": "block b2 is not on block b1, block b1 is not on block b7, block b6 is not on block b1, block b7 is not on block b1, block b1 is not on block b6, block b1 is not on block b5, block b1 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1 and block b1 is not being held", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b1. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b1 is not clear.\n- Block b1 is not on the table.\n- Block b1 is not on top of any block."}
{"id": "d95c6f21-e653-4330-8066-1ed025ea5ea2", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b2. Write None if there are none.", "answer": "block b4 is not on block b2, block b2 is not on block b1, block b2 is not on block b3, block b2 is not on block b4, block b2 is not on block b7, block b7 is not on block b2, block b2 is not on block b5, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b1 is not on block b2, block b6 is not on block b2 and block b2 is not being held", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b2. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b2 is not clear\n- b2 is not on the table"}
{"id": "b71c8836-7770-4296-9e58-c23fddb921ad", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b1 is on block b3?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b1 is on block b3?\n\n[ANSWER]:\n", "response": "False"}
{"id": "8b99be29-74a0-41b8-90c3-eac41b2c006d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b1 is on the table?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b1 is on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "003e81b5-7972-49b0-b516-451df766f6aa", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b3 is on the table?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b3 is on the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "737e0b0d-a02e-4c59-82eb-0222aab090b4", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b5 is not on the table?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b5 is not on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "0922a192-78a3-4ca9-b7a1-4dfef27e80c0", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b5 is not on block b3?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b5 is not on block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "a6339483-1ec3-4196-b0f5-b3bf9a396e6e", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b3 is not on block b2?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is it True or False that block b3 is not on block b2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "382b1853-40eb-4bd6-91b2-dda3c6416b76", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b4, block b2 is on the table and block b5 is on block b1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b4, block b2 is on the table and block b5 is on block b1?\n\n[ANSWER]:\n", "response": "True"}
{"id": "dd11dca4-231c-4d38-870f-f96441fed0ce", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is on block b3, block b2 is being held, block b4 is on block b5, block b3 is on block b2, block b5 is on block b2, block b2 is on block b5, block b7 is on block b5, block b3 is being held, block b7 is on block b6, block b5 is on block b6, block b2 is on block b6, block b6 is on block b1 and block b4 is on the table?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is on block b3, block b2 is being held, block b4 is on block b5, block b3 is on block b2, block b5 is on block b2, block b2 is on block b5, block b7 is on block b5, block b3 is being held, block b7 is on block b6, block b5 is on block b6, block b2 is on block b6, block b6 is on block b1 and block b4 is on the table?\n\n[ANSWER]:\n", "response": "Initially For all of the following positions, no action can be performed to achieve this condition.\n\nFor the following cases, all of the states of the initial case makes it possible to achieve the result of the state: the block being unique, but the block being held and the block being on top of the table, so the block can not be un-un-und-end-end-ob-ob-ob-ob-off-off-off-the-the-the-"}
{"id": "e236c5ca-2bb8-47c6-ad96-68d08d12340a", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is on block b5, block b2 is on block b3, block b6 is being held, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table, block b5 is clear and block b6 is on the table?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is on block b5, block b2 is on block b3, block b6 is being held, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table, block b5 is clear and block b6 is on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "d67a305c-bc5d-478f-b7a7-1c898cc7025d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is not on the table, block b3 is not on the table, block b4 is not on the table, block b7 is not clear, block b2 is not clear, hand is not empty, block b2 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2 and block b1 is not on block b3?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is not on the table, block b3 is not on the table, block b4 is not on the table, block b7 is not clear, block b2 is not clear, hand is not empty, block b2 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2 and block b1 is not on block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "7d08a878-a95d-4a0b-95a4-f3bcf2b0f411", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties of the state True or False: hand is not empty, block b5 is not on block b1, block b7 is not clear, block b3 is not on the table, block b3 is not clear, block b6 is not clear, block b4 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2 and block b1 is not on block b3?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties of the state True or False: hand is not empty, block b5 is not on block b1, block b7 is not clear, block b3 is not on the table, block b3 is not clear, block b6 is not clear, block b4 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2 and block b1 is not on block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "1154cf43-b523-4a54-b122-c00412a3cafc", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is not on block b4, block b4 is not on the table, block b2 is not clear, block b2 is not on the table, hand is not empty, block b5 is not clear, block b3 is not clear, block b1 is not on the table, block b3 is not on the table, block b7 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2 and block b4 is not on block b5?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is not on block b4, block b4 is not on the table, block b2 is not clear, block b2 is not on the table, hand is not empty, block b5 is not clear, block b3 is not clear, block b1 is not on the table, block b3 is not on the table, block b7 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2 and block b4 is not on block b5?\n\n[ANSWER]:\n", "response": "False"}
{"id": "250b77d3-bc96-4912-a9ff-d02830d8f72b", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.", "answer": "block b6 is clear and block b6 is on the table", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.\n\n[ANSWER]:\n", "response": "b6 is clear"}
{"id": "a97b5ee6-47a2-48a5-b107-6a27ef5ca8f1", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.", "answer": "block b7 is clear and block b7 is on block b4", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b7 is stacked on block b4\n- block b7 is clear\n- block b7 is not on the table"}
{"id": "81e22692-8df5-48a0-ba9d-698a46226ebb", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all valid properties of the state that involve b5. Write None if there are none.", "answer": "block b5 is clear and block b5 is on block b1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all valid properties of the state that involve b5. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b5 is on block b1.\n- Block b5 is clear."}
{"id": "99a25b54-c6b3-4872-b525-f471ae35c604", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b4. Write None if there are none.", "answer": "block b4 is not on block b6, block b4 is not on block b2, block b4 is not on block b3, block b4 is not being held, block b4 is not on block b7, block b6 is not on block b4, block b3 is not on block b4, block b2 is not on block b4, block b5 is not on block b4, block b4 is not clear, block b4 is not on block b5, block b4 is not on block b1 and block b1 is not on block b4", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b4. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b1 is not on top of block b4.\n- Block b4 is not clear.\n- Block b4 is not on the table.\n- Block b4 is not being held.\n- Block b5 is not on block b4.\n- Block b7 is not on block b4."}
{"id": "6293f419-e566-48cf-9d56-adad2a1cdd4c", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b2. Write None if there are none.", "answer": "block b4 is not on block b2, block b2 is not on block b1, block b2 is not on block b3, block b5 is not on block b2, block b2 is not on block b4, block b2 is not on block b7, block b7 is not on block b2, block b2 is not on block b5, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b2, block b6 is not on block b2 and block b2 is not being held", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b2. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b2 is not clear.\n- b2 is not on top of any block.\n- b2 is not on the table."}
{"id": "6db8368e-1d40-4c5f-8b51-638e6afb38c6", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.", "answer": "block b4 is not on block b6, block b3 is not on block b6, block b6 is not on block b1, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b6 is not on block b4, block b5 is not on block b6, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b6, block b6 is not on block b2 and block b6 is not on block b3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b6 is not being held.\n- Block b6 is not on the table.\n- Block b6 is not clear."}
{"id": "1bf1c9d8-0cc1-4e8c-a588-b12fe2fbe290", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b3 is being held?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b3 is being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "12c96647-5a3c-48a0-8597-758e6cd30a0f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b7 is on block b1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b7 is on block b1?\n\n[ANSWER]:\n", "response": "True"}
{"id": "0890521e-b546-4545-bdac-3aa157a6887b", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b6 is on block b5?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b6 is on block b5?\n\n[ANSWER]:\n", "response": "True"}
{"id": "b0ba687a-0018-4d19-adef-521524929e2e", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b6 is not on block b3?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b6 is not on block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "a1a4c74b-9906-4717-b9bb-d52cb3e9e494", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b6 is not on block b5?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b6 is not on block b5?\n\n[ANSWER]:\n", "response": "False"}
{"id": "f6e0c797-3140-4b75-a4db-65164b2ef25b", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b7 is not on block b4?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is it True or False that block b7 is not on block b4?\n\n[ANSWER]:\n", "response": "True"}
{"id": "7b20a6e6-ea8c-4b44-bcbe-7227785e0002", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is clear, block b6 is on the table, block b3 is on the table, block b4 is on block b6, block b7 is being held, block b1 is on block b3, block b5 is on block b2, block b5 is being held and block b6 is on block b5?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is clear, block b6 is on the table, block b3 is on the table, block b4 is on block b6, block b7 is being held, block b1 is on block b3, block b5 is on block b2, block b5 is being held and block b6 is on block b5?\n\n[ANSWER]:\n", "response": "False"}
{"id": "436ca339-eadf-42f6-a635-5178b477afcd", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is on block b3, block b5 is on the table, block b3 is on block b6, block b6 is on the table, block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear and block b1 is on the table?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is on block b3, block b5 is on the table, block b3 is on block b6, block b6 is on the table, block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear and block b1 is on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "7ded72af-f1fc-4dea-ad6d-c19aebdbc47b", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is on block b2, block b1 is on block b3, block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b7 is on block b4 and block b2 is clear?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is on block b2, block b1 is on block b3, block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b7 is on block b4 and block b2 is clear?\n\n[ANSWER]:\n", "response": "True, False, True, False, True, True, False, True, True"}
{"id": "367fbd49-0e76-4de5-ae91-70d3a01872f7", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b4 is not clear, block b2 is not being held, block b1 is not being held and block b6 is not on block b3?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b4 is not clear, block b2 is not being held, block b1 is not being held and block b6 is not on block b3?\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "f8110bd6-e97a-42c2-8da2-45ebd26c4b44", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is not on block b6, block b7 is not clear, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b4 is not clear and block b2 is not being held?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is not on block b6, block b7 is not clear, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b4 is not clear and block b2 is not being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "472130db-4978-4faf-bb64-f6b7b9388bd1", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is not on the table, block b3 is not being held, block b1 is not on the table, block b7 is not on block b4, block b6 is not on block b5, block b2 is not clear, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table and block b4 is not on block b1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is not on the table, block b3 is not being held, block b1 is not on the table, block b7 is not on block b4, block b6 is not on block b5, block b2 is not clear, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table and block b4 is not on block b1?\n\n[ANSWER]:\n", "response": "True"}
{"id": "724f7434-60a5-4cbf-a358-790d7f1c91f9", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve b2. Write None if there are none.", "answer": "block b2 is on block b6 and block b2 is clear", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve b2. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b2 is on top of b6.\n- b2 is clear.\n- b2 is being held."}
{"id": "c359df81-4bb8-4c61-8232-a5d85e644b21", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve b4. Write None if there are none.", "answer": "block b4 is on the table and block b7 is on block b4", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve b4. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b4 is clear\n- b4 is on the table"}
{"id": "9a6f14ee-2b46-4027-bf2e-8386e9522002", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.", "answer": "block b7 is clear and block b7 is on block b4", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b7 is clear\n- block b7 is on top of block b4"}
{"id": "8cad339b-31de-4809-b640-2ae063df2040", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.", "answer": "block b6 is not on the table, block b4 is not on block b6, block b3 is not on block b6, block b6 is not on block b1, block b6 is not on block b7, block b7 is not on block b6, block b6 is not on block b4, block b5 is not on block b6, block b1 is not on block b6, block b6 is not being held, block b6 is not clear, block b6 is not on block b2 and block b6 is not on block b3", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b6 is not clear\n- b6 is not on the table"}
{"id": "201c93f4-6cf3-4cc4-bfe9-9db94f486070", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b1. Write None if there are none.", "answer": "block b2 is not on block b1, block b1 is not on block b7, block b6 is not on block b1, block b1 is not clear, block b7 is not on block b1, block b1 is not on block b6, block b1 is not on block b5, block b1 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4 and block b1 is not being held", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b1. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b1 is not clear.\n- Block b1 is not on the table.\n- Block b7 is not on top of block b1.\n- Block b6 is not on top of block b1.\n- Block b2 is not on block b1.\n- Block b5 is not on block b1.\n- Block b4 is not on block b1.\n- Block b3 is not on block b1."}
{"id": "9519382f-8aed-44c9-9df1-5390096c8df8", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b5. Write None if there are none.", "answer": "block b3 is not on block b5, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b5 is not on block b3, block b5 is not on block b6, block b5 is not on block b4, block b5 is not on the table, block b2 is not on block b5, block b5 is not being held, block b1 is not on block b5 and block b4 is not on block b5", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b5. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b5 is not clear\n- block b5 is not on the table\n- block b5 is not on top of block b2\n- block b5 is not on top of block b4\n- block b5 is not on top of block b6\n- block b5 is not on top of block b7"}
{"id": "4f1e0cec-9a6e-49fb-b5d2-537021805994", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b4 is on block b3?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b4 is on block b3?\n\n[ANSWER]:\n", "response": "False"}
{"id": "57bd8c47-ee2e-4b4f-b32c-f17d3a9380d5", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b7 is on block b1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b7 is on block b1?\n\n[ANSWER]:\n", "response": "False"}
{"id": "b853a95b-ba0b-42f7-a4c9-ea4f35586a15", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b6 is on block b5?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b6 is on block b5?\n\n[ANSWER]:\n", "response": "True"}
{"id": "40bc95c1-0868-46f4-b85a-5e9ff580fd98", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b5 is not on block b1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b5 is not on block b1?\n\n[ANSWER]:\n", "response": "False"}
{"id": "7b2026e6-35f4-4eb3-bf3f-d1695d161e17", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b7 is not on block b3?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b7 is not on block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "4c9d5e81-51c2-474e-9bd4-da42a0eb4769", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b5 is not on the table?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is it True or False that block b5 is not on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "a7f13b08-f9a8-4ddc-a948-837bee6ce696", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b4 is being held, block b7 is on block b3 and block b5 is on block b1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b4 is being held, block b7 is on block b3 and block b5 is on block b1?\n\n[ANSWER]:\n", "response": "True"}
{"id": "71c5680a-c066-45a2-b465-cce6d26caf28", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is on block b3, block b3 is on block b4, block b1 is on block b4, block b5 is being held, block b7 is on block b2, block b7 is on block b1, block b3 is on block b2 and block b6 is on block b5?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is on block b3, block b3 is on block b4, block b1 is on block b4, block b5 is being held, block b7 is on block b2, block b7 is on block b1, block b3 is on block b2 and block b6 is on block b5?\n\n[ANSWER]:\n", "response": "False"}
{"id": "c9844980-3fb8-432e-b926-af439d70d20d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is on block b1, block b2 is on block b7, block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table and block b4 is being held?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is on block b1, block b2 is on block b7, block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table and block b4 is being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "6da3a6f9-0382-4bdd-86f7-3e66da33f82f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "3c3718e5-46e8-481b-a673-a090ada03750", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is not on block b6, block b4 is not being held, block b7 is not clear, block b6 is not on block b5, block b7 is not on block b3, block b3 is not on block b2, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table and block b4 is not on block b1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is not on block b6, block b4 is not being held, block b7 is not clear, block b6 is not on block b5, block b7 is not on block b3, block b3 is not on block b2, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table and block b4 is not on block b1?\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "03ad861a-6427-4129-93fd-67f8b5a690b5", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is not on block b6, block b7 is not clear, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held and block b2 is not being held?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is not on block b6, block b7 is not clear, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held and block b2 is not being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "81289396-fecd-4248-ad6c-c13691fe3be7", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.", "answer": "block b6 is on block b5 and block b2 is on block b6", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b6 is on block b5\n- b6 is being held"}
{"id": "d7f4d244-5f8e-423a-947c-76d759ba49e2", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all valid properties of the state that involve b3. Write None if there are none.", "answer": "block b3 is on block b2 and block b7 is on block b3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all valid properties of the state that involve b3. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b3 is on block b2\n- hand is not holding block b3"}
{"id": "57e937a9-c5f3-4a4a-a492-f758d88d013f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.", "answer": "block b7 is clear and block b7 is on block b3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b7 is on block b3\n- b7 is not clear\n- b7 is not on the table\n- b7 is being held"}
{"id": "c79dbac8-c83b-42fc-b747-e3c7ef4a55f8", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b1. Write None if there are none.", "answer": "block b2 is not on block b1, block b1 is not on block b7, block b6 is not on block b1, block b1 is not clear, block b7 is not on block b1, block b1 is not on block b6, block b1 is not on block b5, block b1 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4 and block b1 is not being held", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b1. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b1 is not on the table\n- Block b1 is not clear\n- Block b4 is not on block b1"}
{"id": "8f61fc06-e77f-4af6-b6ee-57650a822f94", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b2. Write None if there are none.", "answer": "block b4 is not on block b2, block b2 is not on block b1, block b2 is not on block b3, block b5 is not on block b2, block b2 is not on block b4, block b2 is not on block b7, block b7 is not on block b2, block b2 is not on block b5, block b2 is not clear, block b1 is not on block b2, block b6 is not on block b2, block b2 is not on the table and block b2 is not being held", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b2. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b2 is not on top of b3\n- b2 is not clear\n- b2 is not being held"}
{"id": "f65635b8-efe1-4d7a-a7d8-ceb21958c282", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.", "answer": "block b6 is not on the table, block b4 is not on block b6, block b3 is not on block b6, block b6 is not on block b1, block b6 is not on block b7, block b7 is not on block b6, block b6 is not on block b4, block b5 is not on block b6, block b1 is not on block b6, block b6 is not being held, block b6 is not clear, block b6 is not on block b2 and block b6 is not on block b3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b6 is not clear.\n- Block b6 is not on block b4.\n- Block b6 is not on top of block b5."}
{"id": "f6bc08e1-d638-4d62-96aa-6c39dac1f3c3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties: block b4 is on block b5, block b1 is on block b3, block b4 is on block b6, block b7 is on block b5, block b6 is on block b4, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table and block b5 is clear, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties: block b4 is on block b5, block b1 is on block b3, block b4 is on block b6, block b7 is on block b5, block b6 is on block b4, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table and block b5 is clear, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "f5fdc780-76b9-4ad4-87b8-fb86104ca7b2", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties: block b3 is clear, block b2 is on block b1, block b2 is on block b7, block b2 is on block b3, block b2 is on block b6, block b3 is on block b7, block b3 is on the table, block b2 is clear, block b5 is on block b4 and block b7 is clear, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties: block b3 is clear, block b2 is on block b1, block b2 is on block b7, block b2 is on block b3, block b2 is on block b6, block b3 is on block b7, block b3 is on the table, block b2 is clear, block b5 is on block b4 and block b7 is clear, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "False"}
{"id": "8392b93b-fad4-4aa6-9338-db364b593f99", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties: block b1 is being held, block b2 is being held, block b4 is being held, block b7 is on block b4, block b7 is on block b2, block b6 is clear, block b4 is on block b5, block b1 is clear, block b2 is clear and block b5 is on block b4, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties: block b1 is being held, block b2 is being held, block b4 is being held, block b7 is on block b4, block b7 is on block b2, block b6 is clear, block b4 is on block b5, block b1 is clear, block b2 is clear and block b5 is on block b4, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "False"}
{"id": "96666640-a48d-4141-9de7-d63c31863698", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "50d8dc34-9fc0-4a4d-906b-ee005092e476", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties: block b2 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held and block b1 is not being held, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties: block b2 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held and block b1 is not being held, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "4d057b34-b026-40c6-bc0a-f1f3a9da382c", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties: block b7 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held and block b1 is not being held, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, are all of the following properties: block b7 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held and block b1 is not being held, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "dc51dd6b-e157-4ca7-a4bd-f7c0bd16b659", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6, block b2 is on the table, block b3 is being held and block b4 is on block b1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b7 is on block b6, \n- block b3 is held, \n- hand is not empty, \n- block b2 is clear, \n- block b1 is on the table, \n- block b6 is on the table, \n- block b5 is clear, \n- block b5 is on block b4, \n- block b2 is on the table, \n- block b4 is on block b1 and \n- block b7 is clear"}
{"id": "80d07ff1-d029-49a2-9760-a0aba859b989", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b3 is not on block b7\n- block b3 is not clear\n- block b7 is not clear"}
{"id": "87b74641-0992-424c-bf4a-7eafa428131e", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties: block b2 is on block b1, block b2 is on block b6, block b2 is on block b4, block b5 is on block b7, block b6 is on block b4, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear and block b1 is on the table, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties: block b2 is on block b1, block b2 is on block b6, block b2 is on block b4, block b5 is on block b7, block b6 is on block b4, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear and block b1 is on the table, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "False"}
{"id": "eda06ce6-5961-4002-bc38-3f78b946393f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties: block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear, block b4 is being held, block b7 is on block b6, block b6 is on the table and block b2 is on the table, correct? Respond with True or False.", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties: block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear, block b4 is being held, block b7 is on block b6, block b6 is on the table and block b2 is on the table, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "28beeee2-6457-4422-b175-187895667cda", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties: block b5 is being held, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear, block b4 is being held, block b7 is on block b6 and block b6 is on the table, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties: block b5 is being held, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear, block b4 is being held, block b7 is on block b6 and block b6 is on the table, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "6817d841-2e65-4dcb-b35d-84d3ab87c426", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties: block b5 is not on block b2, block b2 is not on the table, block b4 is not being held, block b1 is not on the table, block b5 is not clear, block b1 is not clear, block b3 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held and hand is not empty, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties: block b5 is not on block b2, block b2 is not on the table, block b4 is not being held, block b1 is not on the table, block b5 is not clear, block b1 is not clear, block b3 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held and hand is not empty, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "False"}
{"id": "90992c64-1275-49e1-8e18-5789dd3a0694", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "7aa0e704-99de-4ee5-a31c-39795c070d88", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties: block b6 is not on the table, block b1 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1 and block b2 is not being held, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, are all of the following properties: block b6 is not on the table, block b1 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1 and block b2 is not being held, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "60c9000b-a3c4-4cb2-9442-c89dcded1232", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear, block b4 is being held, block b7 is on block b6, block b6 is on the table and block b2 is on the table", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b7 is on b6\n- b3 is clear\n- b2 is clear\n- b1 is on the table\n- b6 is on the table\n- b5 is on b2\n- b4 is clear"}
{"id": "ecb02587-5539-492e-8512-1c177d1ae7a0", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.\n\n[ANSWER]:\n", "response": "In the current state, there are the following valid properties in the state that negation: none.\n\nWrite None if it is none."}
{"id": "f02ff9d0-192c-4483-9563-0d1dc3308bf5", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties: block b5 is on block b6, block b2 is on block b3, block b3 is on block b5, block b4 is on block b6, block b4 is on block b3, block b6 is on block b7, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear and block b7 is clear, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties: block b5 is on block b6, block b2 is on block b3, block b3 is on block b5, block b4 is on block b6, block b4 is on block b3, block b6 is on block b7, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear and block b7 is clear, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "False"}
{"id": "b81308a5-d147-476f-94ea-918cd9d397f6", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties: block b3 is on block b4, block b4 is on block b1, block b7 is on the table, block b1 is on block b5, block b6 is on block b4, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear and block b1 is on the table, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties: block b3 is on block b4, block b4 is on block b1, block b7 is on the table, block b1 is on block b5, block b6 is on block b4, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear and block b1 is on the table, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "37fb53cc-cd7c-4c69-8e48-1b5d97a68359", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties: block b7 is on block b5, block b2 is on block b3, block b4 is on block b1, block b1 is on block b3, block b3 is on block b2, block b5 is on the table, block b6 is on block b1, block b2 is on block b7, block b7 is on block b3, block b1 is clear, block b7 is on block b6, block b4 is on the table and block b3 is clear, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties: block b7 is on block b5, block b2 is on block b3, block b4 is on block b1, block b1 is on block b3, block b3 is on block b2, block b5 is on the table, block b6 is on block b1, block b2 is on block b7, block b7 is on block b3, block b1 is clear, block b7 is on block b6, block b4 is on the table and block b3 is clear, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "6b5ca6e2-5658-40f6-be05-f7a12728b9f2", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "0f33693d-ec37-46c1-b1ea-a2c6e14184f2", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties: block b2 is not on the table, block b3 is not on the table, block b4 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4 and block b3 is not being held, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties: block b2 is not on the table, block b3 is not on the table, block b4 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4 and block b3 is not being held, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "0f122a8e-7d91-44c2-b4a6-ce8527d0b38a", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties: block b3 is not clear, block b5 is not clear, block b7 is not clear, block b2 is not on the table, block b5 is not on block b1, hand is not empty, block b2 is not clear, block b3 is not on the table, block b7 is not on block b4, block b6 is not clear, block b6 is not on the table, block b4 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2 and block b1 is not on block b5, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, are all of the following properties: block b3 is not clear, block b5 is not clear, block b7 is not clear, block b2 is not on the table, block b5 is not on block b1, hand is not empty, block b2 is not clear, block b3 is not on the table, block b7 is not on block b4, block b6 is not clear, block b6 is not on the table, block b4 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2 and block b1 is not on block b5, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "aee31c0f-ae40-4db1-ba59-1a4af4277bd1", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b4, block b2 is on the table and block b5 is on block b1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b7 is clear\n- Block b7 is on top of block b4\n- Block b6 is on the table\n- Block b5 is clear\n- Block b5 is on top of block b1\n- Block b4 is on the table\n- Block b3 is on the table\n- Block b2 is clear\n- Block b2 is on the table\n- Block b1 is on the table\n- Hand is empty"}
{"id": "7eb57ae1-d73e-416a-a3cf-775f69b81b36", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b3 is not on b7\n- b3 is not clear\n- b5 is not on b4\n- b4 is not on b1\n- b5 is not on b2\n- b7 is not on b6"}
{"id": "b04c3a77-0a3b-43bd-b483-1e7ff40ea1ae", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b3 is on block b7, block b6 is on the table, block b7 is on block b5, block b2 is on block b7, block b5 is on the table, block b6 is on block b5, block b4 is on the table, block b2 is on block b6 and block b7 is clear, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b3 is on block b7, block b6 is on the table, block b7 is on block b5, block b2 is on block b7, block b5 is on the table, block b6 is on block b5, block b4 is on the table, block b2 is on block b6 and block b7 is clear, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "False"}
{"id": "585dca3c-be5b-4642-87ed-14b2e9d7094b", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b2 is on block b4, block b3 is on block b5, block b4 is on block b7, block b7 is being held, block b1 is on block b4, block b4 is on block b2, block b6 is on block b3, block b6 is on block b5 and block b4 is on the table, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b2 is on block b4, block b3 is on block b5, block b4 is on block b7, block b7 is being held, block b1 is on block b4, block b4 is on block b2, block b6 is on block b3, block b6 is on block b5 and block b4 is on the table, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "52a5be3f-89cb-4286-8c1b-79695db74519", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b1 is on block b3, block b2 is on block b5, block b4 is on block b6, block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear, block b1 is on the table and block b7 is on block b4, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b1 is on block b3, block b2 is on block b5, block b4 is on block b6, block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear, block b1 is on the table and block b7 is on block b4, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "8f2ac7fe-abfa-4020-9daa-215ac67891e0", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b7 is not on block b4, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b4 is not clear, block b2 is not being held and block b1 is not being held, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b7 is not on block b4, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b4 is not clear, block b2 is not being held and block b1 is not being held, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "d9800fd9-a5de-46ea-b736-4139fe4228af", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b4 is not clear, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b4 is not clear, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "0d8e4ef8-52a3-4ee8-82e2-3a3459fab4e0", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b5 is not on block b1, block b4 is not on the table, block b2 is not clear, block b1 is not on the table, block b3 is not being held, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1 and block b3 is not on block b1, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b5 is not on block b1, block b4 is not on the table, block b2 is not clear, block b1 is not on the table, block b3 is not being held, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1 and block b3 is not on block b1, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True."}
{"id": "9a10aab7-2a33-4062-be8f-fe01866bb9f7", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b7 is on block b4, block b2 is clear, block b3 is being held and block b5 is on block b1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b7 is on block b4\n- block b3 is on the table\n- hand is holding block b2\n- block b2 is on block b6\n- block b1 is on the table\n- block b6 is on block b5\n- block b5 is on block b1"}
{"id": "d2dbd5d4-70bd-4a3a-b033-f55b447b55b2", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b4 is not clear, block b2 is not being held, block b1 is not being held and block b6 is not on block b3", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b3 is not on top of b7\n- b5 is not on top of b4\n- b4 is not on top of b1\n- b5 is not on top of b2\n- b7 is not on top of b6\n- b6 is not on the table\n- b5 is not clear\n- b2 is not clear\n- b4 is not clear\n- b7 is not clear\n- b6 is not clear\n- b3 is not clear\n- hand is not empty"}
{"id": "51824b5e-eaeb-42a6-ad9c-26655dee1630", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties: block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b4 is being held, block b7 is on block b3 and block b5 is on block b1, correct? Respond with True or False.", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties: block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b4 is being held, block b7 is on block b3 and block b5 is on block b1, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "4c92a743-07dc-4267-b6d1-15ee1b8d48b1", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties: block b6 is on block b1, block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b4 is being held and block b7 is on block b3, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties: block b6 is on block b1, block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b4 is being held and block b7 is on block b3, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "ef01a0e0-977f-4692-ab70-9bd456836d29", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties: block b3 is on block b4, block b4 is on block b2, block b6 is on block b2, block b1 is on block b6, block b6 is on block b4, block b3 is on block b2, block b6 is on block b5 and block b2 is on block b6, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties: block b3 is on block b4, block b4 is on block b2, block b6 is on block b2, block b1 is on block b6, block b6 is on block b4, block b3 is on block b2, block b6 is on block b5 and block b2 is on block b6, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "False"}
{"id": "1394899c-576a-4d7f-bf97-932602d553d3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "d5b746e2-20cd-4e28-8e09-b2e6fd90e533", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties: block b2 is not on block b6, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held and block b1 is not being held, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties: block b2 is not on block b6, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held and block b1 is not being held, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "f363b41d-f03c-44b3-8bde-f2b8c81f59eb", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties: block b2 is not on block b6, block b1 is not on the table, block b4 is not being held, block b7 is not on block b3, block b3 is not on block b2, block b5 is not on block b1, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table and block b4 is not on block b1, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, are all of the following properties: block b2 is not on block b6, block b1 is not on the table, block b4 is not being held, block b7 is not on block b3, block b3 is not on block b2, block b5 is not on block b1, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table and block b4 is not on block b1, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "dc9396ab-1528-47ac-a2fb-aaefcda79642", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b4 is being held, block b7 is on block b3 and block b5 is on block b1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b3 is on block b2\n- block b2 is on block b6\n- block b6 is on block b5\n- block b5 is on block b1\n- block b4 is clear\n- block b7 is being held\n- hand is not empty"}
{"id": "45c7f828-0138-4977-b61d-f003ba32d6de", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b3 is not clear.\n- Block b3 is not on top of block b7.\n- Block b5 is not clear.\n- Block b5 is not on top of block b4.\n- Block b2 is not clear.\n- Block b2 is not on top of block b6.\n- Block b4 is not clear.\n- Block b4 is not on top of block b1.\n- Block b7 is not clear.\n- Block b6 is not on the table.\n- Block b7 is not on top of block b3."}
{"id": "578ab1fe-44fe-4a82-8198-14ab47e79e78", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "5c6f43c9-212b-41c4-8036-f74d7b511aca", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: stack block b1 on block b4. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: stack block b1 on block b4. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "f9865f48-82e5-4602-84f6-5fac7267a8e3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: stack block b2 on block b4. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: stack block b2 on block b4. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "ae9f6b11-d093-437d-a6fb-b847ad8e4b98", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: unstack block b3 from block b7. Is the action: unstack block b3 from block b7 executable at step 1, True or False?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 1 the following actions are planned to be performed: unstack block b3 from block b7. Is the action: unstack block b3 from block b7 executable at step 1, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "c0d8a3a1-77f9-4b62-aad0-36fa4293774f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: unstack block b4 from block b1. Is the action: unstack block b4 from block b1 executable at step 1, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 1 the following actions are planned to be performed: unstack block b4 from block b1. Is the action: unstack block b4 from block b1 executable at step 1, True or False?\n\n[ANSWER]:\n", "response": "False"}
{"id": "dc0c4f98-b330-4c78-9422-77a07bd724ee", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: pickup block b3. Is the action: pickup block b3 executable at step 1, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 1 the following actions are planned to be performed: pickup block b3. Is the action: pickup block b3 executable at step 1, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "177643b1-0860-48b2-abc8-34932985ad2d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "stack block b3 on block b5, stack block b3 on block b2, put down block b3 and stack block b3 on block b7", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all executable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "put down block b3"}
{"id": "f7ca2144-57c5-4835-8b2e-a355a795e0ee", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "unstack block b4 from block b3, pickup block b4, stack block b4 on block b6, stack block b1 on block b3, stack block b4 on block b7, unstack block b3 from block b4, unstack block b1 from block b4, unstack block b1 from block b5, pickup block b6, unstack block b3 from block b1, unstack block b3 from block b5, stack block b3 on block b1, put down block b6, stack block b2 on block b4, unstack block b4 from block b5, unstack block b7 from block b2, unstack block b5 from block b6, unstack block b3 from block b2, stack block b3 on block b4, unstack block b6 from block b7, unstack block b4 from block b2, stack block b5 on block b4, unstack block b7 from block b1, put down block b4, stack block b6 on block b5, unstack block b7 from block b3, stack block b5 on block b3, stack block b4 on block b3, stack block b6 on block b2, stack block b5 on block b1, put down block b5, unstack block b4 from block b1, unstack block b5 from block b3, stack block b1 on block b7, stack block b5 on block b7, unstack block b7 from block b4, unstack block b2 from block b5, stack block b7 on block b3, unstack block b2 from block b6, unstack block b5 from block b1, stack block b7 on block b1, unstack block b7 from block b6, unstack block b6 from block b3, unstack block b4 from block b6, unstack block b3 from block b7, stack block b2 on block b6, unstack block b5 from block b2, stack block b2 on block b5, stack block b5 on block b2, unstack block b6 from block b2, unstack block b7 from block b5, stack block b4 on block b5, stack block b1 on block b6, pickup block b3, put down block b1, unstack block b1 from block b2, unstack block b3 from block b6, pickup block b2, pickup block b1, stack block b1 on block b2, unstack block b1 from block b3, stack block b4 on block b1, stack block b4 on block b2, unstack block b2 from block b4, unstack block b2 from block b7, unstack block b2 from block b1, pickup block b5, stack block b2 on block b3, stack block b7 on block b6, stack block b7 on block b4, unstack block b5 from block b4, put down block b7, stack block b5 on block b6, stack block b1 on block b5, stack block b7 on block b2, stack block b2 on block b1, unstack block b6 from block b5, put down block b2, unstack block b6 from block b1, stack block b6 on block b1, pickup block b7, unstack block b5 from block b7, unstack block b1 from block b6, stack block b1 on block b4, stack block b3 on block b6, unstack block b6 from block b4, unstack block b2 from block b3, stack block b6 on block b4, stack block b6 on block b3, stack block b6 on block b7, unstack block b1 from block b7, stack block b2 on block b7, stack block b7 on block b5 and unstack block b4 from block b7", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Stack block b3 on block b7\n- Stack block b3 on block b6\n- Stack block b3 on block b5\n- Stack block b3 on block b4\n- Stack block b3 on block b2\n- Stack block b3 on block b1\n- Put down block b3\n- Unstack block b3 from block b4\n- Unstack block b3 from block b5\n- Unstack block b3 from block b6\n- Unstack block b3 from block b7"}
{"id": "03d139f9-44a8-4a46-92d1-89454309ca22", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b6 from block b5 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "unstack block b6 from block b5", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b6 from block b5 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "unstack"}
{"id": "4fd4c3ac-a4be-4ec8-8719-74877bc4a774", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "None"}
{"id": "06421e42-e449-42c6-82a4-0154ecbe41b7", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "unstack block b5 from block b2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "unstack"}
{"id": "2e05c0b9-337d-43b7-bda8-3247e61418bb", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "cc245d98-8e42-41bb-a14f-9029732dc90b", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: stack block b1 on block b6, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: stack block b1 on block b6, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "a1bf2e67-aa04-4f0f-b135-d7c9d6a1ba64", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, unstack block b3 from block b5, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, unstack block b3 from block b5, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "6c52824e-7772-4f5d-b54d-4da96a669bd1", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, unstack block b6 from block b3 and unstack block b4 from block b1. Is the action: unstack block b6 from block b3 executable at step 4, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 5 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, unstack block b6 from block b3 and unstack block b4 from block b1. Is the action: unstack block b6 from block b3 executable at step 4, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "d345c773-af66-405f-b5f6-e0ddfc7a5343", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1. Is the action: put down block b3 executable at step 2, True or False?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 5 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1. Is the action: put down block b3 executable at step 2, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "f386c5fb-1dfd-49ce-a3c5-437bafa79638", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b6 on block b7 and unstack block b4 from block b1. Is the action: stack block b6 on block b7 executable at step 4, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 5 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b6 on block b7 and unstack block b4 from block b1. Is the action: stack block b6 on block b7 executable at step 4, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "addace7c-256d-4714-be40-c70f927b63d9", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "stack block b4 on block b7, put down block b4, stack block b4 on block b3, stack block b4 on block b5 and stack block b4 on block b1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all executable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "stack block b3 on block b2, stack block b3 on block b7, put down block b4, stack block b5 on block b7"}
{"id": "deab789f-63c4-4ef0-b824-579fec6eb0e7", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "unstack block b4 from block b3, pickup block b4, stack block b4 on block b6, stack block b1 on block b3, unstack block b3 from block b4, unstack block b1 from block b4, unstack block b1 from block b5, pickup block b6, unstack block b3 from block b1, unstack block b3 from block b5, stack block b3 on block b1, put down block b6, stack block b2 on block b4, unstack block b4 from block b5, unstack block b7 from block b2, unstack block b5 from block b6, unstack block b3 from block b2, stack block b3 on block b4, unstack block b6 from block b7, unstack block b4 from block b2, stack block b5 on block b4, unstack block b7 from block b1, stack block b6 on block b5, unstack block b7 from block b3, stack block b3 on block b5, stack block b5 on block b3, stack block b6 on block b2, stack block b5 on block b1, put down block b5, unstack block b4 from block b1, unstack block b5 from block b3, stack block b3 on block b2, stack block b1 on block b7, stack block b5 on block b7, unstack block b7 from block b4, unstack block b2 from block b5, stack block b7 on block b3, unstack block b2 from block b6, unstack block b5 from block b1, stack block b7 on block b1, unstack block b7 from block b6, unstack block b6 from block b3, unstack block b4 from block b6, unstack block b3 from block b7, stack block b2 on block b6, unstack block b5 from block b2, stack block b2 on block b5, stack block b5 on block b2, unstack block b6 from block b2, unstack block b7 from block b5, stack block b1 on block b6, put down block b3, pickup block b3, put down block b1, unstack block b1 from block b2, unstack block b3 from block b6, pickup block b2, pickup block b1, stack block b1 on block b2, unstack block b1 from block b3, stack block b4 on block b2, unstack block b2 from block b4, unstack block b2 from block b7, unstack block b2 from block b1, pickup block b5, stack block b2 on block b3, stack block b7 on block b6, stack block b7 on block b4, unstack block b5 from block b4, put down block b7, stack block b5 on block b6, stack block b1 on block b5, stack block b7 on block b2, stack block b2 on block b1, unstack block b6 from block b5, put down block b2, unstack block b6 from block b1, stack block b6 on block b1, pickup block b7, unstack block b5 from block b7, unstack block b1 from block b6, stack block b1 on block b4, stack block b3 on block b6, unstack block b6 from block b4, unstack block b2 from block b3, stack block b6 on block b4, stack block b6 on block b3, stack block b6 on block b7, unstack block b1 from block b7, stack block b3 on block b7, stack block b2 on block b7, stack block b7 on block b5 and unstack block b4 from block b7", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Pick up block b6\n- Pick up block b7\n- Stack block b1 on block b6\n- Stack block b1 on block b7\n- Stack block b2 on block b1\n- Stack block b2 on block b7\n- Stack block b3 on block b1\n- Stack block b3 on block b2\n- Stack block b3 on block b6\n- Stack block b3 on block b7\n- Stack block b4 on block b6\n- Stack block b4 on block b7\n- Stack block b5 on block b1\n- Stack block b5 on block b7\n- Stack block b6 on block b4\n- Stack block b6 on block b5\n- Unstack block b1 from block b4\n- Unstack block b1 from block b5\n- Unstack block b2 from block b1\n- Unstack block b2 from block b7\n- Unstack block b3 from block b2\n- Unstack block b4 from block b1\n- Unstack block b5 from block b4\n- Unstack block b5 from block b7\n- Unstack block b6 from block b4\n- Unstack block b6 from block b5\n- Unstack block b7 from block b6"}
{"id": "a767253a-a8e2-4a7e-906e-5dba9b3828e8", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and stack block b3 on block b2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "stack block b3 on block b2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and stack block b3 on block b2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "None"}
{"id": "c3c8612d-f923-48fb-8511-d1316ccd3714", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, stack block b4 on block b5, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "stack block b4 on block b5", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, stack block b4 on block b5, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "stack block b4 on block b5"}
{"id": "efe81ae2-0685-400f-bbbd-9d34a6c3538f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, unstack block b3 from block b7 and unstack block b4 from block b1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "unstack block b3 from block b7", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, unstack block b3 from block b7 and unstack block b4 from block b1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "unstack block b3 from block b7"}
{"id": "67a2d61d-dbff-412f-9c9b-d233088dedc6", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, stack block b1 on block b6, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, stack block b1 on block b6, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "3f35d247-88a8-4950-9bf8-67a6109d1226", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "5d44acf8-fce2-452a-be91-5deea5b7791f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": " True"}
{"id": "cd036246-bc67-4450-ba1d-5ee260bb87c0", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: unstack block b3 from block b7, stack block b2 on block b4, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4. Is the action: stack block b2 on block b4 executable at step 2, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 10 the following actions are planned to be performed: unstack block b3 from block b7, stack block b2 on block b4, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4. Is the action: stack block b2 on block b4 executable at step 2, True or False?\n\n[ANSWER]:\n", "response": "False"}
{"id": "999f22b6-363f-4168-a022-b1c625c34912", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4. Is the action: put down block b4 executable at step 6, True or False?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 10 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4. Is the action: put down block b4 executable at step 6, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "fc6d62b3-2570-4a1c-841a-f83a02981665", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and pickup block b3. Is the action: pickup block b3 executable at step 10, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 10 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and pickup block b3. Is the action: pickup block b3 executable at step 10, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "1f0005c0-3c2d-415a-a804-1c26fc08fffe", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "pickup block b6, unstack block b7 from block b4, unstack block b5 from block b1, pickup block b3 and pickup block b2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all executable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "stack block b2 on block b1, stack block b2 on block b4, put down block b5, pick up block b1, pick up block b5, pick up block b3, stack block b3 on block b6, stack block b3 on block b7, stack block b4 on block b1"}
{"id": "f27b8303-e1c0-4138-b375-6825bd360a0d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "unstack block b4 from block b3, pickup block b4, stack block b4 on block b6, stack block b1 on block b3, stack block b4 on block b7, unstack block b3 from block b4, unstack block b1 from block b4, unstack block b1 from block b5, unstack block b3 from block b1, unstack block b3 from block b5, stack block b3 on block b1, put down block b6, stack block b2 on block b4, unstack block b4 from block b5, unstack block b7 from block b2, unstack block b5 from block b6, unstack block b3 from block b2, stack block b3 on block b4, unstack block b6 from block b7, unstack block b4 from block b2, stack block b5 on block b4, unstack block b7 from block b1, put down block b4, stack block b6 on block b5, unstack block b7 from block b3, stack block b3 on block b5, stack block b5 on block b3, stack block b4 on block b3, stack block b6 on block b2, stack block b5 on block b1, put down block b5, unstack block b4 from block b1, unstack block b5 from block b3, stack block b3 on block b2, stack block b1 on block b7, stack block b5 on block b7, unstack block b2 from block b5, stack block b7 on block b3, unstack block b2 from block b6, stack block b7 on block b1, unstack block b7 from block b6, unstack block b6 from block b3, unstack block b4 from block b6, unstack block b3 from block b7, stack block b2 on block b6, unstack block b5 from block b2, stack block b2 on block b5, stack block b5 on block b2, unstack block b6 from block b2, unstack block b7 from block b5, stack block b4 on block b5, stack block b1 on block b6, put down block b3, put down block b1, unstack block b1 from block b2, unstack block b3 from block b6, pickup block b1, stack block b1 on block b2, unstack block b1 from block b3, stack block b4 on block b1, stack block b4 on block b2, unstack block b2 from block b4, unstack block b2 from block b7, unstack block b2 from block b1, pickup block b5, stack block b2 on block b3, stack block b7 on block b6, stack block b7 on block b4, unstack block b5 from block b4, put down block b7, stack block b5 on block b6, stack block b1 on block b5, stack block b7 on block b2, stack block b2 on block b1, unstack block b6 from block b5, put down block b2, unstack block b6 from block b1, stack block b6 on block b1, pickup block b7, unstack block b5 from block b7, unstack block b1 from block b6, stack block b1 on block b4, stack block b3 on block b6, unstack block b6 from block b4, unstack block b2 from block b3, stack block b6 on block b4, stack block b6 on block b3, stack block b6 on block b7, unstack block b1 from block b7, stack block b3 on block b7, stack block b2 on block b7, stack block b7 on block b5 and unstack block b4 from block b7", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "- pick up block b3\n- pick up block b5\n- pick up block b4\n- pick up block b2\n- pick up block b1\n- pick up block b6\n- pick up block b7\n- stack block b3 on block b7\n- stack block b3 on block b6\n- stack block b3 on block b5\n- stack block b3 on block b4\n- stack block b3 on block b2\n- stack block b3 on block b1\n- stack block b5 on block b7\n- stack block b5 on block b6\n- stack block b5 on block b3\n- stack block b5 on block b4\n- stack block b5 on block b1\n- stack block b4 on block b7\n- stack block b4 on block b6\n- stack block b4 on block b5\n- stack block b4 on block b3\n- stack block b4 on block b2\n- stack block b2 on block b7\n- stack block b2 on block b6\n- stack block b2 on block b5\n- stack block b2 on block b4\n- stack block b2 on block b3\n- stack block b1 on block b7\n- stack block b1 on block b6\n- stack block b1 on block b5\n- stack block b1 on block b4\n- stack block b1 on block b3\n- stack block b1 on block b2\n- stack block b6 on block b7\n- stack block b6 on block b5\n- stack block b6 on block b4\n- stack block b6 on block b3\n- stack block b6 on block b2\n- stack block b6 on block b1\n- stack block b7 on block b3\n- stack block b7 on block b2\n- stack block b7 on block b1\n- stack block b7 on block b6\n- put down block b7\n- put down block b6\n- put down block b5\n- put down block b4\n- put down block b3\n- put down block b2\n- put down block b1\n- unstack block b3 from block b4"}
{"id": "35c8238a-6cad-4bda-bf1d-89d35622b626", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "Unstack block b5 from block b2"}
{"id": "ba868159-1da5-4953-b60a-6ab5139f9ab6", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b7 from block b5, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "unstack block b7 from block b5", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b7 from block b5, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "None"}
{"id": "cb392822-4f63-4015-beb5-0be561693e95", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b1 from block b6, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "unstack block b1 from block b6", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b1 from block b6, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "Put down block b3"}
{"id": "fcbe6df4-0696-49ba-855a-e6ce9d27cd33", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "46d2a28c-041f-4ee2-ba14-7e04d2e84dfc", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, unstack block b3 from block b5, stack block b2 on block b6 and pickup block b3. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, unstack block b3 from block b5, stack block b2 on block b6 and pickup block b3. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "1c7785b0-900c-47ff-9613-836fdc388da0", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, stack block b2 on block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, stack block b2 on block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "45af0ac7-cf53-44b4-b987-3b416cf874be", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3. Is the action: unstack block b4 from block b1 executable at step 5, True or False?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 15 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3. Is the action: unstack block b4 from block b1 executable at step 5, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "2d2742c9-a25e-4b7e-a13a-2d8cc1d02eb4", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3. Is the action: stack block b7 on block b4 executable at step 10, True or False?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 15 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3. Is the action: stack block b7 on block b4 executable at step 10, True or False?\n\n[ANSWER]:\n", "response": "False"}
{"id": "87b606c6-4cb3-4237-ad22-4e64fe2063ea", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, unstack block b1 from block b7, pickup block b2, stack block b2 on block b6 and pickup block b3. Is the action: unstack block b1 from block b7 executable at step 12, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 15 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, unstack block b1 from block b7, pickup block b2, stack block b2 on block b6 and pickup block b3. Is the action: unstack block b1 from block b7 executable at step 12, True or False?\n\n[ANSWER]:\n", "response": "False"}
{"id": "95909c0d-011d-480c-b203-7e41f8e661f4", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "stack block b3 on block b2, put down block b3 and stack block b3 on block b7", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all executable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "stack block b3 on block b1, stack block b3 on block b5, stack block b3 on block b7, pickup block b5, pickup block b6, pickup block b7"}
{"id": "3642b10a-190b-435f-a2f1-5c0cda23d826", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "unstack block b4 from block b3, pickup block b4, stack block b4 on block b6, stack block b1 on block b3, stack block b4 on block b7, unstack block b3 from block b4, unstack block b1 from block b4, unstack block b1 from block b5, pickup block b6, unstack block b3 from block b1, unstack block b3 from block b5, stack block b3 on block b1, put down block b6, stack block b2 on block b4, unstack block b4 from block b5, unstack block b7 from block b2, unstack block b5 from block b6, unstack block b3 from block b2, stack block b3 on block b4, unstack block b6 from block b7, unstack block b4 from block b2, stack block b5 on block b4, unstack block b7 from block b1, put down block b4, stack block b6 on block b5, unstack block b7 from block b3, stack block b3 on block b5, stack block b5 on block b3, stack block b4 on block b3, stack block b6 on block b2, stack block b5 on block b1, put down block b5, unstack block b4 from block b1, unstack block b5 from block b3, stack block b1 on block b7, stack block b5 on block b7, unstack block b7 from block b4, unstack block b2 from block b5, stack block b7 on block b3, unstack block b2 from block b6, unstack block b5 from block b1, stack block b7 on block b1, unstack block b7 from block b6, unstack block b6 from block b3, unstack block b4 from block b6, unstack block b3 from block b7, stack block b2 on block b6, unstack block b5 from block b2, stack block b2 on block b5, stack block b5 on block b2, unstack block b6 from block b2, unstack block b7 from block b5, stack block b4 on block b5, stack block b1 on block b6, pickup block b3, put down block b1, unstack block b1 from block b2, unstack block b3 from block b6, pickup block b2, pickup block b1, stack block b1 on block b2, unstack block b1 from block b3, stack block b4 on block b1, stack block b4 on block b2, unstack block b2 from block b4, unstack block b2 from block b7, unstack block b2 from block b1, pickup block b5, stack block b2 on block b3, stack block b7 on block b6, stack block b7 on block b4, unstack block b5 from block b4, put down block b7, stack block b5 on block b6, stack block b1 on block b5, stack block b7 on block b2, stack block b2 on block b1, unstack block b6 from block b5, put down block b2, unstack block b6 from block b1, stack block b6 on block b1, pickup block b7, unstack block b5 from block b7, unstack block b1 from block b6, stack block b1 on block b4, stack block b3 on block b6, unstack block b6 from block b4, unstack block b2 from block b3, stack block b6 on block b4, stack block b6 on block b3, stack block b6 on block b7, unstack block b1 from block b7, stack block b2 on block b7, stack block b7 on block b5 and unstack block b4 from block b7", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Pickup block b4\n- Pickup block b1\n- Pickup block b7\n- Stack block b4 on block b1\n- Stack block b1 on block b7\n- Stack block b7 on block b6\n- Stack block b6 on block b5\n- Stack block b5 on block b2\n- Stack block b2 on block b6\n- Unstack block b6 from block b5\n- Unstack block b5 from block b1\n- Unstack block b4 from block b7\n- Unstack block b7 from block b4\n- Unstack block b2 from block b6\n- Unstack block b6 from block b5\n- Unstack block b5 from block b2\n- Unstack block b7 from block b4\n- Unstack block b4 from block b1\n- Unstack block b3 from block b7\n- Put down block b6\n- Put down block b5\n- Put down block b4\n- Put down block b7\n- Put down block b3\n- Put down block b2\n- Put down block b1"}
{"id": "753e8126-72f8-4adc-8707-88a6505e4afa", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "stack block b7 on block b4"}
{"id": "d12c519a-058c-481f-b57c-1c68d0414301", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, stack block b6 on block b2, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "stack block b6 on block b2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, stack block b6 on block b2, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "None"}
{"id": "be612556-61fa-4865-8154-7acce06e2257", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, unstack block b7 from block b2 and pickup block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "unstack block b7 from block b2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, unstack block b7 from block b2 and pickup block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "pickup block b3"}
{"id": "e243d0e1-3de7-497c-943c-2724b7e2187c", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "798a9b06-7cfe-4c2e-91f8-913f4e97c608", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b3 from block b2, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b3 from block b2, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "b13d72c2-5e90-4172-bb18-070ae064d420", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, stack block b6 on block b2, stack block b7 on block b3 and pickup block b4. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, stack block b6 on block b2, stack block b7 on block b3 and pickup block b4. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "0c404525-8b5d-4663-b363-1eab5d8b9e42", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, unstack block b2 from block b5, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4. Is the action: unstack block b2 from block b5 executable at step 14, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 19 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, unstack block b2 from block b5, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4. Is the action: unstack block b2 from block b5 executable at step 14, True or False?\n\n[ANSWER]:\n", "response": "False"}
{"id": "83aff901-92a3-4392-a253-491fa48626f3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, unstack block b7 from block b1, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4. Is the action: unstack block b7 from block b1 executable at step 12, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 19 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, unstack block b7 from block b1, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4. Is the action: unstack block b7 from block b1 executable at step 12, True or False?\n\n[ANSWER]:\n", "response": "False"}
{"id": "55d0fb9a-0400-40cf-9cf3-73d27044861d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, unstack block b2 from block b6, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4. Is the action: unstack block b2 from block b6 executable at step 12, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 19 the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, unstack block b2 from block b6, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4. Is the action: unstack block b2 from block b6 executable at step 12, True or False?\n\n[ANSWER]:\n", "response": "False"}
{"id": "08ca5de9-c517-4d0f-ad16-d447ea49bd4c", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "stack block b4 on block b7 and put down block b4", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all executable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "stack block b4 on block b2"}
{"id": "ea3e3341-6cf6-4583-94fd-fa899842f32a", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "unstack block b4 from block b3, pickup block b4, stack block b4 on block b6, stack block b1 on block b3, unstack block b3 from block b4, unstack block b1 from block b4, unstack block b1 from block b5, pickup block b6, unstack block b3 from block b1, unstack block b3 from block b5, stack block b3 on block b1, put down block b6, stack block b2 on block b4, unstack block b4 from block b5, unstack block b7 from block b2, unstack block b5 from block b6, unstack block b3 from block b2, stack block b3 on block b4, unstack block b6 from block b7, unstack block b4 from block b2, stack block b5 on block b4, unstack block b7 from block b1, stack block b6 on block b5, unstack block b7 from block b3, stack block b3 on block b5, stack block b5 on block b3, stack block b4 on block b3, stack block b6 on block b2, stack block b5 on block b1, put down block b5, unstack block b4 from block b1, unstack block b5 from block b3, stack block b3 on block b2, stack block b1 on block b7, stack block b5 on block b7, unstack block b7 from block b4, unstack block b2 from block b5, stack block b7 on block b3, unstack block b2 from block b6, unstack block b5 from block b1, stack block b7 on block b1, unstack block b7 from block b6, unstack block b6 from block b3, unstack block b4 from block b6, unstack block b3 from block b7, stack block b2 on block b6, unstack block b5 from block b2, stack block b2 on block b5, stack block b5 on block b2, unstack block b6 from block b2, unstack block b7 from block b5, stack block b4 on block b5, stack block b1 on block b6, put down block b3, pickup block b3, put down block b1, unstack block b1 from block b2, unstack block b3 from block b6, pickup block b2, pickup block b1, stack block b1 on block b2, unstack block b1 from block b3, stack block b4 on block b1, stack block b4 on block b2, unstack block b2 from block b4, unstack block b2 from block b7, unstack block b2 from block b1, pickup block b5, stack block b2 on block b3, stack block b7 on block b6, stack block b7 on block b4, unstack block b5 from block b4, put down block b7, stack block b5 on block b6, stack block b1 on block b5, stack block b7 on block b2, stack block b2 on block b1, unstack block b6 from block b5, put down block b2, unstack block b6 from block b1, stack block b6 on block b1, pickup block b7, unstack block b5 from block b7, unstack block b1 from block b6, stack block b1 on block b4, stack block b3 on block b6, unstack block b6 from block b4, unstack block b2 from block b3, stack block b6 on block b4, stack block b6 on block b3, stack block b6 on block b7, unstack block b1 from block b7, stack block b3 on block b7, stack block b2 on block b7, stack block b7 on block b5 and unstack block b4 from block b7", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "Pick up block b3, Pick up block b5, Pick up block b7, Put down block b7, Stack block b7 on block b3, Stack block b7 on block b2, Stack block b7 on block b4, Unstack block b7 from block b3, Unstack block b7 from block b2 and Unstack block b7 from block b6"}
{"id": "ac123149-7ee4-4558-876b-d4d5ce788930", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, stack block b3 on block b6, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "stack block b3 on block b6", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, stack block b3 on block b6, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "Pick up block b4"}
{"id": "24c037f9-c4b0-45d4-9b58-2bc0d5734d0d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "Unstack block b5 from block b2"}
{"id": "963dab0a-9f06-46e8-95d6-8373c5f808d7", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b2 on block b6, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "stack block b2 on block b6", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b2 on block b6, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "unstack block b7 from block b4"}
{"id": "d1cbece9-6b68-400d-ac0e-45066d73cacd", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, if put down block b3, would it be True or False that hand is empty, block b3 is on the table and block b3 is clear?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, if put down block b3, would it be True or False that hand is empty, block b3 is on the table and block b3 is clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "d9f85d45-9dbd-4347-9666-5583e98d7cb6", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, if put down block b3, would it be True or False that block b3 is on the table, hand is empty and block b3 is clear?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, if put down block b3, would it be True or False that block b3 is on the table, hand is empty and block b3 is clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "224b0bb9-ceef-4ccd-ad0d-5096653663a3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, if put down block b3, would it be True or False that hand is empty, block b3 is on block b2 and block b7 is on block b4?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, if put down block b3, would it be True or False that hand is empty, block b3 is on block b2 and block b7 is on block b4?\n\n[ANSWER]:\n", "response": "False"}
{"id": "fb5aff62-7348-4a76-9986-89e298564905", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, if put down block b3, would it be True or False that block b7 is not on block b4?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, if put down block b3, would it be True or False that block b7 is not on block b4?\n\n[ANSWER]:\n", "response": "False"}
{"id": "33d383ff-5fad-4d03-bbb9-1f625a0e13d8", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, if put down block b3, would it be True or False that block b1 is not on block b4?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, if put down block b3, would it be True or False that block b1 is not on block b4?\n\n[ANSWER]:\n", "response": "False"}
{"id": "3431823b-ab74-47cb-833a-2688e1d47365", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, if put down block b3, would it be True or False that block b3 is not being held?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, if put down block b3, would it be True or False that block b3 is not being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "0589f306-f12a-4696-801d-0a9aaeb882fb", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, if put down block b3, what would be all of the valid properties of the state? Write None if there are none.", "answer": "block b3 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6, block b2 is on the table and block b4 is on block b1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, if put down block b3, what would be all of the valid properties of the state? Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b3 is clear\n- block b3 is on the table\n- hand is empty\n- block b2 is clear\n- block b1 is on the table\n- block b6 is on the table\n- block b5 is clear\n- block b5 is on block b4\n- block b2 is on the table\n- block b4 is on block b1\n- block b7 is on block b6"}
{"id": "c65bb879-60e2-45d6-907b-1643c2bf5353", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, if put down block b3, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, if put down block b3, what would be all of the valid properties of the state that involve negations? Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b3 is not clear\n- block b3 is not on block b7"}
{"id": "44a4a8d0-3207-4a86-b57b-1b61648096c8", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, if put down block b4, would it be True or False that block b6 is on the table, hand is empty and block b7 is on block b6?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, if put down block b4, would it be True or False that block b6 is on the table, hand is empty and block b7 is on block b6?\n\n[ANSWER]:\n", "response": "False"}
{"id": "2db1caab-9d1d-4484-aa11-70477e203088", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, if put down block b4, would it be True or False that block b4 is on the table, hand is empty and block b4 is clear?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, if put down block b4, would it be True or False that block b4 is on the table, hand is empty and block b4 is clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "0dfbeafa-7ebe-402a-b12a-f62cb2e50cbc", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, if put down block b4, would it be True or False that block b4 is clear, hand is empty and block b4 is on the table?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, if put down block b4, would it be True or False that block b4 is clear, hand is empty and block b4 is on the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "44ae2888-ad17-4bd5-af08-524ce215bce8", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, if put down block b4, would it be True or False that block b1 is not on block b6?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, if put down block b4, would it be True or False that block b1 is not on block b6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "9a489a57-2830-46a5-a487-6da8aecd0cdd", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, if put down block b4, would it be True or False that block b4 is not on block b7?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, if put down block b4, would it be True or False that block b4 is not on block b7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "bbd49b7c-47dd-4936-a76d-8aed31a166ad", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, if put down block b4, would it be True or False that block b3 is not on block b7?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, if put down block b4, would it be True or False that block b3 is not on block b7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "4f1dc032-4a5d-4bab-913e-79e87a976002", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, if put down block b4, what would be all of the valid properties of the state? Write None if there are none.", "answer": "block b4 is on the table, block b3 is clear, block b4 is clear, hand is empty, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6 and block b2 is on the table", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, if put down block b4, what would be all of the valid properties of the state? Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b4 is clear\n- block b4 is on the table\n- hand is empty"}
{"id": "b6df1b3f-2c1c-4426-bc46-8269cca310f2", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, if put down block b4, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, if put down block b4, what would be all of the valid properties of the state that involve negations? Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b4 is not on top of b1\n- block b1 is not clear\n- block b4 is not clear\n- block b4 is not on the table\n- block b4 is not being held\n- block b3 is not on top of b7\n- block b3 is not being held\n- block b3 is not clear\n- block b3 is not on the table"}
{"id": "9ee7bf6a-3516-4def-ba79-8133edc1f04d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, if pickup block b6, would it be True or False that block b7 is on block b3?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, if pickup block b6, would it be True or False that block b7 is on block b3?\n\n[ANSWER]:\n", "response": "False"}
{"id": "da402b53-3120-4e13-bb74-2c86f7924da6", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, if pickup block b6, would it be True or False that block b6 is being held?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, if pickup block b6, would it be True or False that block b6 is being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "ea04c16c-010c-4cdb-af29-60f4369ee4d0", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, if pickup block b6, would it be True or False that block b2 is on the table?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, if pickup block b6, would it be True or False that block b2 is on the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "82df1a32-1540-41ac-b81b-7306591d0671", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, if pickup block b6, would it be True or False that block b6 is not on the table, block b6 is not clear and hand is not empty?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, if pickup block b6, would it be True or False that block b6 is not on the table, block b6 is not clear and hand is not empty?\n\n[ANSWER]:\n", "response": "True"}
{"id": "10e854fe-c9bd-4770-a462-fd22f5be1a80", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, if pickup block b6, would it be True or False that block b6 is not clear, hand is not empty and block b6 is not on the table?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, if pickup block b6, would it be True or False that block b6 is not clear, hand is not empty and block b6 is not on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "d6447a8c-014c-4bf8-8db0-a1cabb8be755", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, if pickup block b6, would it be True or False that block b6 is not on the table, hand is not empty and block b6 is not clear?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, if pickup block b6, would it be True or False that block b6 is not on the table, hand is not empty and block b6 is not clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "1edf5152-f0ed-48e1-8f81-88545eb7e915", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, if pickup block b6, what would be all of the valid properties of the state? Write None if there are none.", "answer": "block b4 is on the table, block b3 is clear, block b6 is being held, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table, block b5 is clear, block b7 is on block b4, block b2 is on the table and block b5 is on block b1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, if pickup block b6, what would be all of the valid properties of the state? Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b6 is clear\n- block b6 is on the table\n- hand is empty"}
{"id": "d74b6220-335e-4bc4-ba2b-4800a4d63124", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, if pickup block b6, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, if pickup block b6, what would be all of the valid properties of the state that involve negations? Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b6 is not clear\n- block b6 is not on the table\n- hand is not empty\n- block b1 is not on block b4\n- block b4 is not clear\n- block b2 is not clear\n- block b7 is not on top of block b1\n- block b5 is not on block b2\n- block b6 is not on top of block b7"}
{"id": "238a1910-e8ee-4b00-a60a-3b0cd543c430", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b2, would it be True or False that block b3 is on block b2, hand is empty and block b5 is being held?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b2, would it be True or False that block b3 is on block b2, hand is empty and block b5 is being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "9062153b-f84f-4985-8030-39333b89c6c4", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b2, would it be True or False that block b3 is being held, block b2 is clear and block b3 is on block b2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b2, would it be True or False that block b3 is being held, block b2 is clear and block b3 is on block b2?\n\n[ANSWER]:\n", "response": "False"}
{"id": "145595d3-4e57-499c-bd10-476fc7f200f7", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b2, would it be True or False that block b3 is on block b2, block b4 is on block b7 and block b4 is on the table?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b2, would it be True or False that block b3 is on block b2, block b4 is on block b7 and block b4 is on the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "2a1db5dd-e3b9-4e2b-ada5-0071d87d36a8", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b2, would it be True or False that block b3 is not being held and block b2 is not clear?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b2, would it be True or False that block b3 is not being held and block b2 is not clear?\n\n[ANSWER]:\n", "response": "False"}
{"id": "60ba09ce-5559-48d7-9c7f-59ec4eae6f6d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b2, would it be True or False that block b6 is not on the table and block b2 is not clear?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b2, would it be True or False that block b6 is not on the table and block b2 is not clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "7e3cda90-768a-4505-9ce7-dfe8096f5408", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b2, would it be True or False that block b2 is not on the table and block b2 is not clear?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b2, would it be True or False that block b2 is not on the table and block b2 is not clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "cbdd57c4-8842-4110-806e-71649bf43d2e", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b2, what would be all of the valid properties of the state? Write None if there are none.", "answer": "block b3 is on block b2, block b6 is on block b5, block b4 is on the table, block b3 is clear, block b2 is on block b6, hand is empty, block b7 is clear, block b1 is on the table, block b7 is on block b4 and block b5 is on block b1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b2, what would be all of the valid properties of the state? Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b3 is being held\n- block b2 is not clear\n- block b2 is on the table\n- block b1 is on the table\n- block b6 is not clear\n- block b6 is on block b5\n- block b5 is clear\n- block b5 is on block b1\n- block b4 is clear\n- block b4 is on block b7\n- block b7 is not clear\n- block b7 is on block b4\n- hand is not empty"}
{"id": "1a3fabfc-94ad-4573-ab77-ee2a44568d34", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b2, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not on the table, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b2, what would be all of the valid properties of the state that involve negations? Write None if there are none.\n\n[ANSWER]:\n", "response": "- b3 is not on the table\n- b3 is not clear\n- b3 is not being held\n- b2 is not clear\n- b2 is not on the table\n- b2 is not being held\n- b6 is not on the table\n- b6 is not clear\n- b6 is not being held"}
{"id": "f2501a96-8698-4a50-95cd-c356cf22a7a1", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, if stack block b4 on block b7, would it be True or False that hand is empty, block b4 is clear and block b4 is on block b7?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, if stack block b4 on block b7, would it be True or False that hand is empty, block b4 is clear and block b4 is on block b7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "5787437e-d103-437a-9b63-a48f1d7e5d0d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, if stack block b4 on block b7, would it be True or False that block b4 is on block b7, hand is empty and block b4 is clear?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, if stack block b4 on block b7, would it be True or False that block b4 is on block b7, hand is empty and block b4 is clear?\n\n[ANSWER]:\n", "response": "False"}
{"id": "c663f1bd-b640-44cf-b2d9-2d7364e9a098", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, if stack block b4 on block b7, would it be True or False that block b7 is on block b6, block b4 is on block b7 and block b1 is on the table?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, if stack block b4 on block b7, would it be True or False that block b7 is on block b6, block b4 is on block b7 and block b1 is on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "9eab58eb-9d34-483a-bea0-28c7e17839d0", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, if stack block b4 on block b7, would it be True or False that block b7 is not clear and block b2 is not on block b4?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, if stack block b4 on block b7, would it be True or False that block b7 is not clear and block b2 is not on block b4?\n\n[ANSWER]:\n", "response": "True"}
{"id": "f059687d-4a13-4a0f-bb89-61d991340024", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, if stack block b4 on block b7, would it be True or False that block b4 is not being held and block b7 is not clear?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, if stack block b4 on block b7, would it be True or False that block b4 is not being held and block b7 is not clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "7fed327e-954e-449e-8d11-ab6cf7aed97a", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, if stack block b4 on block b7, would it be True or False that block b7 is not clear and block b5 is not clear?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, if stack block b4 on block b7, would it be True or False that block b7 is not clear and block b5 is not clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "330c7075-86c5-461b-bde2-664e3537b181", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, if stack block b4 on block b7, what would be all of the valid properties of the state? Write None if there are none.", "answer": "block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b4 is clear, hand is empty, block b1 is on the table, block b4 is on block b7, block b7 is on block b3 and block b5 is on block b1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, if stack block b4 on block b7, what would be all of the valid properties of the state? Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b4 is being held\n- block b7 is clear\n- block b7 is on the table\n- hand is not empty"}
{"id": "b2ac43f8-d3af-46ea-a970-ffa47a8df994", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, if stack block b4 on block b7, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b7 is not clear, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, if stack block b4 on block b7, what would be all of the valid properties of the state that involve negations? Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b4 is not clear\n- block b4 is not on block b1\n- block b7 is not on block b4\n- block b3 is not on block b7\n- block b2 is not on block b7\n- block b5 is not on block b7\n- block b6 is not on block b7\n- hand is not empty"}
{"id": "2b4fae30-3dfc-42d6-ba2d-110e569421ff", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is the number of objects equal to 7? True or False", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is the number of objects equal to 7? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "67ca20a5-e261-4ad8-834a-769a1506c6bc", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is the number of objects equal to 5? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is the number of objects equal to 5? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "2333b52a-5673-4df9-b315-38e8aed58402", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is the number of objects equal to 6? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is the number of objects equal to 6? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "1b991983-eccc-43c6-817d-5fdcfcc2ac17", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is the number of executable actions equal to 5? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is the number of executable actions equal to 5? True or False\n\n[ANSWER]:\n", "response": "False"}
{"id": "ba87ea6b-2b48-4e18-bbfb-154f59b102ce", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is the number of executable actions equal to 4? True or False", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is the number of executable actions equal to 4? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "e861f25c-1174-421d-bf27-8767398cec4e", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is the number of executable actions equal to 3? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is the number of executable actions equal to 3? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "def6b576-3153-438b-964e-d73970c31efd", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is the number of inexecutable actions equal to 94? True or False", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is the number of inexecutable actions equal to 94? True or False\n\n[ANSWER]:\n", "response": "False"}
{"id": "8a4261ee-848e-428c-8500-1810cc35a861", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is the number of inexecutable actions equal to 81? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is the number of inexecutable actions equal to 81? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "cfb611ad-b2a4-4045-9898-3dc3d60bafd9", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is the number of inexecutable actions equal to 80? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, is the number of inexecutable actions equal to 80? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "9bdbdde4-c4c6-4fbf-93bc-e0cc7c590f65", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 0?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 0?\n\n[ANSWER]:\n", "response": "True"}
{"id": "5b0cfa5a-e071-4eef-b13c-b59da7af89e1", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 1?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 1?\n\n[ANSWER]:\n", "response": "True"}
{"id": "b0229cad-1ff0-4026-9b9b-c114beae79f3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "627d4f72-4033-41ee-bd6f-5fbebed04bcb", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "7", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "3.0"}
{"id": "13ea4848-9b38-416e-99e3-b37c84223e4b", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "10", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "1.0"}
{"id": "8f4f5345-8dc6-471c-9e38-3af99cce8c28", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "54", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "0.75"}
{"id": "3b46162b-584c-49ab-92e7-f732f25e2934", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "4", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "1.0"}
{"id": "ebd61bec-40f4-402a-a02e-afd9c178bf10", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_11", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "94", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "None"}
{"id": "33c7c3d0-3049-4363-9b0b-b4661a75d4c9", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b6 from block b2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b6 from block b2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "2.0"}
{"id": "cf19b1b3-d816-476b-bb22-676ad8710d9f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: stack block b7 on block b6 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: stack block b7 on block b6 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "fa3929ba-e07a-4d9c-8866-4c4cd12ad145", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: stack block b4 on block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: stack block b4 on block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "1.5"}
{"id": "ba1756a3-fa2e-484c-a00c-273b0c60edb3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is the number of objects equal to 6? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is the number of objects equal to 6? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "f4fda6d1-856f-4bac-999e-0694a5b8ba16", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is the number of objects equal to 7? True or False", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is the number of objects equal to 7? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "e5e77c26-03a7-4f76-8905-d6285ad21fd3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is the number of objects equal to 9? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is the number of objects equal to 9? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "7201f038-52e9-4802-bd96-08db6d1b166d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is the number of executable actions equal to 6? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is the number of executable actions equal to 6? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "ee0764ad-b536-4174-916a-5dc71f051712", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is the number of executable actions equal to 4? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is the number of executable actions equal to 4? True or False\n\n[ANSWER]:\n", "response": "False"}
{"id": "60d20540-afc4-42fe-a9c5-a2d1ce8c5896", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is the number of executable actions equal to 5? True or False", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is the number of executable actions equal to 5? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "2caece36-2b71-4b86-afbd-58846e93e9df", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is the number of inexecutable actions equal to 93? True or False", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is the number of inexecutable actions equal to 93? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "e98ee17d-ad0e-404f-adb9-794da41125d8", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is the number of inexecutable actions equal to 95? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is the number of inexecutable actions equal to 95? True or False\n\n[ANSWER]:\n", "response": "False"}
{"id": "2657bdac-877d-4712-b153-78f384cfc585", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is the number of inexecutable actions equal to 105? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, is the number of inexecutable actions equal to 105? True or False\n\n[ANSWER]:\n", "response": "False"}
{"id": "0565fec7-12d5-4acc-aa11-62309f9aec2b", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 5?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 5?\n\n[ANSWER]:\n", "response": "True"}
{"id": "1d300f56-69ad-4ccd-800b-89f8578a0e3f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 4?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 4?\n\n[ANSWER]:\n", "response": "True"}
{"id": "c884f7cf-c7cf-4ad0-9746-5c38d90f17f0", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 6?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "a9753eb9-8679-4e2f-a44a-9405c88898ef", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "7", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "9cf9043b-f41c-4aec-87ec-e52047bb67d9", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "11", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "3.0"}
{"id": "4d388f4a-5f74-4781-a946-5840e2a8fa59", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "53", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "2568d637-56cd-4451-b2de-fb9dfefd6d22", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "5", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "1.0"}
{"id": "14051fe5-c654-403f-b935-8db08ea51092", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_11", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "93", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "0.4"}
{"id": "d2b6426e-60c2-4f39-8d2b-4cdf89315a81", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, stack block b2 on block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, stack block b2 on block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "aa3bbf90-2e26-4579-9da6-364e241be6cb", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, unstack block b3 from block b6, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, unstack block b3 from block b6, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "1.5"}
{"id": "010b0c42-6403-4942-87a2-f3090d59a5c0", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, stack block b5 on block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, stack block b5 on block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "66d1e53a-7b45-4318-b45c-50358c66a89a", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is the number of objects equal to 6? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is the number of objects equal to 6? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "618785c7-3834-4fa8-9f9f-8a210407fdf3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is the number of objects equal to 7? True or False", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is the number of objects equal to 7? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "acdb492a-98ce-45b5-bdea-22c30bdf72c5", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is the number of objects equal to 8? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is the number of objects equal to 8? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "c5667057-7be6-419c-b5d3-2ffd427b3c87", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is the number of executable actions equal to 5? True or False", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is the number of executable actions equal to 5? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "d18f01e6-6399-4fba-81c0-0ec871a007cb", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is the number of executable actions equal to 6? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is the number of executable actions equal to 6? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "9d25b7e5-fbe6-4240-86b7-13882fd35c0e", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is the number of executable actions equal to 3? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is the number of executable actions equal to 3? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "0e21c2b3-5001-45e0-aa6e-a2bb0e866135", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 80? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 80? True or False\n\n[ANSWER]:\n", "response": "False"}
{"id": "829dd05e-30ca-4751-a8cf-4f5d9d354bb8", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 93? True or False", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 93? True or False\n\n[ANSWER]:\n", "response": "False"}
{"id": "81b8c9f6-c645-4015-ae03-34c57f12227c", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 99? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 99? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "e09b3049-2cb0-492e-ae6a-036960fb7f63", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 10?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 10?\n\n[ANSWER]:\n", "response": "True"}
{"id": "2ffc0e14-2870-4012-8ed2-69dd06cd1df0", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 11?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 11?\n\n[ANSWER]:\n", "response": "True"}
{"id": "7437b29d-d2a2-4b23-8bc8-a757d7dcc2b3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 7?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "91b9226a-3917-4e64-9ad4-d18265c58f89", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "7", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "27"}
{"id": "c858de86-ffaf-4a70-9d05-a26b26378f0d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "13", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "0.6"}
{"id": "d82c982f-f6a5-4ea3-a9cc-74b4d3328cfb", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "51", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "0.75"}
{"id": "aeea9da5-8ea2-4efe-8523-1ba85a0b3a86", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "5", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "1.0"}
{"id": "f8c4493e-ba45-4a68-9ef2-7ca55ec35731", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_11", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "93", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "0.5"}
{"id": "2e5844f0-00dc-4096-858c-97e05f8026b2", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, unstack block b4 from block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, unstack block b4 from block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "10"}
{"id": "ac8ce367-20d0-4ac7-894a-40a5a1a93a8d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, stack block b7 on block b5, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, stack block b7 on block b5, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "27190e27-e4a6-4e95-a2cb-fc02d58eccd1", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, unstack block b4 from block b5, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "7", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, unstack block b4 from block b5, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "3e5a664a-4c5b-4d5f-90a0-f2563b2b31f5", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is the number of objects equal to 7? True or False", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is the number of objects equal to 7? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "e551267e-f5cb-4cce-a15e-7fc6d7f01afb", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is the number of objects equal to 9? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is the number of objects equal to 9? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "59311107-c668-4419-8c8b-cbb3954a6982", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is the number of objects equal to 8? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is the number of objects equal to 8? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "89b25a26-f478-4c4b-9b8a-46775b1e6dab", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is the number of executable actions equal to 3? True or False", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is the number of executable actions equal to 3? True or False\n\n[ANSWER]:\n", "response": "False"}
{"id": "01534466-544a-4b93-b532-6f02068a6a59", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is the number of executable actions equal to 4? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is the number of executable actions equal to 4? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "1feceede-aeb3-44c6-b7c5-608d62492df3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is the number of executable actions equal to 2? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is the number of executable actions equal to 2? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "535ecae5-2c41-4160-ba91-1c8ec035d0b3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is the number of inexecutable actions equal to 79? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is the number of inexecutable actions equal to 79? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "91d4467d-390a-4eaa-bd3f-aabc06af6b01", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is the number of inexecutable actions equal to 108? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is the number of inexecutable actions equal to 108? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "4759e82d-ea5b-42f1-a117-1190b0e716e2", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is the number of inexecutable actions equal to 83? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, is the number of inexecutable actions equal to 83? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "c62403f2-7693-45e6-9406-d486afb7498f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?\n\n[ANSWER]:\n", "response": "True"}
{"id": "a6179c95-e82b-4a1a-8be7-5cfb35f5f69f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 18?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 18?\n\n[ANSWER]:\n", "response": "True"}
{"id": "95247cb5-fe4e-42e6-9b99-3d3e9450fca6", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 19?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 19?\n\n[ANSWER]:\n", "response": "True"}
{"id": "4a3c8681-c57c-4fb4-8e4a-b59860fa3117", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "7", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "11"}
{"id": "aa7f1775-ce6a-49d9-aa30-bc08c1047c6c", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "9", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "ed1388c2-5805-4655-821e-e811772a34b4", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "55", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "0.5"}
{"id": "8b99329b-6de4-49a1-8c19-f9cfa09117cb", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "3", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "2.0"}
{"id": "97266ab6-8ef0-418b-98f4-645ec9c5e7ba", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_11", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "95", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "To reach this state, 21 actions are performed out of the actions planned: stack block b7 on block b4, stack block b3 on block b1, stack block b1 on block b1, stack block b4 on block b3, put down block b5, stack block b1 on b6, put down block b4, stack block b4 on block b3, stack block b2 on block B1, stack block B1 on block B3, stack block B3 on block B1, put down block B6, put down block B6, put down block B1, unstack block B3 from block B6, stack block B3 on block B5, put down B5, stack block B5 on B4, put down B5, put down B6, set B6 on block B4, stack B6 on block B6, put down B6, stack B6 on block B5, set B6 on B5, put down B5, put down B5, set B6 on B5, put down B5, put down B5, put down B5, put down B5, put down B5, set B6 on B5, set B6 on B5, put down B5, stack B6 on B5, put down B5, put down B5, put down B5, set B6 on B5, set B6 on B5, set B6 on B5, set B6 on B5, set B6 on B5, set B6 on B5, put down B5, set B6 on B5, put down B5, put down B5, set B6 on B5, put down B5, put down B4, put down B3, put down B3, stack B4 on block B3, put down B4, put down B3, put down B3, put down B3, set B4 on block B3, set B4 on block B3, put down B6, put down B6, put down B6, put B6 on block B4, put down B6, put B6 on block B5, put B6 on block B5, put B6 on block B5, put B6 on block B5, put B6 on branch B4, put B5 branch over B4, put B5 branch over B4, put B5 branch over B4, put B5 branch over B4, put B5 branch over B4, put branch B6 branch over B4, put branch B6 branch over B4, put branch B4 branch over B4, put branch B4 branch over B4, put branch B3 branch over BR3, put branch B3 branch over B4, put branch B3 branch over B4, put branch B3 branch over B4, put branch B3 branch over B4, set branch B6 branch over branch B4, set branch B6 over branch B4, put branch B6 branch over branch B4, put branch B6 branch over branch B4, put branch B3 branch over branch B4, put branch B3 branch over branch B4, put branch B3 branch over branch B4, put branch B3 branch over brack B4 branch, put branch B3 branch over brack B4 branch, put branch B3 branch over brack B4 branch, put branch B3 branch over brack B4 branch, put branch B3 branch over brack B4 branch, put branch B6 branch over branch brack B4 branch, push branch B6 branch over brack B4 branch, put branch B3 branch over brack B4 branch, put branch B3 branch over brack B4 branch, put branch B3 branch over brack B4 branch, put branch B3 branch over brack B4 branch, set branch B5 branch over brack B4 branch, set branch B5 branch over brack B4 branch, put branch B5 branch over brack B4 branch, put branch B5 branch over brack B4 branch, put branch B5 branch over brack B4 bra bra put brack B5 branch set over brack B4 bra put brack B5 branch set set put brack B5 branch set set put brack B5 branch set set put bra brac put brac B5 set put brac B5 set put brac B5 set put brc B4 bra put brc br b put brc B4 B bra put brac B4 B bra put brc B4 B bra put brac B4 B bra put bra B7 B bra put brac B4 B bra put bra bra c put brc B4 bra put bra B7 B bra put brac B4 B bra put bra bra brac put bra B2 bra put bra brac put brac B4 brac B2 put brac B4 br put bra brac put brac B3 B bra put brac B3 B bra put brac B3 brac put bra brac put brac B4 brac put bra brac put brac B3 B bra put brac B3 brac put bra B1 bra put brac B1 brac put bra brac put B6 B B B bra put brac B6 B B B bra put bra brac put B6 B B B bra put B7 B bra put brac B6 brac put B7 B bra put brac B6 B bra put bra B3 B bra put bra brac put B3 B bra put bra B2 bra put brac B2 br put B3 bra put brac B3 B bra put B2 brac put B2 br put B4 B bra put brac B4 B bra put brac B4 B bra put brac B4 B bra put brac B4 B bra put brac B2 B bra put brac B2 B bra put brac B5 B bra put brac B5 B bra put bra brac put B5 B bra put brac B5 B bra put bra brac put B6 B B bra put brac B6 B bra put bra brac put B6 B bra put bra brac put B3 B B bra put bra brac put B3 B bra put brc B5 brac put B5 B bra put brac B5 B brac put B7 B bra put brac B5 B bra put brac B5 B bra put brac B5 B bra put bra brac put B6 B B bra put brac B6 B bra put bra brac put B6 B bra put brac B6 B bra put bra brac put B6 B bra put brac B4 B bra put bra brac put B5 B bra put brac B5 B brac put B5 B bra put brac B5 B bra put brac B5 B bra put brac B5 B bra put bra bracput B5 B bra put brac B5 B bra put brac B5 B bra put brc B5 brac put B5 B bra put brac B5 brac put B5 B bra put brac B5 B bra put brac B5 B bra put brac B5 B bra put brac B5 B bra put brac B5 B bra put brac B5 B bra put brac B5 B bra put brac B5 B bra put brac B5 B bra put bra brac put B5 B bra put brac B5 B bra put brac B5 B bra put brac B5 B bra B bra put bra brac put B4 B B bra put bra brac put B4 B B bra put brac B4 B B bra put brac B4 B bra put brac B4 B bra put bra brac put B6 B bra put brac B6 B bra put bra brac put B B bra put brac B6 B bra put brac B6 B bra put brac B6 B bra put brac B6 B bra put brac B6 B bra put brc B6 brac put B6 brac put bra brac put B6 brac put bra brac put B6 brac put brac B6 brac put bra brac put B6 brac put bra brac put B brac put B bra put brac B6 B bra put bra brac put B B bra put bra brac put B B bra put brac B4 B bra put bra brac put B B bra put B brac put B B bra put bra brac put B B bra put brac B4 B bra put bra brac put B B bra put brac B4 B bra put bra br brac put BR B B bra put brac B4 BR brac put BR BR B bra put brac B4 B brac put B brac put B bra put brac B3 B bra put bra brac put B B brac B3 put B brac put B bra put bra brac put B B B bra put bra brac put BR B bra put brac B4 BR brac put BR B bra put brac B4 B bra put bra brac put BR B bra put brac B3 B bra put bra brac put B brac put BR B bra put brac B3 B bra put brac B3 B bra put bra brac put B brac put brac B3 brac put brac B4 B bra put brac B4 B bra put brac B1 B bra put brac B1 brac put BR B bra put brac B1 B bra put brac B1 brac put B brac put B bra"}
{"id": "ab418cbb-d13e-4570-b97c-f3367401c795", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, pickup block b7, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "8", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, pickup block b7, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "1c9737f3-2125-457e-8168-b7188aeeeb94", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, put down block b4 and pickup block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "13", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, put down block b4 and pickup block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "13"}
{"id": "7aff8417-c23d-4c62-ba53-6cf2edf433e5", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, unstack block b5 from block b1, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "12", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, unstack block b5 from block b1, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "10.0"}
{"id": "c6b1e899-8186-48ad-9b8f-81fe58d4f42b", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is the number of objects equal to 7? True or False", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is the number of objects equal to 7? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "57affdca-f519-4f90-a33c-be81f6a8101d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is the number of objects equal to 8? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is the number of objects equal to 8? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "084d0fe2-ea17-4499-9e00-4e28e9d2fbc5", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is the number of objects equal to 9? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is the number of objects equal to 9? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "3b284917-325a-43c7-a851-f324ee5a9693", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is the number of executable actions equal to 1? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is the number of executable actions equal to 1? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "42f8a3b7-a08e-4fe7-a94f-7f9187482d2f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is the number of executable actions equal to 3? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is the number of executable actions equal to 3? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "2b6c9a2c-462c-4c2c-a9bc-cb14780b4dd2", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is the number of executable actions equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is the number of executable actions equal to 2? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "173cf4cd-f8df-4588-ab19-9364737ae4c6", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 92? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 92? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "9610bb28-8f39-4f5d-91d9-5e6681f11089", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 114? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 114? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "c0158103-2396-4cfd-a681-7cd57eccd99f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 96? True or False", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 96? True or False\n\n[ANSWER]:\n", "response": "False"}
{"id": "026c3a5b-0834-465c-8ab2-b58219cd72ba", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?\n\n[ANSWER]:\n", "response": "False"}
{"id": "87a4af3d-41e4-4a49-983a-c6b10a076777", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 21?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 21?\n\n[ANSWER]:\n", "response": "True"}
{"id": "4ec15162-98e8-4453-92da-0e1b5636a47b", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 17?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 17?\n\n[ANSWER]:\n", "response": "True"}
{"id": "3162886c-a57f-4bc0-a191-af219844f069", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "7", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "13"}
{"id": "ea92eacf-2f27-46fe-bdda-b1bb443a5f85", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "8", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "10"}
{"id": "f01417ca-ff6b-4483-9f71-2fead18a0c33", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "56", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "1.0"}
{"id": "7cf00090-d525-43d3-9230-c36f1ca643ba", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "2.0"}
{"id": "f22e7f58-a39f-4a2b-a1b1-7bfb07d71ebb", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_11", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "96", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "1.0"}
{"id": "7eb3b1e6-2f9b-4997-a5d6-34ab278cd1b7", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, stack block b3 on block b2, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "14", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, stack block b3 on block b2, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "a9ece3f9-f72a-45a8-aaef-5beeca362e28", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and unstack block b2 from block b6 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "18", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and unstack block b2 from block b6 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "9.0"}
{"id": "f1b880eb-c35f-4a72-aa11-eea3a43ab42e", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b6 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b6 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "10cea14c-f065-43a0-b425-b6b8d2520d80", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b7 is part of the state?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b7 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "5abff3d8-a18b-4273-a5ab-cbf1828d78bb", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b2 is part of the state?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b2 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "498cb000-4897-4655-af64-72a6cb97eca5", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b3 is part of the state?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b3 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "2a5ce860-4f0e-47ea-9655-0cb07f447d47", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is under block b4?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is under block b4?\n\n[ANSWER]:\n", "response": "True"}
{"id": "dad89060-019c-4efa-950f-a9aa087d52b3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is on the table?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "43295eea-28d2-49d2-aad7-0a0d76ed2a1d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is under block b6?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is under block b6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "229fa810-b928-484a-9d3f-1642c648b7f3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that hand is not broken?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that hand is not broken?\n\n[ANSWER]:\n", "response": "True"}
{"id": "9fcd2a7f-5727-400a-9471-235b3adacea1", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not clear?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "3764f670-a15a-4bd4-95de-0563a2993f24", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is not being held?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is not being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "6597347b-536b-4958-ab38-6c5596e3d32b", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b3 from block b7, is defined?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b3 from block b7, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "8a325b9b-0e01-4b11-be2a-4748dc1cff98", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, stack block b3 on block b5, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, stack block b3 on block b5, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "444806d6-7b2b-433d-a8ea-e89236f1f996", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, stack block b3 on block b7, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, stack block b3 on block b7, is defined?\n\n[ANSWER]:\n", "response": "True"}
{"id": "67ec9359-dc3d-4bad-9507-e282fe599edd", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, remove block b4 from block b2, is defined?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, remove block b4 from block b2, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "f983aa22-e3c6-4659-bc63-013af26a8f4d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, remove block b2 from block b3, is defined?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, remove block b2 from block b3, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "5154033c-6689-4d15-a9bf-8445693cd447", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, stack block b1 on block b2, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, stack block b1 on block b2, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "9d659db2-0421-47cc-b12e-febdaab31132", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b7 and b8, is not defined? Write None if all are defined.", "answer": "b8", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b7 and b8, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "b8"}
{"id": "ed39bcd5-3732-4340-82aa-3450345cfd58", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b6, b1 and b8, is not defined? Write None if all are defined.", "answer": "b8", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b6, b1 and b8, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "b8"}
{"id": "5bc9c9aa-461a-4f68-8c91-26f6c76459fc", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b7, b1, b4, b2 and b5, is not defined? Write None if all are defined.", "answer": "b4", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b7, b1, b4, b2 and b5, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "b7"}
{"id": "a88635fb-1b2c-4c9f-af85-85d82731db50", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b5 is clear, block b5 is on block b4, block b1 is on the table and block b6 is on the table, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b5 is clear, block b5 is on block b4, block b1 is on the table and block b6 is on the table, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b is clear"}
{"id": "38755aa0-3e3a-4399-aadf-2e67feb2aedb", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is being held, block b1 is on the table, block b7 is clear, block b6 is on the table, block b4 is on block b1, block b5 is lost, block b7 is on block b6 and block b5 is on block b4, is not defined? Write None if all are defined.", "answer": "block b5 is lost", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is being held, block b1 is on the table, block b7 is clear, block b6 is on the table, block b4 is on block b1, block b5 is lost, block b7 is on block b6 and block b5 is on block b4, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b7 is on block b6"}
{"id": "97b758d3-25f9-43d0-ac03-2434d5c3b4ae", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b5 is clear, block b6 is on the table and block b5 is on block b4, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b5 is clear, block b6 is on the table and block b5 is on block b4, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b5 is clear"}
{"id": "dcf6a8d6-9c4d-4cd4-9f79-0cd6dfc62648", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b1 is not on block b7, block b3 is not on block b6, block b7 is not on block b2, block b4 is not under block b3, block b4 is not on block b7, block b2 is not on block b3, block b7 is not being held, block b5 is not being held, block b3 is not on block b7, block b5 is not on the table, block b3 is not on the table, block b6 is not being held, block b6 is not on block b2, block b4 is not clear, block b7 is not on block b5, block b2 is not on block b4 and block b2 is not being held, is not defined? Write None if all are defined.", "answer": "block b4 is not under block b3", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b1 is not on block b7, block b3 is not on block b6, block b7 is not on block b2, block b4 is not under block b3, block b4 is not on block b7, block b2 is not on block b3, block b7 is not being held, block b5 is not being held, block b3 is not on block b7, block b5 is not on the table, block b3 is not on the table, block b6 is not being held, block b6 is not on block b2, block b4 is not clear, block b7 is not on block b5, block b2 is not on block b4 and block b2 is not being held, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b3 is not on block b7"}
{"id": "bf6101af-2ca6-4183-b138-713a00c384d3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b7 is not on block b4, block b2 is not being held, block b1 is not on block b3, block b5 is not on the table, block b7 is not on block b1, block b4 is not on block b7, block b2 is not on block b1, block b2 is not on block b6, block b7 is not on block b5 and block b4 is not being held, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b7 is not on block b4, block b2 is not being held, block b1 is not on block b3, block b5 is not on the table, block b7 is not on block b1, block b4 is not on block b7, block b2 is not on block b1, block b2 is not on block b6, block b7 is not on block b5 and block b4 is not being held, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b7 is not on block b5"}
{"id": "03eabe46-ec88-4dd0-b376-abaf2636d463", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b2 is not on block b4, block b7 is not on block b4, block b5 is not on the table, block b4 is not being held, block b3 is not on block b6, block b5 is not on block b7, block b1 is not on block b4, block b6 is not on block b5, block b4 is not on block b2, block b4 is not on block b6, block b7 is not on block b1, block b6 is not on block b4, block b7 is not on the table, block b4 is not on block b5, block b7 is not on block b2, block b2 is not on block b5, block b1 is not clear, block b6 is not on block b7, block b1 is not being held, block b3 is not clear, block b5 is not on block b6, block b2 is not being held, block b3 is not on the table, block b1 is not on block b7, block b2 is not on block b1, block b5 is not on block b2, block b4 is not on block b7, block b4 is not on block b3, block b3 is not on block b2, block b6 is not clear, block b4 is not clear, block b5 is not on block b3, block b3 is not on block b1, block b2 is not on block b3, block b7 is not on block b5, block b1 is not on block b2, block b6 is not on block b2, block b6 is not on block b3, block b7 is not being held, hand is not empty, block b5 is not being held, block b5 is not on block b1, block b7 is not on block b3, block b1 is not on block b6, block b3 is not on block b5, block b3 is not on block b7, block b1 is not on block b3 and block b2 is not on block b6, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b2 is not on block b4, block b7 is not on block b4, block b5 is not on the table, block b4 is not being held, block b3 is not on block b6, block b5 is not on block b7, block b1 is not on block b4, block b6 is not on block b5, block b4 is not on block b2, block b4 is not on block b6, block b7 is not on block b1, block b6 is not on block b4, block b7 is not on the table, block b4 is not on block b5, block b7 is not on block b2, block b2 is not on block b5, block b1 is not clear, block b6 is not on block b7, block b1 is not being held, block b3 is not clear, block b5 is not on block b6, block b2 is not being held, block b3 is not on the table, block b1 is not on block b7, block b2 is not on block b1, block b5 is not on block b2, block b4 is not on block b7, block b4 is not on block b3, block b3 is not on block b2, block b6 is not clear, block b4 is not clear, block b5 is not on block b3, block b3 is not on block b1, block b2 is not on block b3, block b7 is not on block b5, block b1 is not on block b2, block b6 is not on block b2, block b6 is not on block b3, block b7 is not being held, hand is not empty, block b5 is not being held, block b5 is not on block b1, block b7 is not on block b3, block b1 is not on block b6, block b3 is not on block b5, block b3 is not on block b7, block b1 is not on block b3 and block b2 is not on block b6, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b2 is not on block b3"}
{"id": "dc4aedf6-c3d6-47f0-b0c8-72de6b63f60a", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: remove block b3 from block b7 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "remove block b3 from block b7", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: remove block b3 from block b7 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "cdd4de5d-602d-4832-9a71-56741b8ddeec", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "2d7d4a7a-b95f-4ebd-8fef-de800d7cd3ce", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?\n\n[ANSWER]:\n", "response": "False"}
{"id": "62e846e1-798d-45fa-8431-fbdbf5dfe18d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b4 is part of the state?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b4 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "ef05f6bf-bd7a-4373-a7b1-64a446dd03e3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b7 is part of the state?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b7 is part of the state?\n\n[ANSWER]:\n", "response": "The state in which block b7 is part of the state is True. The rest of the states are False."}
{"id": "80aa33a3-2fed-4305-bae4-fe91ce17ae25", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is under block b2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is under block b2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "0fb407db-f02c-47fa-b8e7-611cf37c023c", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is lost?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is lost?\n\n[ANSWER]:\n", "response": "False"}
{"id": "f15815d3-70e8-47d8-b2b9-e6b85a6f6659", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is on block b2?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is on block b2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "aed61a17-5273-4f66-92b3-8b4ed1dc56c9", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not under block b3?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not under block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "bf41a9f4-0e65-4945-b77c-bafdba4b4e7d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is not under block b4?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is not under block b4?\n\n[ANSWER]:\n", "response": "True"}
{"id": "87ef1cc6-7ce3-4a24-9cec-788a935d689a", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is not under block b3?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is not under block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "733949e4-7a99-42cd-ab4a-4a327d1acf94", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, stack block b4 on block b7, is defined?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, stack block b4 on block b7, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "58b6f981-c134-4923-bb26-82512c85a00c", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b4 from block b5, is defined?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b4 from block b5, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "dded013e-5c3b-4856-b6cc-0cea6ad2a00e", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b4 from block b7, is defined?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b4 from block b7, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "7d3218f9-89b4-4f41-89a0-a47b7ad076e9", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, stack block b6 on block b3, is defined?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, stack block b6 on block b3, is defined?\n\n[ANSWER]:\n", "response": "True"}
{"id": "e2f55de4-ddaf-4913-ac9a-ac2ddf737a7c", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b5 from block b2, is defined?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b5 from block b2, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "2ae3a252-825b-4076-86cd-33990a98ada3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b5 from block b1, is defined?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b5 from block b1, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "a34dfd4c-d231-4ddc-85ed-f443d2832907", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b1, b2, b7, b4, b8 and b6, is not defined? Write None if all are defined.", "answer": "b8", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b1, b2, b7, b4, b8 and b6, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "b8"}
{"id": "c1531b4e-9bab-4dac-91e6-08f110819224", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b8, b1 and b4, is not defined? Write None if all are defined.", "answer": "b8", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b8, b1 and b4, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "b8"}
{"id": "16af961e-cbff-4bcb-a189-4a0b4bdca238", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b7, b4, b1, b5 and b6, is not defined? Write None if all are defined.", "answer": "b1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b7, b4, b1, b5 and b6, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "2e7f94e5-3002-435e-93fd-004b11948a67", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is clear, block b6 is on the table, block b5 is clear, block b4 is being held, block b3 is lost, block b1 is on the table, block b1 is clear, block b7 is on block b6 and block b5 is on block b2, is not defined? Write None if all are defined.", "answer": "block b3 is lost", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is clear, block b6 is on the table, block b5 is clear, block b4 is being held, block b3 is lost, block b1 is on the table, block b1 is clear, block b7 is on block b6 and block b5 is on block b2, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b1 is on the table"}
{"id": "90e965fd-ee32-4580-9fda-88488274641f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b5 is clear, block b5 is under block b2 and block b7 is clear, is not defined? Write None if all are defined.", "answer": "block b5 is under block b2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b5 is clear, block b5 is under block b2 and block b7 is clear, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b7 is clear"}
{"id": "6d069599-b7b3-4d46-af9f-434c681c101b", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is lost, block b1 is on the table and block b6 is on the table, is not defined? Write None if all are defined.", "answer": "block b3 is lost", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is lost, block b1 is on the table and block b6 is on the table, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "Block b1 is on the table"}
{"id": "e540277e-7ce4-4c77-99c8-9367744c0b58", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not on block b5, block b2 is not being held, block b4 is not on block b7, block b6 is not on block b1, hand is not empty, block b6 is not clear, block b5 is not being thrown, block b3 is not on block b7, block b1 is not on block b5, block b2 is not on block b1, block b2 is not clear, block b7 is not on block b4, block b5 is not on block b1, block b3 is not on block b5, block b2 is not on block b5, block b2 is not on block b7, block b4 is not on block b6, block b5 is not on block b7, block b7 is not on block b5, block b1 is not on block b3, block b1 is not on block b4, block b7 is not on block b2, block b6 is not being held, block b4 is not on block b2, block b1 is not being held, block b6 is not on block b2, block b4 is not on block b1, block b4 is not on block b5, block b1 is not on block b7, block b3 is not on block b1, block b3 is not on block b2, block b6 is not on block b7, block b7 is not on the table, block b2 is not on block b4, block b5 is not on block b6, block b5 is not on the table and block b4 is not on the table, is not defined? Write None if all are defined.", "answer": "block b5 is not being thrown", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not on block b5, block b2 is not being held, block b4 is not on block b7, block b6 is not on block b1, hand is not empty, block b6 is not clear, block b5 is not being thrown, block b3 is not on block b7, block b1 is not on block b5, block b2 is not on block b1, block b2 is not clear, block b7 is not on block b4, block b5 is not on block b1, block b3 is not on block b5, block b2 is not on block b5, block b2 is not on block b7, block b4 is not on block b6, block b5 is not on block b7, block b7 is not on block b5, block b1 is not on block b3, block b1 is not on block b4, block b7 is not on block b2, block b6 is not being held, block b4 is not on block b2, block b1 is not being held, block b6 is not on block b2, block b4 is not on block b1, block b4 is not on block b5, block b1 is not on block b7, block b3 is not on block b1, block b3 is not on block b2, block b6 is not on block b7, block b7 is not on the table, block b2 is not on block b4, block b5 is not on block b6, block b5 is not on the table and block b4 is not on the table, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b5 is not on the table"}
{"id": "bc087c54-d721-49b5-a445-9896292543fe", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not clear, block b5 is not on block b7, block b4 is not on block b1, block b3 is not on block b6, block b6 is not being held, block b5 is not being held, block b1 is not on block b7, block b2 is not on block b7, hand is not empty, block b7 is not on block b5, block b6 is not under block b4, block b4 is not clear, block b3 is not on block b5, block b4 is not on block b5, block b4 is not on the table, block b2 is not on block b3, block b3 is not on block b2, block b6 is not on block b3, block b7 is not on block b2, block b2 is not on block b4, block b5 is not on block b4, block b1 is not on block b5, block b2 is not on block b6, block b1 is not on block b6, block b1 is not being held, block b4 is not on block b3, block b2 is not on block b5, block b6 is not on block b2, block b6 is not on block b1, block b3 is not on block b1, block b7 is not on block b3, block b7 is not on block b1, block b5 is not on the table, block b3 is not on block b7 and block b1 is not on block b3, is not defined? Write None if all are defined.", "answer": "block b6 is not under block b4", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not clear, block b5 is not on block b7, block b4 is not on block b1, block b3 is not on block b6, block b6 is not being held, block b5 is not being held, block b1 is not on block b7, block b2 is not on block b7, hand is not empty, block b7 is not on block b5, block b6 is not under block b4, block b4 is not clear, block b3 is not on block b5, block b4 is not on block b5, block b4 is not on the table, block b2 is not on block b3, block b3 is not on block b2, block b6 is not on block b3, block b7 is not on block b2, block b2 is not on block b4, block b5 is not on block b4, block b1 is not on block b5, block b2 is not on block b6, block b1 is not on block b6, block b1 is not being held, block b4 is not on block b3, block b2 is not on block b5, block b6 is not on block b2, block b6 is not on block b1, block b3 is not on block b1, block b7 is not on block b3, block b7 is not on block b1, block b5 is not on the table, block b3 is not on block b7 and block b1 is not on block b3, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b7 is not on block b5"}
{"id": "a5b0541c-0f49-499f-854a-fedb5a9998be", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not being held, block b5 is not on block b3, block b6 is not on block b5, block b2 is not being held, block b2 is not on block b7, block b2 is not on block b3, block b3 is not on block b2, block b4 is not on the table, block b3 is not on block b6, block b1 is not on block b5, block b5 is not on block b4, block b6 is not clear, block b7 is not on block b2, block b3 is not on block b1, block b1 is not on block b4, block b7 is not on block b1, block b4 is not clear, block b1 is not being held, block b2 is not under block b5, block b5 is not being held, block b6 is not being held, block b6 is not on block b3, hand is not empty, block b5 is not on block b1, block b1 is not on block b6, block b5 is not on block b7, block b6 is not on block b2, block b7 is not being held, block b4 is not on block b3, block b4 is not on block b5, block b2 is not on block b4, block b2 is not on block b1, block b6 is not on block b7, block b2 is not clear, block b1 is not on block b2, block b4 is not on block b7, block b7 is not on block b3, block b6 is not on block b4, block b5 is not on block b6, block b7 is not on block b5 and block b3 is not on block b7, is not defined? Write None if all are defined.", "answer": "block b2 is not under block b5", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not being held, block b5 is not on block b3, block b6 is not on block b5, block b2 is not being held, block b2 is not on block b7, block b2 is not on block b3, block b3 is not on block b2, block b4 is not on the table, block b3 is not on block b6, block b1 is not on block b5, block b5 is not on block b4, block b6 is not clear, block b7 is not on block b2, block b3 is not on block b1, block b1 is not on block b4, block b7 is not on block b1, block b4 is not clear, block b1 is not being held, block b2 is not under block b5, block b5 is not being held, block b6 is not being held, block b6 is not on block b3, hand is not empty, block b5 is not on block b1, block b1 is not on block b6, block b5 is not on block b7, block b6 is not on block b2, block b7 is not being held, block b4 is not on block b3, block b4 is not on block b5, block b2 is not on block b4, block b2 is not on block b1, block b6 is not on block b7, block b2 is not clear, block b1 is not on block b2, block b4 is not on block b7, block b7 is not on block b3, block b6 is not on block b4, block b5 is not on block b6, block b7 is not on block b5 and block b3 is not on block b7, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b2 is not on block b4"}
{"id": "4b03f7e0-3fc2-48e1-91d7-af7644b329fe", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, remove block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "remove block b5 from block b4", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, remove block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "40d56063-6f8c-4746-a819-b30c047f6a31", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "d2a40357-9edb-4581-8c82-b43d9a5ec923", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: remove block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "remove block b3 from block b7", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: remove block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2 and unstack block b4 from block b1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "6c2b7d24-0622-4d0d-8b09-aee190bfef99", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b4 is part of the state?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b4 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "1f4d8efc-ae97-4161-94d2-90778fdd7625", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?\n\n[ANSWER]:\n", "response": "False"}
{"id": "7ff7f793-ab1a-4998-b7c3-2cbc232fdec2", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b6 is part of the state?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b6 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "67c9b018-6ab6-4be2-97e3-08b3e66d3331", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is clear?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is clear?\n\n[ANSWER]:\n", "response": "False"}
{"id": "26161f0a-5fe4-437e-913c-8b4f21378ae5", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is on the table?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is on the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "47902067-cd4f-46e1-9a76-3d269d3647ef", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is under the table?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is under the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "c645aebc-2b41-4338-8c3f-8a4bbbf0b23b", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not under block b7?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not under block b7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "e3db6c4d-743e-4835-8159-d86b598e38bd", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is not on block b7?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is not on block b7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "01174b80-5f71-449b-812b-7da1ee075579", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is not being held?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is not being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "af44c5b0-20f9-4c6f-83f8-75748dffc721", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, lift block b3, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, lift block b3, is defined?\n\n[ANSWER]:\n", "response": "True"}
{"id": "807d9f31-2236-4730-91f2-dc60eb6e2b46", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, remove block b5 from block b1, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, remove block b5 from block b1, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "21371bdb-1bb1-4125-8e37-ba487144acf4", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, lift block b6, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, lift block b6, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "931dd223-d74b-460e-9696-adaaf08f30bd", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, remove block b3 from block b6, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, remove block b3 from block b6, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "bd7e1772-a90a-4a2e-9d2f-7d7afefcc969", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, remove block b4 from block b7, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, remove block b4 from block b7, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "685b40e4-3476-490a-a772-97b80612d686", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b4 from block b3, is defined?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b4 from block b3, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "72ff0643-dfd3-4533-ba05-ab73abf34a91", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b3, b7 and b5, is not defined? Write None if all are defined.", "answer": "b5", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b3, b7 and b5, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "fdbe2474-add1-4df2-953c-7b1cd0730803", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b7 and b8, is not defined? Write None if all are defined.", "answer": "b8", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b7 and b8, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "b8"}
{"id": "ec673668-c5b5-4e0e-81f3-477191488d97", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b3, b8 and b2, is not defined? Write None if all are defined.", "answer": "b8", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b3, b8 and b2, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "bfa45671-fa90-47b8-ae4b-3e37cf478f6d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is clear, block b3 is lost, block b3 is on the table, block b5 is clear and block b2 is clear, is not defined? Write None if all are defined.", "answer": "block b3 is lost", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is clear, block b3 is lost, block b3 is on the table, block b5 is clear and block b2 is clear, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b3 is on the table"}
{"id": "5b82cf37-8a08-4953-8472-fc9056ca61d6", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b1 is on the table, block b6 is on the table, block b5 is clear, block b7 is clear, block b3 is clear, block b7 is on block b4, hand is empty, block b2 is clear, block b6 is clear, block b4 is on the table and block b3 is on the table, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b1 is on the table, block b6 is on the table, block b5 is clear, block b7 is clear, block b3 is clear, block b7 is on block b4, hand is empty, block b2 is clear, block b6 is clear, block b4 is on the table and block b3 is on the table, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b1 is on the table"}
{"id": "db28e110-1bac-4f3e-889e-6ab1ec122cd2", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is on block b4, block b6 is clear and block b4 is on the table, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is on block b4, block b6 is clear and block b4 is on the table, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b6 is clear"}
{"id": "ae5425e6-8c47-48f6-9773-5e711d586e0b", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b4 is not on block b3, block b1 is not under block b7 and block b3 is not on block b7, is not defined? Write None if all are defined.", "answer": "block b1 is not under block b7", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b4 is not on block b3, block b1 is not under block b7 and block b3 is not on block b7, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b3 is not on block b7"}
{"id": "46370bc8-0582-4bdd-9f39-f8a634a1135d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not on block b2, block b5 is not on block b2, block b7 is not on block b6, block b5 is not on block b6, block b3 is not on block b2, block b1 is not clear, block b3 is not on block b1, block b2 is not on block b4, block b2 is not being held, block b5 is not on the table, block b1 is not on block b7, block b1 is not on block b3, block b6 is not being held, block b6 is not on block b1, block b3 is not on block b5, block b2 is not on block b3, block b1 is not on block b4, block b7 is not on block b2, block b3 is not on block b7, block b4 is not on block b2, block b4 is not on block b6, block b3 is not being held, block b5 is not on block b7, block b2 is not on block b5, block b1 is not on block b5, block b4 is not being held and block b2 is not on block b1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not on block b2, block b5 is not on block b2, block b7 is not on block b6, block b5 is not on block b6, block b3 is not on block b2, block b1 is not clear, block b3 is not on block b1, block b2 is not on block b4, block b2 is not being held, block b5 is not on the table, block b1 is not on block b7, block b1 is not on block b3, block b6 is not being held, block b6 is not on block b1, block b3 is not on block b5, block b2 is not on block b3, block b1 is not on block b4, block b7 is not on block b2, block b3 is not on block b7, block b4 is not on block b2, block b4 is not on block b6, block b3 is not being held, block b5 is not on block b7, block b2 is not on block b5, block b1 is not on block b5, block b4 is not being held and block b2 is not on block b1, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b4 is not on block b6"}
{"id": "237d3a59-b613-4d53-bc6c-37fb66865d37", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b2 is not on block b7, block b4 is not on block b5, block b6 is not under block b7, block b4 is not on block b7, block b6 is not on block b1, block b5 is not on block b7, block b6 is not on block b4, block b5 is not on block b2 and block b2 is not being held, is not defined? Write None if all are defined.", "answer": "block b6 is not under block b7", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b2 is not on block b7, block b4 is not on block b5, block b6 is not under block b7, block b4 is not on block b7, block b6 is not on block b1, block b5 is not on block b7, block b6 is not on block b4, block b5 is not on block b2 and block b2 is not being held, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b5 is not on block b2"}
{"id": "6c22949f-b57d-41f2-8839-c125597a2f3f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, remove block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "remove block b4 from block b1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, remove block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "02210dff-889a-4a22-8c9d-71e87913e5f7", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, remove block b7 from block b6 and stack block b7 on block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "remove block b7 from block b6", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, remove block b7 from block b6 and stack block b7 on block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "9139269a-b7d1-49e0-a56f-4d7ee7a3a8f9", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6 and stack block b7 on block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "3774ea5a-f729-48de-8013-c99405cc504d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b2 is part of the state?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b2 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "4d34e28f-3ddf-453b-9b9d-7860aa0ea895", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?\n\n[ANSWER]:\n", "response": "False"}
{"id": "8bff33ac-6943-47b2-8bfb-0ab6889721d4", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b5 is part of the state?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b5 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "83b51623-1c32-4e2b-a1de-773e6f1e47fc", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is being held?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "3f3ac897-e4a9-4ace-943d-436e907dfb24", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is lost?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is lost?\n\n[ANSWER]:\n", "response": "False"}
{"id": "8873d8e8-86dc-4bb6-bd85-b3795e857cf0", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is clear?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is clear?\n\n[ANSWER]:\n", "response": "False"}
{"id": "ebfbe707-3882-43f0-a3b4-926426cf3aa3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is not on block b3?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is not on block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "9cd39fb3-528e-4bbb-b5f5-dd0631cef5a3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is not under block b7?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is not under block b7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "63412130-5f90-4437-8db0-3b8c43f6ade1", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is not under block b1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is not under block b1?\n\n[ANSWER]:\n", "response": "True"}
{"id": "f486950d-2d55-4859-a893-9ac53333e5b2", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, stack block b3 on block b2, is defined?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, stack block b3 on block b2, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "f08a78ed-e7d8-4eb8-8597-7ec6b8d268fe", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b3 from block b7, is defined?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b3 from block b7, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "f0052000-3878-4b53-8155-385f501d82f4", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, put down block b3, is defined?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, put down block b3, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "1fd26a26-257e-4030-bc72-bcdf5ef28ead", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, load block b1 from block b6, is defined?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, load block b1 from block b6, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "67c14173-d3bd-4f97-bf08-53c1a5d749fe", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, remove block b6 from block b4, is defined?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, remove block b6 from block b4, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "73343efd-e9a3-4db6-974b-1f163f04707e", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, pickup block b1, is defined?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, pickup block b1, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "ff97fb9e-a6ae-4e1b-98ee-d1d63deae284", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b2, b7 and b8, is not defined? Write None if all are defined.", "answer": "b8", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b2, b7 and b8, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "b8"}
{"id": "e121cbb2-1f41-41cb-ad0b-71de1370c046", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b2, b6, b3, b4 and b1, is not defined? Write None if all are defined.", "answer": "b2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b2, b6, b3, b4 and b1, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "6fe5cd15-043c-454d-b058-6966c0155f41", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b1 and b6, is not defined? Write None if all are defined.", "answer": "b1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b1 and b6, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "1bdfc62e-4a38-4279-96d8-f496c8773673", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b2 is on block b6, block b1 is on the table, block b2 is clear, block b3 is being held, block b6 is on block b5, block b5 is on block b1 and block b7 is on block b4, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b2 is on block b6, block b1 is on the table, block b2 is clear, block b3 is being held, block b6 is on block b5, block b5 is on block b1 and block b7 is on block b4, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b2 is on block b6"}
{"id": "6aab6e48-9f43-4dee-bf3f-5d72a471c353", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b1 is on the table, block b3 is being held, block b7 is on block b4, block b4 is on the table and block b2 is on block b6, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b1 is on the table, block b3 is being held, block b7 is on block b4, block b4 is on the table and block b2 is on block b6, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b4 is on the table"}
{"id": "61cba10a-61d0-42a3-b110-8c5d11f47d43", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b6 is on block b5, block b7 is clear, block b2 is clear, block b2 is on block b6, block b7 is on block b4, block b5 is on block b1, block b4 is on the table and block b3 is being held, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b6 is on block b5, block b7 is clear, block b2 is clear, block b2 is on block b6, block b7 is on block b4, block b5 is on block b1, block b4 is on the table and block b3 is being held, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "fe2ae302-3648-48a4-b711-daa03e31178d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on the table and block b2 is not on the table, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on the table and block b2 is not on the table, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b2 is not on the table"}
{"id": "454d87d4-38cc-46f1-8149-fd78d250f926", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not being held, block b3 is not on block b7, block b7 is not on block b6, block b3 is not on block b1, block b2 is not on block b7, block b1 is not on block b4, block b3 is not on the table, block b6 is not on block b2, block b2 is not on block b1, block b7 is not on block b2, block b1 is not on block b7, block b2 is not on block b5, block b4 is not on block b6, block b5 is not on block b7, block b4 is not on block b3, block b6 is not on the table, block b7 is not on block b3, block b5 is not on block b2, block b2 is not on block b3, block b4 is not clear, block b6 is not on block b3, block b1 is not clear, block b6 is not on block b4, block b5 is not clear, block b7 is not being thrown, block b1 is not on block b5, block b3 is not on block b4, block b4 is not being held, block b4 is not on block b5, block b6 is not on block b1, block b2 is not on the table, block b5 is not on block b6, block b7 is not on block b1, block b6 is not on block b7, block b3 is not on block b6, block b5 is not on the table, hand is not empty, block b4 is not on block b7, block b7 is not on block b5, block b1 is not on block b2 and block b1 is not on block b3, is not defined? Write None if all are defined.", "answer": "block b7 is not being thrown", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not being held, block b3 is not on block b7, block b7 is not on block b6, block b3 is not on block b1, block b2 is not on block b7, block b1 is not on block b4, block b3 is not on the table, block b6 is not on block b2, block b2 is not on block b1, block b7 is not on block b2, block b1 is not on block b7, block b2 is not on block b5, block b4 is not on block b6, block b5 is not on block b7, block b4 is not on block b3, block b6 is not on the table, block b7 is not on block b3, block b5 is not on block b2, block b2 is not on block b3, block b4 is not clear, block b6 is not on block b3, block b1 is not clear, block b6 is not on block b4, block b5 is not clear, block b7 is not being thrown, block b1 is not on block b5, block b3 is not on block b4, block b4 is not being held, block b4 is not on block b5, block b6 is not on block b1, block b2 is not on the table, block b5 is not on block b6, block b7 is not on block b1, block b6 is not on block b7, block b3 is not on block b6, block b5 is not on the table, hand is not empty, block b4 is not on block b7, block b7 is not on block b5, block b1 is not on block b2 and block b1 is not on block b3, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b7 is not being thrown"}
{"id": "35a20063-b1b3-4025-ad75-4f793557687b", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b4 is not on block b2, block b7 is not on the table, block b3 is not on block b5, block b4 is not clear, block b7 is not on block b1, block b1 is not clear, block b2 is not on block b1, hand is not empty, block b7 is not on block b3, block b3 is not on block b2, block b5 is not on block b4, block b4 is not on block b6, block b3 is not on block b4, block b7 is not on block b2, block b6 is not on block b2, block b6 is not clear, block b5 is not on block b7, block b5 is not being held, block b4 is not on block b3, block b6 is not on block b4, block b4 is not on block b5, block b1 is not being held, block b4 is not on block b7, block b2 is not on block b4, block b3 is not on the table, block b5 is not clear, block b1 is not on block b5, block b4 is not on block b1, block b1 is not on block b4, block b2 is not on block b3, block b2 is not on block b7, block b3 is not on block b7, block b5 is not on block b6, block b5 is not on block b3, block b5 is not on block b2, block b2 is not on block b5, block b7 is not under block b5 and block b1 is not on block b6, is not defined? Write None if all are defined.", "answer": "block b7 is not under block b5", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b4 is not on block b2, block b7 is not on the table, block b3 is not on block b5, block b4 is not clear, block b7 is not on block b1, block b1 is not clear, block b2 is not on block b1, hand is not empty, block b7 is not on block b3, block b3 is not on block b2, block b5 is not on block b4, block b4 is not on block b6, block b3 is not on block b4, block b7 is not on block b2, block b6 is not on block b2, block b6 is not clear, block b5 is not on block b7, block b5 is not being held, block b4 is not on block b3, block b6 is not on block b4, block b4 is not on block b5, block b1 is not being held, block b4 is not on block b7, block b2 is not on block b4, block b3 is not on the table, block b5 is not clear, block b1 is not on block b5, block b4 is not on block b1, block b1 is not on block b4, block b2 is not on block b3, block b2 is not on block b7, block b3 is not on block b7, block b5 is not on block b6, block b5 is not on block b3, block b5 is not on block b2, block b2 is not on block b5, block b7 is not under block b5 and block b1 is not on block b6, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b5 is not on block b6"}
{"id": "389e98c2-4a8e-4c7c-a358-45fcdb02f269", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, load block b5 from block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "load block b5 from block b1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, load block b5 from block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "162f0091-911a-442c-bdd4-a9f3120c4a51", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, lower block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "lower block b3", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, lower block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "3efcd8f8-8102-4b92-aba3-526e5918e967", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6 and pickup block b3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "75cc3386-621f-4f0c-bb32-50a448d43c30", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b4 is part of the state?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b4 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "81bff663-8898-44eb-a1da-de57fd690d0a", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?\n\n[ANSWER]:\n", "response": "False"}
{"id": "835a8082-5450-4273-b994-13c02e4c8bdc", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b6 is part of the state?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b6 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "79c2c4d5-d6e4-4d04-a68d-236e43ebfb3f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is on block b6?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is on block b6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "6ec26230-b6cf-4e11-823e-5f5a2fae89a5", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is clear?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "573385b1-5da0-437e-a2b7-224d60ed1840", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is under block b2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is under block b2?\n\n[ANSWER]:\n", "response": "False"}
{"id": "4e49419d-71cb-48e6-8c40-b35e255b3c44", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is not on block b4?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is not on block b4?\n\n[ANSWER]:\n", "response": "True"}
{"id": "449c0afd-4828-4f46-a4c8-3e041db3fd8f", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is not on block b1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is not on block b1?\n\n[ANSWER]:\n", "response": "True"}
{"id": "d172d557-3ffe-4e3d-a89c-4729bde913de", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is not on block b7?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is not on block b7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "77ff3150-0f5e-4f48-8c44-d4c45a09a43c", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b4 from block b7, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b4 from block b7, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "fd529f97-10c0-4e0b-a146-9597b619afce", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, lower block b4, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, lower block b4, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "e53b3270-0ebd-4f2b-91f1-322a9c303bc3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, put down block b4, is defined?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, put down block b4, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "cfe31fda-caa9-4881-9526-373490be6c75", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b5 from block b4, is defined?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b5 from block b4, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "31ce6ec5-56e9-48ab-b3a8-d082814db30d", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b4 from block b6, is defined?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b4 from block b6, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "9e3482e9-5326-485c-ac27-8c481742345e", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, remove block b3 from block b2, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, remove block b3 from block b2, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "74026349-1187-4db7-86b4-5355d22cd7be", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b8, b2, b5 and b4, is not defined? Write None if all are defined.", "answer": "b8", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b8, b2, b5 and b4, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "f0b43238-bdf5-4ff8-adb8-189ba1af3fec", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b4, b1, b2, b8, b7 and b3, is not defined? Write None if all are defined.", "answer": "b8", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b4, b1, b2, b8, b7 and b3, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "b8"}
{"id": "f216b5d9-9ad1-4f36-a5c2-935ba5107262", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b4, b7, b2, b1 and b3, is not defined? Write None if all are defined.", "answer": "b7", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b4, b7, b2, b1 and b3, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "b1"}
{"id": "5f7b5921-4b7b-4702-9856-a1cac787f32a", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b1 is on the table, block b7 is on block b3, block b2 is on block b6, block b3 is on block b2, block b7 is clear, block b4 is being held and block b5 is on block b1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b1 is on the table, block b7 is on block b3, block b2 is on block b6, block b3 is on block b2, block b7 is clear, block b4 is being held and block b5 is on block b1, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b7 is on block b4"}
{"id": "dc0d86dd-1dfd-4af4-b381-c6b9f11334d3", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b1 is on the table, block b3 is on block b2, block b7 is clear, block b7 is on block b3 and block b5 is on block b1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b1 is on the table, block b3 is on block b2, block b7 is clear, block b7 is on block b3 and block b5 is on block b1, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b7 is on block b3"}
{"id": "81287a8b-e29e-4fe1-9de8-59dacfea2590", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is on block b2, block b7 is under block b3, block b2 is on block b6, block b1 is on the table, block b5 is on block b1 and block b7 is clear, is not defined? Write None if all are defined.", "answer": "block b7 is under block b3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is on block b2, block b7 is under block b3, block b2 is on block b6, block b1 is on the table, block b5 is on block b1 and block b7 is clear, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b1 is on the table"}
{"id": "2db40a5b-9d91-4a45-99d6-c22e65f22cd5", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b2 is not on block b7, block b3 is not on block b5, block b4 is not on block b3, block b4 is not on the table, block b7 is not on block b1, block b3 is not clear, block b1 is not on block b4, block b2 is not on block b3, block b2 is not on the table, block b6 is not on the table, block b1 is not on block b5, block b5 is not clear, block b5 is not on block b7 and block b6 is not on block b1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b2 is not on block b7, block b3 is not on block b5, block b4 is not on block b3, block b4 is not on the table, block b7 is not on block b1, block b3 is not clear, block b1 is not on block b4, block b2 is not on block b3, block b2 is not on the table, block b6 is not on the table, block b1 is not on block b5, block b5 is not clear, block b5 is not on block b7 and block b6 is not on block b1, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b2 is not on block b3"}
{"id": "bb60e5b7-f8bb-4e3c-b566-a092c99f5534", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on block b2, block b7 is not under block b1, block b6 is not being held, block b7 is not on the table, block b2 is not being held, block b3 is not on block b7, block b2 is not on block b3, block b4 is not on block b1, block b6 is not on block b7, block b1 is not clear and block b6 is not clear, is not defined? Write None if all are defined.", "answer": "block b7 is not under block b1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on block b2, block b7 is not under block b1, block b6 is not being held, block b7 is not on the table, block b2 is not being held, block b3 is not on block b7, block b2 is not on block b3, block b4 is not on block b1, block b6 is not on block b7, block b1 is not clear and block b6 is not clear, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b7 is not on the table"}
{"id": "1d8593f9-4bc9-4563-91c3-8758d7f86ea4", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b1 is not under block b3, block b2 is not on block b3, block b4 is not on block b3, block b5 is not clear, block b7 is not on block b6, block b3 is not being held, block b3 is not on block b5, block b1 is not clear, block b1 is not on block b5, block b2 is not on the table, block b6 is not clear, block b1 is not on block b4, block b3 is not clear, block b6 is not on block b2, block b1 is not on block b7, block b5 is not on the table, block b4 is not on block b7, block b6 is not on block b4, block b4 is not on block b1, block b5 is not on block b7, block b5 is not on block b3, block b1 is not on block b6, block b2 is not on block b7, block b6 is not on the table, block b5 is not on block b6, block b4 is not on block b5, block b1 is not on block b2, block b5 is not being held, block b6 is not on block b7, block b4 is not on block b2, block b3 is not on block b7 and block b3 is not on the table, is not defined? Write None if all are defined.", "answer": "block b1 is not under block b3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b1 is not under block b3, block b2 is not on block b3, block b4 is not on block b3, block b5 is not clear, block b7 is not on block b6, block b3 is not being held, block b3 is not on block b5, block b1 is not clear, block b1 is not on block b5, block b2 is not on the table, block b6 is not clear, block b1 is not on block b4, block b3 is not clear, block b6 is not on block b2, block b1 is not on block b7, block b5 is not on the table, block b4 is not on block b7, block b6 is not on block b4, block b4 is not on block b1, block b5 is not on block b7, block b5 is not on block b3, block b1 is not on block b6, block b2 is not on block b7, block b6 is not on the table, block b5 is not on block b6, block b4 is not on block b5, block b1 is not on block b2, block b5 is not being held, block b6 is not on block b7, block b4 is not on block b2, block b3 is not on block b7 and block b3 is not on the table, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b5 is not on block b7"}
{"id": "e1d5a647-2fe0-4d85-bf67-924ea9fa5a63", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "da865120-0cde-4036-a95b-067af74831d4", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, remove block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "remove block b4 from block b1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, remove block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, unstack block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "d94a0ce8-6cdd-4b9c-a265-212c9087b7c2", "domain_name": "blocksworld", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, remove block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "remove block b7 from block b6", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["on(b7,b6)", "clear(b3)", "handempty", "clear(b2)", "ontable(b1)", "ontable(b6)", "clear(b5)", "on(b5,b4)", "ontable(b2)", "on(b4,b1)", "on(b3,b7)"], "neg_fluents": ["-on(b3,b5)", "-on(b4,b6)", "-on(b4,b2)", "-on(b7,b4)", "-on(b2,b1)", "-on(b1,b7)", "-on(b3,b6)", "-on(b6,b1)", "-on(b4,b3)", "-on(b2,b3)", "-holding(b4)", "-on(b6,b5)", "-on(b6,b7)", "-on(b5,b7)", "-on(b5,b2)", "-on(b7,b5)", "-on(b7,b3)", "-clear(b1)", "-on(b5,b3)", "-on(b4,b7)", "-on(b6,b4)", "-on(b5,b6)", "-on(b3,b4)", "-ontable(b4)", "-holding(b7)", "-clear(b7)", "-on(b2,b4)", "-on(b2,b7)", "-ontable(b5)", "-on(b7,b1)", "-clear(b4)", "-on(b7,b2)", "-on(b1,b6)", "-holding(b6)", "-on(b2,b5)", "-holding(b5)", "-on(b2,b6)", "-on(b3,b2)", "-clear(b6)", "-on(b1,b5)", "-on(b1,b2)", "-on(b4,b5)", "-ontable(b7)", "-on(b6,b2)", "-on(b1,b3)", "-holding(b3)", "-ontable(b3)", "-on(b3,b1)", "-on(b1,b4)", "-on(b5,b1)", "-holding(b2)", "-holding(b1)", "-on(b6,b3)"], "objects": {"block": ["b1", "b2", "b3", "b4", "b5", "b6", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b3,b7)", "action_put_down(b3)", "action_unstack(b5,b4)", "action_stack(b5,b2)", "action_unstack(b4,b1)", "action_put_down(b4)", "action_unstack(b5,b2)", "action_stack(b5,b1)", "action_unstack(b7,b6)", "action_stack(b7,b4)", "action_pick_up(b6)", "action_stack(b6,b5)", "action_pick_up(b2)", "action_stack(b2,b6)", "action_pick_up(b3)", "action_stack(b3,b2)", "action_unstack(b7,b4)", "action_stack(b7,b3)", "action_pick_up(b4)", "action_stack(b4,b7)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b3 from block b7, put down block b3, unstack block b5 from block b4, stack block b5 on block b2, unstack block b4 from block b1, put down block b4, unstack block b5 from block b2, stack block b5 on block b1, remove block b7 from block b6, stack block b7 on block b4, pickup block b6, stack block b6 on block b5, pickup block b2, stack block b2 on block b6, pickup block b3, stack block b3 on block b2, unstack block b7 from block b4, stack block b7 on block b3 and pickup block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
