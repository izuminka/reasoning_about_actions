{"id": "6c2eeae3-6c15-40ec-be2e-e91c35390a36", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b6 is on block b7?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b6 is on block b7?\n\n[ANSWER]:\n", "response": "False"}
{"id": "3ea496e2-f5a7-4de3-85ac-aca6ebcddc22", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b5 is on block b7?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b5 is on block b7?\n\n[ANSWER]:\n", "response": "False"}
{"id": "4e20bb65-7f52-4cb1-bc92-50aa4d4e98b7", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b4 is on block b8 and block b8 is on block b2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b4 is on block b8 and block b8 is on block b2?\n\n[ANSWER]:\n", "response": "False"}
{"id": "e4542619-359d-44e0-ba0b-6a227d84d264", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b5 is not on block b4, block b5 is not on the table, block b5 is not on block b1, block b3 is not on block b5, block b5 is not on block b6 and block b7 is not on block b5?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b5 is not on block b4, block b5 is not on the table, block b5 is not on block b1, block b3 is not on block b5, block b5 is not on block b6 and block b7 is not on block b5?\n\n[ANSWER]:\n", "response": "True"}
{"id": "da183be0-71ac-4c28-8ec9-71d3196905c5", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b8 is not on block b3, block b8 is not on block b1, block b5 is not on block b8, block b7 is not on block b8, block b6 is not on block b8, block b8 is not on block b6, block b8 is not being held, block b3 is not on block b8, block b8 is not on block b7, block b8 is not on the table, block b8 is not on block b5, block b2 is not on block b8 and block b1 is not on block b8?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b8 is not on block b3, block b8 is not on block b1, block b5 is not on block b8, block b7 is not on block b8, block b6 is not on block b8, block b8 is not on block b6, block b8 is not being held, block b3 is not on block b8, block b8 is not on block b7, block b8 is not on the table, block b8 is not on block b5, block b2 is not on block b8 and block b1 is not on block b8?\n\n[ANSWER]:\n", "response": "True"}
{"id": "105b934d-cca9-4137-9069-f4b17bb645a9", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b1 is not on block b4, block b4 is not on block b6, block b4 is not on block b5, block b4 is not on block b3 and block b4 is not clear?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b1 is not on block b4, block b4 is not on block b6, block b4 is not on block b5, block b4 is not on block b3 and block b4 is not clear?\n\n[ANSWER]:\n", "response": "False"}
{"id": "b1a680b9-85d5-4716-a37d-b8eb850bd831", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b5 is clear and block b5 is on block b4?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b5 is clear and block b5 is on block b4?\n\n[ANSWER]:\n", "response": "False"}
{"id": "39256ab3-6822-4658-a6ae-071209840345", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b7 is on block b3?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b7 is on block b3?\n\n[ANSWER]:\n", "response": "False"}
{"id": "87685849-ffe0-4f2b-9385-25e2ead3af2d", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b7 is on block b2 and block b2 is clear?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b7 is on block b2 and block b2 is clear?\n\n[ANSWER]:\n", "response": "False"}
{"id": "5ac8999a-06d3-444b-ace0-021498c0b121", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b1 is not on block b4?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b1 is not on block b4?\n\n[ANSWER]:\n", "response": "True"}
{"id": "6a7b4c19-44d9-455d-ba2e-9480bad39d95", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b1 is not on block b2, block b2 is not being held, block b2 is not on block b3, block b7 is not on block b2 and block b2 is not on the table?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b1 is not on block b2, block b2 is not being held, block b2 is not on block b3, block b7 is not on block b2 and block b2 is not on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "45950bc0-35e3-446d-ba56-a3100cdf55ff", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b8 is not on block b1, block b8 is not clear, block b1 is not on block b8, block b4 is not on block b8, block b5 is not on block b8, block b6 is not on block b8, block b8 is not being held, block b3 is not on block b8, block b8 is not on block b2, block b7 is not on block b8, block b8 is not on block b4, block b8 is not on block b3 and block b8 is not on block b7?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b8 is not on block b1, block b8 is not clear, block b1 is not on block b8, block b4 is not on block b8, block b5 is not on block b8, block b6 is not on block b8, block b8 is not being held, block b3 is not on block b8, block b8 is not on block b2, block b7 is not on block b8, block b8 is not on block b4, block b8 is not on block b3 and block b8 is not on block b7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "4dba6b67-cc3e-408e-9528-fd285ec154e4", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b4 is clear and block b4 is on the table?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b4 is clear and block b4 is on the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "9846f9d4-c3b8-4c63-9799-d77b93e70812", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b8 is on block b3 and block b1 is on block b8?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b8 is on block b3 and block b1 is on block b8?\n\n[ANSWER]:\n", "response": "False"}
{"id": "592bd748-7325-47f8-866f-59381ad5edf8", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b5 is on block b1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b5 is on block b1?\n\n[ANSWER]:\n", "response": "False"}
{"id": "ab32b18c-7c33-41ea-b234-fd7cab1b46dd", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b6 is not on block b5, block b5 is not on the table, block b4 is not on block b5, block b2 is not on block b5 and block b5 is not on block b3?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b6 is not on block b5, block b5 is not on the table, block b4 is not on block b5, block b2 is not on block b5 and block b5 is not on block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "247b731a-b96e-4c4a-88be-20a13499b852", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b6 is not on block b2, block b6 is not on block b8, block b3 is not on block b6, block b4 is not on block b6, block b6 is not on the table, block b7 is not on block b6, block b8 is not on block b6, block b6 is not on block b4, block b6 is not being held, block b2 is not on block b6, block b6 is not on block b5, block b6 is not clear, block b6 is not on block b1, block b1 is not on block b6 and block b6 is not on block b3?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b6 is not on block b2, block b6 is not on block b8, block b3 is not on block b6, block b4 is not on block b6, block b6 is not on the table, block b7 is not on block b6, block b8 is not on block b6, block b6 is not on block b4, block b6 is not being held, block b2 is not on block b6, block b6 is not on block b5, block b6 is not clear, block b6 is not on block b1, block b1 is not on block b6 and block b6 is not on block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "676678ec-b120-4b79-9a46-3353157f1ad4", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b8 is not on block b3, block b4 is not on block b3 and block b3 is not clear?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b8 is not on block b3, block b4 is not on block b3 and block b3 is not clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "cef49fd8-737a-42a0-a13b-8f91eb4c533e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b7 is on block b6?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b7 is on block b6?\n\n[ANSWER]:\n", "response": "False"}
{"id": "0e2fe10c-c316-4d9d-bfbd-87f3e62ed793", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b5 is on block b4 and block b4 is on block b7?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b5 is on block b4 and block b4 is on block b7?\n\n[ANSWER]:\n", "response": "False"}
{"id": "7197f3ff-b2b2-4d0d-a74f-d55eae36b2b4", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b6 is on block b2 and block b6 is clear?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b6 is on block b2 and block b6 is clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "72c7faf5-4436-40fe-ae4f-4777cb3c4421", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b2 is not on block b1, block b1 is not on block b7, block b1 is not being held, block b1 is not on block b2, block b1 is not on block b4, block b1 is not on the table, block b1 is not clear, block b5 is not on block b1, block b1 is not on block b5, block b7 is not on block b1, block b6 is not on block b1 and block b3 is not on block b1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b2 is not on block b1, block b1 is not on block b7, block b1 is not being held, block b1 is not on block b2, block b1 is not on block b4, block b1 is not on the table, block b1 is not clear, block b5 is not on block b1, block b1 is not on block b5, block b7 is not on block b1, block b6 is not on block b1 and block b3 is not on block b1?\n\n[ANSWER]:\n", "response": "True"}
{"id": "5f231b03-70a4-4925-b720-6d3b0ffe5ef9", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b3 is not clear, block b3 is not on block b4, block b3 is not on block b5, block b3 is not on block b1 and block b3 is not on block b2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b3 is not clear, block b3 is not on block b4, block b3 is not on block b5, block b3 is not on block b1 and block b3 is not on block b2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "c69e6bd7-a597-4d66-a549-6ec488e0a3d5", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b4 is not on block b7, block b7 is not on block b6, block b2 is not on block b7, block b7 is not on block b1, block b7 is not being held, block b1 is not on block b7 and block b5 is not on block b7?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b4 is not on block b7, block b7 is not on block b6, block b2 is not on block b7, block b7 is not on block b1, block b7 is not being held, block b1 is not on block b7 and block b5 is not on block b7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "8436ce5e-13e9-4a69-abcc-4d1acfa1b795", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b5 is clear and block b8 is on block b5?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b5 is clear and block b8 is on block b5?\n\n[ANSWER]:\n", "response": "False"}
{"id": "fb84458c-695c-40d9-824f-4c13a6bb8772", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b5 is on block b6?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b5 is on block b6?\n\n[ANSWER]:\n", "response": "False"}
{"id": "025c7b60-b4cb-4607-af11-c6ffb032ad29", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b5 is on block b4?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b5 is on block b4?\n\n[ANSWER]:\n", "response": "False"}
{"id": "f4a1ef89-0ccb-4d77-ad75-37fd751c3aa4", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b3 is not on the table, block b5 is not on block b3, block b3 is not on block b1 and block b2 is not on block b3?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b3 is not on the table, block b5 is not on block b3, block b3 is not on block b1 and block b2 is not on block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "e28cf61e-4b18-453f-9b4a-b4dd6ef73a2f", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b1 is not being held, block b5 is not on block b1, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b5, block b2 is not on block b1, block b8 is not on block b1, block b6 is not on block b1, block b1 is not on block b2, block b7 is not on block b1, block b1 is not on block b8, block b1 is not on block b4 and block b1 is not on the table?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b1 is not being held, block b5 is not on block b1, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b5, block b2 is not on block b1, block b8 is not on block b1, block b6 is not on block b1, block b1 is not on block b2, block b7 is not on block b1, block b1 is not on block b8, block b1 is not on block b4 and block b1 is not on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "145e88d9-fe1f-4182-bc03-38f25b61cd12", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b6 is not on block b2, block b6 is not being held, block b6 is not on block b5, block b6 is not on block b3, block b6 is not on block b8, block b6 is not clear, block b1 is not on block b6 and block b3 is not on block b6?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b6 is not on block b2, block b6 is not being held, block b6 is not on block b5, block b6 is not on block b3, block b6 is not on block b8, block b6 is not clear, block b1 is not on block b6 and block b3 is not on block b6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "38634212-073e-4211-9e13-07735214e7d7", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b8 is on block b2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b8 is on block b2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "36afef82-4f1a-4219-ab79-a2c1519c5901", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b4 is being held?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b4 is being held?\n\n[ANSWER]:\n", "response": "False"}
{"id": "ffa971d8-d4bb-4be7-a78c-484e7653cd7d", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b2 is on block b6?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b2 is on block b6?\n\n[ANSWER]:\n", "response": "False"}
{"id": "5cb71488-82e2-40db-8c4a-710ecad25165", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b2 is not on block b1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b2 is not on block b1?\n\n[ANSWER]:\n", "response": "False"}
{"id": "1f67c36e-8e38-44fd-9aea-8218b3447154", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b3 is not on block b7?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b3 is not on block b7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "fca9683f-6650-44d1-8cb6-67ff7520f30d", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b3 is not on the table?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is it True or False that block b3 is not on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "6163bc67-86d9-4f3a-8d25-0ddc3163949c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is on block b1, block b4 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, block b1 is on the table and block b5 is being held?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is on block b1, block b4 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, block b1 is on the table and block b5 is being held?\n\n[ANSWER]:\n", "response": "False"}
{"id": "20dc3264-188c-4a78-b8c9-e4808ecd74a3", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is on block b1, block b3 is on block b5, block b5 is on block b7, block b6 is on block b8, block b8 is on block b3, block b6 is on the table, block b2 is on block b1, block b4 is clear, block b6 is clear and block b8 is on block b2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is on block b1, block b3 is on block b5, block b5 is on block b7, block b6 is on block b8, block b8 is on block b3, block b6 is on the table, block b2 is on block b1, block b4 is clear, block b6 is clear and block b8 is on block b2?\n\n[ANSWER]:\n", "response": "False"}
{"id": "fd7cb5d2-8a41-492a-8bb6-57f07bc54867", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b8 is on block b1, block b3 is on block b5, block b1 is on block b6, block b7 is being held, block b2 is on block b1, block b4 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8 and block b7 is on block b3?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b8 is on block b1, block b3 is on block b5, block b1 is on block b6, block b7 is being held, block b2 is on block b1, block b4 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8 and block b7 is on block b3?\n\n[ANSWER]:\n", "response": "False"}
{"id": "1b2a6c09-e6b4-44fa-9245-23e21cbe46b6", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is not clear, block b2 is not on block b1, block b4 is not clear, block b7 is not on block b3, block b8 is not on block b2, block b4 is not on block b8, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b4 is not on the table, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b2 is not clear, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7 and block b7 is not clear?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is not clear, block b2 is not on block b1, block b4 is not clear, block b7 is not on block b3, block b8 is not on block b2, block b4 is not on block b8, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b4 is not on the table, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b2 is not clear, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7 and block b7 is not clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "656f7b67-2b57-4eed-8bb5-df27aef82d8f", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b4 is not on the table, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b2 is not clear, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b5 is not clear, block b1 is not on block b6, block b6 is not on block b2, block b8 is not on block b6 and block b7 is not on block b4?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b4 is not on the table, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b2 is not clear, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b5 is not clear, block b1 is not on block b6, block b6 is not on block b2, block b8 is not on block b6 and block b7 is not on block b4?\n\n[ANSWER]:\n", "response": "True"}
{"id": "c1a0e062-6632-4382-9ce4-9236470fbbb2", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is not clear, block b6 is not on block b7, block b7 is not on block b3, block b2 is not on block b1, block b8 is not on block b2, block b4 is not clear, block b4 is not on block b8, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b4 is not on the table, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b2 is not clear, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4 and block b8 is not on block b7?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is not clear, block b6 is not on block b7, block b7 is not on block b3, block b2 is not on block b1, block b8 is not on block b2, block b4 is not clear, block b4 is not on block b8, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b4 is not on the table, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b2 is not clear, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4 and block b8 is not on block b7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "1b6a6e60-6e27-492e-bf59-7479bc861ebd", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all valid properties of the state that involve b4. Write None if there are none.", "answer": "block b4 is clear and block b4 is on block b8", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all valid properties of the state that involve b4. Write None if there are none.\n\n[ANSWER]:\n", "response": "InitiallyBlock b5 is on top of block B4**,\n\n**Block B3 is on block B3**,\n \n**Block B4 is on block B4 B B**,\n \n**Block B4 is on block B4 B B**,\n\n**Block B4 B B is on block B4 B B is on block B4 B B**,\n \n**Block B4 B B B B B B B B B B B B B B B B B B **Block B4 B B B B is on block B4 B B B B B B B B B B B B B\n \n**Block B4 B B B B B B B B B B B B B B B B B B B B B B B\n(Shu)B3 is on block B3, block B1 is on block B1, block B3 B B B B B B B B B B B B B B B B B B B B B B B B , block B3 is on block B2, block B2 is on block B2, block B2 , block B2 is on block B2, block B2 , block B1 is on block B1, block B1 , block B1 , block B 1, block B 1, block B 1, block B 1 , block B 1, block B 1 , block B 1 , block B 1 , block B 1 , block B 1, block B 1, block B 1, block B 1, block B 1, block B 1, block B 1, block B 1, block B 1, block B 1, block B 1, block B 1, block B 1, block B 1, block B 1, block B 1, block B 1, [B 1, block B 1, block B 1, block B 1, block B 1, block B 1, block B 1, block B 1, block B 1, block B 1, block B 1, block B 2 B 2 2 2 2 2 2 2 2 2 2 2 2 2  2  2 2 2 2 B 2 , block B 2 , block B 2 , block B 2 , block B 2 , block B 2 , block B 2 , block B 2 , block B 2 , block B 2 , block B 2 , block B "}
{"id": "82952ab9-3af4-4cbf-9df8-455ed60a1dca", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.", "answer": "block b7 is on block b3 and block b6 is on block b7", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.\n\n[ANSWER]:\n", "response": "b7 is on block b3"}
{"id": "69730970-a5da-4a94-996d-c419bb9665f6", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.", "answer": "block b6 is clear and block b6 is on block b7", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b6 is on block b7.\n- Block b6 is clear.\n- Block b6 is not on the table."}
{"id": "8f51fe50-5d80-4652-940d-82f354fb1293", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b1. Write None if there are none.", "answer": "block b5 is not on block b1, block b1 is not on block b2, block b8 is not on block b1, block b1 is not on block b8, block b1 is not on block b3, block b7 is not on block b1, block b1 is not clear, block b1 is not on block b7, block b1 is not on block b5, block b1 is not being held, block b3 is not on block b1, block b4 is not on block b1, block b6 is not on block b1, block b1 is not on block b4 and block b1 is not on block b6", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b1. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b1 is not on top of b3\n- b1 is not on top of b5\n- b1 is not on top of b6\n- b1 is not on top of b7\n- b1 is not on top of b8"}
{"id": "f075fc92-63ee-4748-86bf-e10800d89da6", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b5. Write None if there are none.", "answer": "block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b5 is not on block b7, block b5 is not on block b4, block b4 is not on block b5, block b7 is not on block b5, block b5 is not on block b8, block b5 is not on block b2, block b5 is not on the table, block b3 is not on block b5, block b1 is not on block b5, block b6 is not on block b5, block b5 is not on block b6 and block b5 is not clear", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b5. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b5 is not on block b4\n- b5 is not on the table\n- b5 is not clear\n- b5 is not on block b3\n- b5 is not on block b6\n- b5 is not on block b7\n- b5 is not on block b8\n- b5 is not being held"}
{"id": "78274540-3ffc-404a-b686-8d9972022f21", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.", "answer": "block b6 is not on block b8, block b6 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b6 is not being held, block b6 is not on block b3, block b6 is not on block b4, block b6 is not on block b5, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b7 is not on block b6, block b1 is not on block b6, block b6 is not on block b2 and block b8 is not on block b6", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b6 is not on top of block b7.\n- Block b6 is not clear.\n- Block b6 is not being held."}
{"id": "fdddd8c0-2002-461f-975d-166a47ab49c0", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b2 is on block b7?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b2 is on block b7?\n\n[ANSWER]:\n", "response": "False"}
{"id": "72facc7d-8ecf-4835-ad86-bb4fd4c470d7", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b5 is on block b6?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b5 is on block b6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "00acbc18-f3a4-480d-a5ea-ab0088e9c0e7", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b3 is on the table?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b3 is on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "5ffdbe52-56d0-410b-ac14-fdc8a2b85cce", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b4 is not on block b3?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b4 is not on block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "1eec1bec-164b-40d5-a874-97c9f4991699", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b8 is not on block b3?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b8 is not on block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "1d12c576-8aa9-4f53-87b7-485d6560ce9c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b4 is not on block b5?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is it True or False that block b4 is not on block b5?\n\n[ANSWER]:\n", "response": "True"}
{"id": "b84d26ce-38ad-40f8-84e5-d8b1f9b0f35f", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties of the state True or False: block b8 is being held, block b4 is clear, block b5 is clear, block b5 is on block b6, block b2 is clear, block b4 is on the table, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, block b1 is on the table and block b2 is on block b1?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties of the state True or False: block b8 is being held, block b4 is clear, block b5 is clear, block b5 is on block b6, block b2 is clear, block b4 is on the table, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, block b1 is on the table and block b2 is on block b1?\n\n[ANSWER]:\n", "response": "False"}
{"id": "161e08d4-2edd-4651-9ebb-7bbfe16ac3a7", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is on block b2, block b1 is on block b6, block b2 is on block b7, block b8 is on block b7, block b5 is on block b2, block b3 is on block b5, block b2 is on block b4, block b8 is being held, block b4 is clear, block b5 is clear and block b5 is on block b6?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is on block b2, block b1 is on block b6, block b2 is on block b7, block b8 is on block b7, block b5 is on block b2, block b3 is on block b5, block b2 is on block b4, block b8 is being held, block b4 is clear, block b5 is clear and block b5 is on block b6?\n\n[ANSWER]:\n", "response": "False"}
{"id": "c6c04fed-eab9-4441-a585-9f9cad2b91aa", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is on block b6, block b3 is clear, block b6 is being held, block b4 is on block b2, block b3 is on block b5, block b1 is on block b5, block b3 is on block b1, block b8 is being held, block b4 is clear, block b5 is clear and block b5 is on block b6?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is on block b6, block b3 is clear, block b6 is being held, block b4 is on block b2, block b3 is on block b5, block b1 is on block b5, block b3 is on block b1, block b8 is being held, block b4 is clear, block b5 is clear and block b5 is on block b6?\n\n[ANSWER]:\n", "response": "False"}
{"id": "52bf1411-95ff-4ce0-8128-d78f204a9827", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is not on the table, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6 and block b7 is not on block b4?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is not on the table, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6 and block b7 is not on block b4?\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "4432e9b8-717a-4e27-81a6-cc317872bae9", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties of the state True or False: block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6, block b7 is not on block b4 and block b5 is not being held?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties of the state True or False: block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6, block b7 is not on block b4 and block b5 is not being held?\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "4e0a7a92-a6a3-4c41-a84d-b158dea5b109", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is not on block b6, block b2 is not clear, block b3 is not on the table, block b4 is not on the table, block b8 is not being held, block b7 is not on block b3, block b1 is not on the table, block b6 is not on block b7, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6 and block b1 is not on block b4?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is not on block b6, block b2 is not clear, block b3 is not on the table, block b4 is not on the table, block b8 is not being held, block b7 is not on block b3, block b1 is not on the table, block b6 is not on block b7, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6 and block b1 is not on block b4?\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "44c4e88f-884d-4c68-91a0-0a0bd9ff26cb", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all valid properties of the state that involve b8. Write None if there are none.", "answer": "block b8 is being held", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all valid properties of the state that involve b8. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b8 is clear\n- block b8 is on the table"}
{"id": "e5f50df3-7429-4664-b99c-b1608543aae2", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.", "answer": "block b5 is on block b6 and block b6 is on block b7", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b6 is clear\n- block b5 is on block b6"}
{"id": "3a1999f5-44c3-4693-85b4-1cf5097650e6", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all valid properties of the state that involve b2. Write None if there are none.", "answer": "block b2 is clear and block b2 is on block b1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all valid properties of the state that involve b2. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b2 is clear\n- Block b2 is on the table"}
{"id": "7b8722e5-94a9-4e3f-aa8f-d14dcc1fc1fb", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b2. Write None if there are none.", "answer": "block b2 is not on block b5, block b2 is not on block b3, block b2 is not on the table, block b2 is not being held, block b2 is not on block b4, block b2 is not on block b6, block b1 is not on block b2, block b7 is not on block b2, block b2 is not on block b7, block b5 is not on block b2, block b2 is not on block b8, block b6 is not on block b2, block b3 is not on block b2, block b4 is not on block b2 and block b8 is not on block b2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b2. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b2 is not clear.\n- Block b2 is not on the table.\n- Block b2 is not being held."}
{"id": "38dee8c2-e111-4567-9e0e-fd0c3af3cdd9", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b8. Write None if there are none.", "answer": "block b8 is not on block b5, block b8 is not clear, block b6 is not on block b8, block b8 is not on block b3, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b8, block b5 is not on block b8, block b2 is not on block b8, block b8 is not on the table, block b3 is not on block b8, block b4 is not on block b8, block b8 is not on block b7, block b8 is not on block b2 and block b8 is not on block b6", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b8. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b8 not clear\n- Block b8 not on top of block b2\n- Block b8 not being held\n- Block b8 not on table"}
{"id": "cd1abfc0-014a-4589-9648-569d9e08d34b", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b7. Write None if there are none.", "answer": "block b5 is not on block b7, block b7 is not on the table, block b7 is not on block b5, block b7 is not on block b2, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b1 is not on block b7, block b7 is not being held, block b4 is not on block b7, block b3 is not on block b7, block b7 is not on block b6, block b8 is not on block b7, block b7 is not clear and block b7 is not on block b4", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b7. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b7 is not held.\n- Block b7 is not clear.\n- Block b7 is not on block b3.\n- Block b7 is not on table."}
{"id": "c159b408-d954-4f56-bc37-e3ed261bd566", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that hand is empty?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that hand is empty?\n\n[ANSWER]:\n", "response": "True"}
{"id": "05554b55-6afd-4a19-acbc-a199b7059fff", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b8 is on block b5?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b8 is on block b5?\n\n[ANSWER]:\n", "response": "False"}
{"id": "a7e94950-4f84-443a-8967-09b195dc77ab", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b8 is on the table?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b8 is on the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "7a6ffa74-7f39-49d7-a32a-438fbeaade9e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that hand is not empty?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that hand is not empty?\n\n[ANSWER]:\n", "response": "True"}
{"id": "ff3c899a-ee35-4195-bbd2-bc2647235eed", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b1 is not clear?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b1 is not clear?\n\n[ANSWER]:\n", "response": "By the rule of method sequence, putting the block on the table, and the block not being held is impossible. As the initial condition, the following actions are done: the block is put on the table, the block is let go, the block is put on top of the table, and the block is put on the table. The current state is that the table is put on top of the block. If put the first block on top of the second block, then the block is put on top of the block and not on top of a second block, and the first block is not put on top of a second block. Thus, it is false that the first block is put on to of the second block. Let go the first block, and put the first first block on top of the block, and let go the first block, and put the first block on the table, and put the first block on the table, the current state is that the first block is put on the table, and the second block is not put on top of the second block, and the first block is not put on top of the second block. Therefore, it is false that the first block is put on top of the second block. Let go the first block, and put the first block on the table, and put the first block on the table, the current state is that the first block is put on the table, and the first block is not put on top of the second block, and the first block is put on put put put put. Therefore, it is false that the first block is put on top of the second block. Let go the first block, and put the first block on put put, and put the first block on put put, and put pot put put put point the first block on the table, and the first block on the table, and the first block on the table, and the first block is put on the table, and the first block is put on put put put neg put put pot point point the table, and the first block on the table, and the first block is put on put put pot point point point the second block, and the first block is put on put put put pop pop pop point point point point point the first block on the table, and the first block is put on put put put put point point point point the table, and the first block is put on put put put the first block is put on put put pot point point the first block is put on the table, and the first block is put on put put put put point point point point point point point the first block is put on put put put put point point point point point point point point point point point point point point point point point point point"}
{"id": "14aae7ee-4937-46b2-b9e5-e91beadb7fcd", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b3 is not on the table?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is it True or False that block b3 is not on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "8ec7ac77-6ee9-4430-9678-e021ef5aa039", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is clear, block b5 is clear, block b1 is on block b8, block b5 is on block b6, block b2 is clear, block b8 is on the table, block b4 is on the table, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, block b1 is clear, hand is empty and block b2 is on the table?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is clear, block b5 is clear, block b1 is on block b8, block b5 is on block b6, block b2 is clear, block b8 is on the table, block b4 is on the table, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, block b1 is clear, hand is empty and block b2 is on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "422db396-4b25-4a2b-9816-c2e3ba9b877d", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is on block b2, block b7 is on block b2, block b8 is on block b5, block b7 is on block b4, block b3 is on block b5, block b8 is on block b7, block b7 is clear, block b3 is on block b2, block b4 is on block b7, block b2 is on block b3, block b6 is clear, block b7 is on block b5 and block b4 is clear?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is on block b2, block b7 is on block b2, block b8 is on block b5, block b7 is on block b4, block b3 is on block b5, block b8 is on block b7, block b7 is clear, block b3 is on block b2, block b4 is on block b7, block b2 is on block b3, block b6 is clear, block b7 is on block b5 and block b4 is clear?\n\n[ANSWER]:\n", "response": "False"}
{"id": "39602d69-9df7-4db0-a8a1-816b48e9f610", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is on the table, block b4 is on block b2, block b2 is being held, block b8 is being held, block b5 is on block b1, block b7 is on block b4, block b2 is on block b6, block b4 is on block b8, block b4 is clear, block b5 is clear, block b1 is on block b8, block b5 is on block b6 and block b2 is clear?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is on the table, block b4 is on block b2, block b2 is being held, block b8 is being held, block b5 is on block b1, block b7 is on block b4, block b2 is on block b6, block b4 is on block b8, block b4 is clear, block b5 is clear, block b1 is on block b8, block b5 is on block b6 and block b2 is clear?\n\n[ANSWER]:\n", "response": "True, False, False, False, True, False, False, False, True, False, False, False, True"}
{"id": "0ca10fd8-a0b7-4948-b5d3-155513041330", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties of the state True or False: block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b1 is not on the table, block b2 is not on block b6, block b3 is not clear, block b5 is not on block b4, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6, block b7 is not on block b4 and block b5 is not being held?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties of the state True or False: block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b1 is not on the table, block b2 is not on block b6, block b3 is not clear, block b5 is not on block b4, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6, block b7 is not on block b4 and block b5 is not being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "3cf9c121-cab0-4dae-ba9f-a2ce9bbdcbd2", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on the table, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b1 is not on the table, block b2 is not on block b6, block b3 is not clear, block b5 is not on block b4, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6 and block b7 is not on block b4?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on the table, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b1 is not on the table, block b2 is not on block b6, block b3 is not clear, block b5 is not on block b4, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6 and block b7 is not on block b4?\n\n[ANSWER]:\n", "response": "True"}
{"id": "f40e6245-05a2-4dc8-99cd-88484e0746bc", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is not on the table, block b1 is not clear, block b5 is not clear, hand is not empty, block b4 is not on the table, block b5 is not on block b6, block b3 is not on the table, block b2 is not clear, block b4 is not clear, block b1 is not on block b8, block b6 is not on block b7, block b7 is not on block b3, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b1 is not on the table, block b2 is not on block b6, block b3 is not clear, block b5 is not on block b4, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1 and block b4 is not on block b7?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is not on the table, block b1 is not clear, block b5 is not clear, hand is not empty, block b4 is not on the table, block b5 is not on block b6, block b3 is not on the table, block b2 is not clear, block b4 is not clear, block b1 is not on block b8, block b6 is not on block b7, block b7 is not on block b3, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b1 is not on the table, block b2 is not on block b6, block b3 is not clear, block b5 is not on block b4, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1 and block b4 is not on block b7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "680523a1-2cf5-4924-9275-4c5f9d3126ea", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.", "answer": "block b5 is on block b6 and block b6 is on block b7", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b6 is clear\n- block b6 has block b5 on top of it"}
{"id": "83ca9784-25d5-4f56-87a5-2aaa38cab86c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.", "answer": "block b7 is on block b3 and block b6 is on block b7", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b7 is being held\n- block b7 is clear\n- block b7 is not on the table"}
{"id": "ccb7769d-6a34-44ad-85e9-37f55c5379e1", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all valid properties of the state that involve b5. Write None if there are none.", "answer": "block b5 is clear and block b5 is on block b6", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all valid properties of the state that involve b5. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b5 is clear.\n- Block b5 is on block b6."}
{"id": "155398f3-1215-4fa4-855e-f3be2758f606", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b1. Write None if there are none.", "answer": "block b5 is not on block b1, block b1 is not on the table, block b8 is not on block b1, block b1 is not on block b2, block b1 is not on block b3, block b7 is not on block b1, block b2 is not on block b1, block b1 is not on block b7, block b1 is not on block b5, block b1 is not being held, block b3 is not on block b1, block b4 is not on block b1, block b6 is not on block b1, block b1 is not on block b4 and block b1 is not on block b6", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b1. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b1 is not clear.\n- b1 is not on the table.\n- b1 is not on top of block b8."}
{"id": "c3725dc7-799c-4055-8f7c-626c11fe1ae9", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.", "answer": "block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b4 is not on block b6, block b2 is not on block b6, block b6 is not being held, block b6 is not on block b3, block b6 is not on block b4, block b6 is not on block b2, block b6 is not on block b5, block b3 is not on block b6, block b6 is not on block b1, block b7 is not on block b6, block b1 is not on block b6 and block b8 is not on block b6", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b6 is not clear.\n- b6 is not on the table.\n- b6 is not on top of another block."}
{"id": "19cb7de5-817e-4080-838d-3bf59a43a3d7", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b4. Write None if there are none.", "answer": "block b2 is not on block b4, block b4 is not on block b6, block b5 is not on block b4, block b4 is not on block b5, block b8 is not on block b4, block b3 is not on block b4, block b6 is not on block b4, block b4 is not being held, block b4 is not on block b3, block b4 is not on block b1, block b4 is not on block b7, block b4 is not on block b8, block b1 is not on block b4, block b4 is not on block b2 and block b7 is not on block b4", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b4. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b4 is not on top of b8\n- b4 is not clear\n- b4 is not being held\n- b4 is not on the table"}
{"id": "0c49b78f-6c5b-4d0b-87f7-6c18eb903b7c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b1 is on block b8?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b1 is on block b8?\n\n[ANSWER]:\n", "response": "True"}
{"id": "3bce0e08-09dc-4784-bdcb-f3a68f5b9653", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b6 is on block b5?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b6 is on block b5?\n\n[ANSWER]:\n", "response": "False"}
{"id": "42911283-6634-4ec2-a701-622ab32e2748", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b6 is on the table?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b6 is on the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "f1b27064-45b7-4df1-a391-f0a312800ddb", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b2 is not on block b8?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b2 is not on block b8?\n\n[ANSWER]:\n", "response": "True"}
{"id": "ba235123-fc4d-45cc-8a04-41fab8b27e01", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b4 is not on the table?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b4 is not on the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "b3583c89-617d-4330-b78c-87e2790d8b51", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b3 is not on the table?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is it True or False that block b3 is not on the table?\n\n[ANSWER]:\n", "response": "True."}
{"id": "e2790408-f853-40f7-b167-fb5f70347a6e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is on block b2, block b5 is clear, block b1 is on block b8, block b7 is being held, block b6 is clear, block b8 is on the table, block b5 is on block b4, block b4 is on the table, block b3 is clear, block b3 is on the table, block b1 is clear and block b2 is on the table?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is on block b2, block b5 is clear, block b1 is on block b8, block b7 is being held, block b6 is clear, block b8 is on the table, block b5 is on block b4, block b4 is on the table, block b3 is clear, block b3 is on the table, block b1 is clear and block b2 is on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "52b906ac-26ee-4512-9a0e-b9cf81f13e9c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b8 is on block b7, block b8 is on block b4, block b6 is on block b7, block b7 is on block b3, block b2 is being held, block b4 is clear, block b6 is on block b2, block b5 is clear, block b1 is on block b8, block b7 is being held, block b6 is clear and block b8 is on the table?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b8 is on block b7, block b8 is on block b4, block b6 is on block b7, block b7 is on block b3, block b2 is being held, block b4 is clear, block b6 is on block b2, block b5 is clear, block b1 is on block b8, block b7 is being held, block b6 is clear and block b8 is on the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "2477600d-9862-4b99-9873-8bc2775ef550", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is on block b5, block b6 is on block b7, block b2 is on block b4, block b4 is on block b8, block b2 is on block b7, block b3 is on block b7, block b6 is on block b2, block b5 is clear, block b1 is on block b8, block b7 is being held, block b6 is clear and block b8 is on the table?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is on block b5, block b6 is on block b7, block b2 is on block b4, block b4 is on block b8, block b2 is on block b7, block b3 is on block b7, block b6 is on block b2, block b5 is clear, block b1 is on block b8, block b7 is being held, block b6 is clear and block b8 is on the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "67e60314-d9e4-45af-8f71-71ba50871744", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b4 is not on block b5, block b4 is not clear, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b7 is not on block b3, block b2 is not clear, block b1 is not on block b5, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6, block b6 is not on block b7, block b7 is not on block b4 and block b5 is not being held?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b4 is not on block b5, block b4 is not clear, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b7 is not on block b3, block b2 is not clear, block b1 is not on block b5, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6, block b6 is not on block b7, block b7 is not on block b4 and block b5 is not being held?\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "967e2751-136d-4438-96ca-9017a2a23b0d", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is not on the table, block b2 is not on the table, block b1 is not on block b8, block b5 is not on block b4, block b3 is not clear, block b6 is not clear, block b5 is not clear, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b4 is not on block b5, block b4 is not clear, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b7 is not on block b3, block b2 is not clear, block b1 is not on block b5, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7 and block b7 is not clear?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is not on the table, block b2 is not on the table, block b1 is not on block b8, block b5 is not on block b4, block b3 is not clear, block b6 is not clear, block b5 is not clear, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b4 is not on block b5, block b4 is not clear, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b7 is not on block b3, block b2 is not clear, block b1 is not on block b5, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7 and block b7 is not clear?\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "dba45a99-38a4-4e5f-b3a4-a1cead1f09db", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on the table, block b4 is not on the table, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b4 is not on block b5, block b4 is not clear, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b7 is not on block b3, block b2 is not clear, block b1 is not on block b5, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6 and block b6 is not on block b7?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on the table, block b4 is not on the table, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b4 is not on block b5, block b4 is not clear, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b7 is not on block b3, block b2 is not clear, block b1 is not on block b5, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6 and block b6 is not on block b7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "f787a211-a7a3-4baf-a9e2-e9a8ceec0a95", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.", "answer": "block b7 is being held", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b7 is clear\n- Block b7 is on table"}
{"id": "dcf013cb-820a-463d-8389-17b366f8094d", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all valid properties of the state that involve b1. Write None if there are none.", "answer": "block b1 is on block b8 and block b1 is clear", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all valid properties of the state that involve b1. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b1 is being held"}
{"id": "d15b07c4-c2a3-4a57-8070-f08ff5067686", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.", "answer": "block b6 is on block b2 and block b6 is clear", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b6 is on block b2"}
{"id": "d93f78f7-7e5a-496b-a01c-d61d85668c80", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b5. Write None if there are none.", "answer": "block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b5 is not on block b7, block b4 is not on block b5, block b7 is not on block b5, block b5 is not on block b8, block b5 is not on block b2, block b5 is not on the table, block b3 is not on block b5, block b1 is not on block b5, block b6 is not on block b5, block b5 is not on block b6 and block b5 is not being held", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b5. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b5 is not stacked on any block.\n- Block b5 is not clear.\n- Block b5 is not on the table.\n- Block b5 is not on top of block b4.\n- Block b5 is not on top of block b8.\n- Block b5 is not on top of block b6."}
{"id": "1f21c338-7c8b-40b8-ad6a-e58bf706acc7", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.", "answer": "block b6 is not on block b8, block b6 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b6 is not being held, block b6 is not on block b3, block b6 is not on block b4, block b6 is not on block b5, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b7 is not on block b6, block b1 is not on block b6, block b8 is not on block b6 and block b6 is not on block b7", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b6 is not being held\n- block b6 is not clear\n- block b6 is not on block b7"}
{"id": "83a77fd5-3cf4-48a4-a4b7-bcd2f37cea78", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b8. Write None if there are none.", "answer": "block b8 is not on block b5, block b8 is not clear, block b6 is not on block b8, block b8 is not on block b3, block b8 is not on block b1, block b8 is not on block b4, block b7 is not on block b8, block b5 is not on block b8, block b8 is not being held, block b2 is not on block b8, block b3 is not on block b8, block b4 is not on block b8, block b8 is not on block b7, block b8 is not on block b2 and block b8 is not on block b6", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b8. Write None if there are none.\n\n[ANSWER]:\n", "response": "- b8 is not clear.\n- b8 is not on top of b2.\n- b8 is not on the table.\n- b8 is not being held."}
{"id": "1fae4ec4-697c-4929-b30c-57bcdb544f69", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b3 is clear?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b3 is clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "24a43659-7955-49c9-9e0c-5527398977b3", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b6 is clear?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b6 is clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "86fce2c3-1814-4a02-9dc8-6981286c5b47", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b1 is on block b8?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b1 is on block b8?\n\n[ANSWER]:\n", "response": "True"}
{"id": "88335d7c-e5b9-44fe-8a07-a54ed2dddd5d", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b2 is not on the table?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b2 is not on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "5a883df9-5acf-43fc-bc4c-b9d9430897da", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b1 is not on block b2?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b1 is not on block b2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "fb61feae-1ba3-460d-9db7-8a7a8132152e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b2 is not on block b3?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is it True or False that block b2 is not on block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "9ecbc697-4208-4754-9816-17c1b7eefe6e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is clear, block b1 is on block b8, block b6 is clear, block b2 is clear, block b8 is on the table, block b5 is on block b4, block b4 is on the table, block b3 is being held, block b6 is on block b7, block b1 is clear, block b7 is on the table and block b2 is on the table?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is clear, block b1 is on block b8, block b6 is clear, block b2 is clear, block b8 is on the table, block b5 is on block b4, block b4 is on the table, block b3 is being held, block b6 is on block b7, block b1 is clear, block b7 is on the table and block b2 is on the table?\n\n[ANSWER]:\n", "response": "True, True, False, True, True, True, True, True, True, True, True, True"}
{"id": "491e1164-72bb-4912-83be-9361831f1b5f", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is on block b2, block b7 is on block b3, block b1 is on block b4, block b5 is on block b8, block b7 is being held, hand is empty, block b3 is on block b7, block b2 is on block b3, block b4 is on block b6, block b3 is on block b8, block b4 is being held and block b5 is clear?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is on block b2, block b7 is on block b3, block b1 is on block b4, block b5 is on block b8, block b7 is being held, hand is empty, block b3 is on block b7, block b2 is on block b3, block b4 is on block b6, block b3 is on block b8, block b4 is being held and block b5 is clear?\n\n[ANSWER]:\n", "response": "True, False, True, False, False, True, False, False, True, False, False, True"}
{"id": "dd85738e-b73b-440a-b727-d420499f037b", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is on block b5, block b8 is on block b6, block b4 is on block b8, block b3 is on block b2, block b6 is being held, block b6 is on block b1, block b2 is on block b1, block b7 is on block b8, block b4 is on block b7, block b1 is on block b5, block b5 is clear and block b1 is on block b8?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is on block b5, block b8 is on block b6, block b4 is on block b8, block b3 is on block b2, block b6 is being held, block b6 is on block b1, block b2 is on block b1, block b7 is on block b8, block b4 is on block b7, block b1 is on block b5, block b5 is clear and block b1 is on block b8?\n\n[ANSWER]:\n", "response": "False"}
{"id": "e966d169-d7c3-400a-a007-bfd495a3f8bf", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b4 is not clear, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b7 is not on block b3, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on the table, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6, block b7 is not on block b4 and block b5 is not being held?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b4 is not clear, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b7 is not on block b3, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on the table, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6, block b7 is not on block b4 and block b5 is not being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "309f8873-7225-43ac-94e5-44df5d3b6c0f", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is not on block b4, block b4 is not on the table, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b4 is not clear, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b7 is not on block b3, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on the table, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2 and block b8 is not on block b6?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is not on block b4, block b4 is not on the table, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b4 is not clear, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b7 is not on block b3, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on the table, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2 and block b8 is not on block b6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "281447e7-87f3-4f60-b35b-f6fd3dbec551", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not being held, block b6 is not clear, block b4 is not on the table, block b5 is not clear, block b5 is not on block b4, block b1 is not on block b8, block b7 is not on the table, block b2 is not clear, block b6 is not on block b7, block b8 is not on the table, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b4 is not clear, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b7 is not on block b3, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on the table, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7 and block b4 is not on block b8?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not being held, block b6 is not clear, block b4 is not on the table, block b5 is not clear, block b5 is not on block b4, block b1 is not on block b8, block b7 is not on the table, block b2 is not clear, block b6 is not on block b7, block b8 is not on the table, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b4 is not clear, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b7 is not on block b3, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on the table, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7 and block b4 is not on block b8?\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "28a68c89-91c3-4080-ab1a-be0db7931675", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve b8. Write None if there are none.", "answer": "block b1 is on block b8 and block b8 is on the table", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve b8. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b8 is on block b1\n- block b8 is clear"}
{"id": "a02dfc6d-58d1-43d2-ae30-5e395f2451ce", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve b4. Write None if there are none.", "answer": "block b5 is on block b4 and block b4 is on the table", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve b4. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b4 is clear\n- block b4 is not on block b8"}
{"id": "6719af32-dcce-4eec-bbee-cee223e7e96a", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.", "answer": "block b6 is on block b7 and block b7 is on the table", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b7 is clear\n- block b7 is on the table"}
{"id": "a63b2955-b8da-4f5f-ae51-f9b071194ebc", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b8. Write None if there are none.", "answer": "block b8 is not on block b5, block b8 is not clear, block b6 is not on block b8, block b8 is not on block b3, block b8 is not on block b1, block b8 is not on block b4, block b7 is not on block b8, block b5 is not on block b8, block b8 is not being held, block b2 is not on block b8, block b3 is not on block b8, block b4 is not on block b8, block b8 is not on block b7, block b8 is not on block b2 and block b8 is not on block b6", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b8. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b8 is not clear.\n- Block b8 is not on block b2.\n- Block b8 is not on the table.\n- Block b8 is not held."}
{"id": "8b9de822-0b4e-406a-b77f-a860c0b31a09", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.", "answer": "block b6 is not on block b8, block b6 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b6 is not being held, block b6 is not on block b3, block b6 is not on block b4, block b6 is not on block b2, block b6 is not on block b5, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b7 is not on block b6, block b1 is not on block b6 and block b8 is not on block b6", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b6 is not clear.\n- Block b6 is not on the table.\n- Block b6 is not on top of block b2.\n- Block b6 is not on top of block b7.\n- Block b6 is not being held."}
{"id": "5f654dff-c3a1-4e3a-98eb-27ff159b15f2", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b4. Write None if there are none.", "answer": "block b2 is not on block b4, block b4 is not on block b6, block b4 is not on block b5, block b4 is not clear, block b8 is not on block b4, block b3 is not on block b4, block b6 is not on block b4, block b4 is not being held, block b4 is not on block b3, block b4 is not on block b1, block b4 is not on block b7, block b4 is not on block b8, block b1 is not on block b4, block b4 is not on block b2 and block b7 is not on block b4", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b4. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b4 is not being held.\n- Block b4 is not on block b5.\n- Block b4 is not on block b2.\n- Block b4 is not on block b1.\n- Block b4 is not on block b8.\n- Block b4 is not on top of block b5.\n- Block b4 is not on top of block b2.\n- Block b4 is not on top of block b1.\n- Block b4 is not on top of block b8.\n- Block b4 is not on top of the table."}
{"id": "f229b6a0-63a6-4db4-a16e-9f7755daf918", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties: block b2 is on block b1, block b4 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, block b1 is on the table and block b5 is being held, correct? Respond with True or False.", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties: block b2 is on block b1, block b4 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, block b1 is on the table and block b5 is being held, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "bc848838-9102-4f98-9596-4aece78fa846", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties: block b7 is on block b2, block b4 is on block b7, block b5 is on block b1, block b7 is on block b4, block b2 is on block b1, block b4 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8 and block b7 is on block b3, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties: block b7 is on block b2, block b4 is on block b7, block b5 is on block b1, block b7 is on block b4, block b2 is on block b1, block b4 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8 and block b7 is on block b3, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "False"}
{"id": "6d4c8449-e1ed-4be6-84c3-be07951d3a84", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties: block b5 is on the table, block b2 is on block b1, block b4 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b7 is on block b3, block b6 is on block b7, block b3 is on the table and block b1 is on the table, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties: block b5 is on the table, block b2 is on block b1, block b4 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b7 is on block b3, block b6 is on block b7, block b3 is on the table and block b1 is on the table, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "False"}
{"id": "0fffe8d9-cefd-4dcc-9276-fbb42fb45aa3", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties: block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b4 is not on the table, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b2 is not clear, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b5 is not clear, block b1 is not on block b6, block b6 is not on block b2, block b8 is not on block b6 and block b7 is not on block b4, correct? Respond with True or False.", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties: block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b4 is not on the table, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b2 is not clear, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b5 is not clear, block b1 is not on block b6, block b6 is not on block b2, block b8 is not on block b6 and block b7 is not on block b4, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "1b05f826-ba99-401f-ad90-1ff9e515e754", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties: block b7 is not on block b3, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b4 is not on the table, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b2 is not clear, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b5 is not clear, block b1 is not on block b6, block b6 is not on block b2 and block b8 is not on block b6, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties: block b7 is not on block b3, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b4 is not on the table, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b2 is not clear, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b5 is not clear, block b1 is not on block b6, block b6 is not on block b2 and block b8 is not on block b6, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "1bfbaba9-c743-4e98-8138-0684ac6629ed", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties: block b2 is not on block b1, block b4 is not on block b8, block b6 is not clear, block b3 is not on the table, block b4 is not clear, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b4 is not on the table, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b2 is not clear, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear and block b4 is not on block b2, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, are all of the following properties: block b2 is not on block b1, block b4 is not on block b8, block b6 is not clear, block b3 is not on the table, block b4 is not clear, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b4 is not on the table, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b2 is not clear, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear and block b4 is not on block b2, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "1a7b2bcd-a211-48fe-b1b3-938efa6e4f2a", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "block b2 is on block b1, block b4 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, block b1 is on the table and block b5 is being held", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b5 is being held\n- block b4 is clear\n- block b8 is on block b2\n- block b4 is on block b8\n- block b7 is on block b3\n- block b6 is on block b7\n- block b3 is on the table\n- hand is not empty\n- block b1 is on the table\n- block b2 is on block b1"}
{"id": "c28616d4-2993-4436-8797-55f1edb3f13f", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b4 is not on the table, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b2 is not clear, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b5 is not clear, block b1 is not on block b6, block b6 is not on block b2, block b8 is not on block b6 and block b7 is not on block b4", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b5 is not clear.\n- Block b5 is not on the table.\n- Hand is not empty.\n- Block b4 is not clear."}
{"id": "333f766c-20e8-4326-908e-a56000452324", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties: block b1 is on block b7, block b1 is on block b3, block b8 is on the table, block b1 is on block b2, block b8 is on block b4, block b3 is on block b8, block b4 is on block b6, block b6 is on block b2, block b2 is on block b6, block b6 is on block b5 and block b8 is being held, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties: block b1 is on block b7, block b1 is on block b3, block b8 is on the table, block b1 is on block b2, block b8 is on block b4, block b3 is on block b8, block b4 is on block b6, block b6 is on block b2, block b2 is on block b6, block b6 is on block b5 and block b8 is being held, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "False"}
{"id": "15fdf862-ad16-4d5c-ada3-5853b6eca9f0", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties: block b8 is being held, block b4 is clear, block b5 is clear, block b5 is on block b6, block b2 is clear, block b4 is on the table, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, block b1 is on the table and block b2 is on block b1, correct? Respond with True or False.", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties: block b8 is being held, block b4 is clear, block b5 is clear, block b5 is on block b6, block b2 is clear, block b4 is on the table, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, block b1 is on the table and block b2 is on block b1, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "83eded85-0f10-46ea-b5aa-bf691d3d7cb5", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties: block b3 is on block b6, block b8 is being held, block b4 is clear, block b5 is clear, block b5 is on block b6, block b2 is clear, block b4 is on the table, block b7 is on block b3, block b6 is on block b7, block b3 is on the table and block b1 is on the table, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties: block b3 is on block b6, block b8 is being held, block b4 is clear, block b5 is clear, block b5 is on block b6, block b2 is clear, block b4 is on the table, block b7 is on block b3, block b6 is on block b7, block b3 is on the table and block b1 is on the table, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "a4f4f17f-a005-44f1-8672-aef89e5018b6", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties: block b2 is not on block b1, block b3 is not on the table, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2 and block b8 is not on block b6, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties: block b2 is not on block b1, block b3 is not on the table, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2 and block b8 is not on block b6, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "9c48746a-fda8-4ad8-b6e1-1d1b9ea10d78", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties: block b7 is not on block b3, block b1 is not on the table, block b2 is not on block b1, block b3 is not on the table, block b5 is not clear, block b2 is not clear, block b5 is not on block b6, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4 and block b8 is not on block b7, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties: block b7 is not on block b3, block b1 is not on the table, block b2 is not on block b1, block b3 is not on the table, block b5 is not clear, block b2 is not clear, block b5 is not on block b6, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4 and block b8 is not on block b7, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "5ab458fa-8ee1-4ecc-aac0-880f905f2f15", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties: block b7 is not on block b3, block b5 is not on block b6, block b4 is not clear, block b2 is not clear, block b5 is not clear, block b8 is not being held, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7 and block b7 is not clear, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, are all of the following properties: block b7 is not on block b3, block b5 is not on block b6, block b4 is not clear, block b2 is not clear, block b5 is not clear, block b8 is not being held, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7 and block b7 is not clear, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "305101e2-2176-4e4d-a15a-2ce48bfa81ac", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "block b8 is being held, block b4 is clear, block b5 is clear, block b5 is on block b6, block b2 is clear, block b4 is on the table, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, block b1 is on the table and block b2 is on block b1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b3 is on the table\n- block b1 is on the table\n- block b2 is on block b1\n- block b8 is on block b2\n- block b7 is on block b3\n- block b6 is clear\n- block b5 is on block b6\n- block b4 is on the table\n- hand is empty"}
{"id": "d30971e2-f676-49b7-a36e-3e4954daec4b", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6, block b7 is not on block b4 and block b5 is not being held", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b8 is not on block b2.\n- Block b5 is not on block b4.\n- Block b4 is not on block b8\n- Block b4 is not on the table.\n- Block b8 is not clear.\n- Block b4 is not clear.\n- Hand is not empty.\n- Block b5 is not clear."}
{"id": "19ca58ff-fa4a-4f30-b16d-101e3d655637", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties: block b4 is clear, block b5 is clear, block b1 is on block b8, block b5 is on block b6, block b2 is clear, block b8 is on the table, block b4 is on the table, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, block b1 is clear, hand is empty and block b2 is on the table, correct? Respond with True or False.", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties: block b4 is clear, block b5 is clear, block b1 is on block b8, block b5 is on block b6, block b2 is clear, block b8 is on the table, block b4 is on the table, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, block b1 is clear, hand is empty and block b2 is on the table, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "f6ab2c08-3ede-47fc-bd7c-873af6b71542", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties: block b2 is on block b4, block b8 is on block b2, block b2 is on block b1, block b8 is on block b3, block b4 is on block b8, block b5 is on block b7, block b5 is on block b4, block b7 is on the table, block b4 is on block b6, block b3 is on block b2, block b5 is on block b8, block b7 is clear and block b4 is clear, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties: block b2 is on block b4, block b8 is on block b2, block b2 is on block b1, block b8 is on block b3, block b4 is on block b8, block b5 is on block b7, block b5 is on block b4, block b7 is on the table, block b4 is on block b6, block b3 is on block b2, block b5 is on block b8, block b7 is clear and block b4 is clear, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "False"}
{"id": "a968f81a-8745-4dd5-9010-35f528c03497", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties: block b3 is being held, block b2 is on block b8, block b5 is on block b3, block b6 is on block b4, block b8 is on block b3, block b4 is on block b1, block b4 is on block b2, block b2 is on block b7, block b6 is on block b5, block b3 is on block b8, block b1 is on block b3, block b4 is clear and block b5 is clear, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties: block b3 is being held, block b2 is on block b8, block b5 is on block b3, block b6 is on block b4, block b8 is on block b3, block b4 is on block b1, block b4 is on block b2, block b2 is on block b7, block b6 is on block b5, block b3 is on block b8, block b1 is on block b3, block b4 is clear and block b5 is clear, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "False"}
{"id": "df2bf353-e94e-4392-819c-8ee3a2ab25af", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties: block b8 is not on the table, block b4 is not on the table, block b5 is not on block b6, hand is not empty, block b6 is not on block b7, block b1 is not clear, block b4 is not clear, block b2 is not clear, block b1 is not on block b8, block b2 is not on the table, block b7 is not on block b3, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b1 is not on the table, block b2 is not on block b6, block b3 is not clear, block b5 is not on block b4, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7 and block b3 is not on block b7, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties: block b8 is not on the table, block b4 is not on the table, block b5 is not on block b6, hand is not empty, block b6 is not on block b7, block b1 is not clear, block b4 is not clear, block b2 is not clear, block b1 is not on block b8, block b2 is not on the table, block b7 is not on block b3, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b1 is not on the table, block b2 is not on block b6, block b3 is not clear, block b5 is not on block b4, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7 and block b3 is not on block b7, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "22c12a63-370f-4afb-b92c-9de20eaaa27c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties: hand is not empty, block b7 is not on block b3, block b3 is not on the table, block b6 is not on block b7, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b1 is not on the table, block b2 is not on block b6, block b3 is not clear, block b5 is not on block b4, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2 and block b1 is not on block b6, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties: hand is not empty, block b7 is not on block b3, block b3 is not on the table, block b6 is not on block b7, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b1 is not on the table, block b2 is not on block b6, block b3 is not clear, block b5 is not on block b4, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2 and block b1 is not on block b6, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "48cb6a2b-d74b-4e9f-8592-1f7bedf0c846", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties: block b3 is not on the table, block b5 is not on block b6, block b8 is not on the table, block b4 is not on the table, block b4 is not clear, block b5 is not clear, hand is not empty, block b2 is not on the table, block b1 is not clear, block b1 is not on block b8, block b6 is not on block b7, block b7 is not on block b3, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b1 is not on the table, block b2 is not on block b6, block b3 is not clear, block b5 is not on block b4, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1 and block b4 is not on block b7, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, are all of the following properties: block b3 is not on the table, block b5 is not on block b6, block b8 is not on the table, block b4 is not on the table, block b4 is not clear, block b5 is not clear, hand is not empty, block b2 is not on the table, block b1 is not clear, block b1 is not on block b8, block b6 is not on block b7, block b7 is not on block b3, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b1 is not on the table, block b2 is not on block b6, block b3 is not clear, block b5 is not on block b4, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1 and block b4 is not on block b7, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "0880489d-ea45-4deb-a507-44ef62fbb421", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "block b4 is clear, block b5 is clear, block b1 is on block b8, block b5 is on block b6, block b2 is clear, block b8 is on the table, block b4 is on the table, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, block b1 is clear, hand is empty and block b2 is on the table", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b5 is clear\n- block b6 is not clear\n- block b8 is on block b1\n- block b4 is on the table\n- block b5 is on block b6\n- block b7 is on block b3\n- block b6 is on block b7\n- block b3 is on the table\n- hand is empty\n- block b1 is on the table\n- block b2 is on block b1"}
{"id": "de50ca33-bf28-4399-a68b-fe19529f8b20", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b1 is not on the table, block b2 is not on block b6, block b3 is not clear, block b5 is not on block b4, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6, block b7 is not on block b4 and block b5 is not being held", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b1 is not on block b8\n- block b2 is not on block b1\n- block b3 is not on the table\n- block b4 is not on block b8\n- block b4 is not on block b5\n- block b5 is not on block b4\n- block b5 is not on block b6\n- block b6 is not on block b7\n- block b6 is not on the table\n- block b7 is not on block b3\n- block b8 is not on block b2\n- hand is not empty"}
{"id": "17fbff79-aa1b-424e-a66a-77d2c6b0b003", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties: block b6 is on block b2, block b5 is clear, block b1 is on block b8, block b7 is being held, block b6 is clear, block b8 is on the table, block b5 is on block b4, block b4 is on the table, block b3 is clear, block b3 is on the table, block b1 is clear and block b2 is on the table, correct? Respond with True or False.", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties: block b6 is on block b2, block b5 is clear, block b1 is on block b8, block b7 is being held, block b6 is clear, block b8 is on the table, block b5 is on block b4, block b4 is on the table, block b3 is clear, block b3 is on the table, block b1 is clear and block b2 is on the table, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "0362a343-3d8f-4a13-97c9-8fa7ebe58a27", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties: block b3 is on block b7, block b6 is on block b2, block b5 is clear, block b1 is on block b8, block b7 is being held, block b6 is clear, block b8 is on the table, block b5 is on block b4, block b4 is on the table, block b3 is clear, block b3 is on the table and block b1 is clear, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties: block b3 is on block b7, block b6 is on block b2, block b5 is clear, block b1 is on block b8, block b7 is being held, block b6 is clear, block b8 is on the table, block b5 is on block b4, block b4 is on the table, block b3 is clear, block b3 is on the table and block b1 is clear, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "76deed6d-a234-461e-ae4c-8b0333b0f988", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties: block b2 is on block b1, block b6 is on block b4, block b3 is on block b6, block b2 is clear, block b7 is clear, block b7 is on block b3, block b7 is on block b5, block b8 is on block b1, block b6 is on block b2, block b5 is clear, block b1 is on block b8 and block b7 is being held, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties: block b2 is on block b1, block b6 is on block b4, block b3 is on block b6, block b2 is clear, block b7 is clear, block b7 is on block b3, block b7 is on block b5, block b8 is on block b1, block b6 is on block b2, block b5 is clear, block b1 is on block b8 and block b7 is being held, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "979021b7-95b1-48f3-b23d-842319678d33", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties: block b5 is not clear, block b6 is not clear, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b4 is not on block b5, block b4 is not clear, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b7 is not on block b3, block b2 is not clear, block b1 is not on block b5, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6 and block b6 is not on block b7, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties: block b5 is not clear, block b6 is not clear, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b4 is not on block b5, block b4 is not clear, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b7 is not on block b3, block b2 is not clear, block b1 is not on block b5, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6 and block b6 is not on block b7, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "fa9b1018-7f4e-4fb7-9c10-68eabfed3d76", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties: block b3 is not clear, block b7 is not being held, block b5 is not clear, block b1 is not clear, block b4 is not on the table, block b3 is not on the table, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b4 is not on block b5, block b4 is not clear, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b7 is not on block b3, block b2 is not clear, block b1 is not on block b5, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear and block b4 is not on block b2, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties: block b3 is not clear, block b7 is not being held, block b5 is not clear, block b1 is not clear, block b4 is not on the table, block b3 is not on the table, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b4 is not on block b5, block b4 is not clear, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b7 is not on block b3, block b2 is not clear, block b1 is not on block b5, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear and block b4 is not on block b2, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "e4a569d9-86ca-467d-a1e6-db15cd8a44c3", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties: block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b4 is not on block b5, block b4 is not clear, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b7 is not on block b3, block b2 is not clear, block b1 is not on block b5, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6, block b6 is not on block b7, block b7 is not on block b4 and block b5 is not being held, correct? Respond with True or False.", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, are all of the following properties: block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b4 is not on block b5, block b4 is not clear, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b7 is not on block b3, block b2 is not clear, block b1 is not on block b5, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6, block b6 is not on block b7, block b7 is not on block b4 and block b5 is not being held, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "a96b849b-5f1b-4910-ac80-cd8014452019", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "block b6 is on block b2, block b5 is clear, block b1 is on block b8, block b7 is being held, block b6 is clear, block b8 is on the table, block b5 is on block b4, block b4 is on the table, block b3 is clear, block b3 is on the table, block b1 is clear and block b2 is on the table", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b5 is clear\n- block b6 is on block b2\n- block b8 is on the table\n- block b4 is on block b8\n- block b2 is on block b1\n- block b1 is on the table\n- block b7 is on block b3\n- hand is empty"}
{"id": "541dc551-50a5-4a4f-b2ee-3f409e548049", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b4 is not on block b5, block b4 is not clear, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b7 is not on block b3, block b2 is not clear, block b1 is not on block b5, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6, block b6 is not on block b7, block b7 is not on block b4 and block b5 is not being held", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b2 is not on top of block b8.\n- Block b4 is not on top of block b3.\n- Block b8 is not on top of block b7.\n- Block b5 is not on top of block b3.\n- Block b7 is not on block b2.\n- Block b4 is not on block b2.\n- Block b5 is not on block b8.\n- Block b3 is not on block b2.\n- Block b4 is not on block b1.\n- Block b3 is not on block b8.\n- Block b8 is not on block b3.\n- Block b5 is not on block b1.\n- Block b4 is not on block b7.\n- Block b7 is not on block b8.\n- Block b2 is not on block b7.\n- Block b5 is not on block b7.\n- Block b6 is not on block b4.\n- Block b1 is not on block b2.\n- Block b8 is not on block b1.\n- Block b6 is not on block b8.\n- Block b7 is not on block b1.\n- Block b1 is not on block b7.\n- Block b6 is not on block b5."}
{"id": "53403fa7-f6b8-4046-9ec4-707714a4baf8", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b5 is clear, block b1 is on block b8, block b6 is clear, block b2 is clear, block b8 is on the table, block b5 is on block b4, block b4 is on the table, block b3 is being held, block b6 is on block b7, block b1 is clear, block b7 is on the table and block b2 is on the table, correct? Respond with True or False.", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b5 is clear, block b1 is on block b8, block b6 is clear, block b2 is clear, block b8 is on the table, block b5 is on block b4, block b4 is on the table, block b3 is being held, block b6 is on block b7, block b1 is clear, block b7 is on the table and block b2 is on the table, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "11f4d1b8-c850-46f6-8eea-b59e7b23db3b", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b1 is on block b2, block b6 is on block b1, block b5 is on block b7, block b8 is on block b5, block b2 is on block b6, block b6 is on block b5, block b8 is on block b3, block b5 is clear, block b1 is on block b8, block b6 is clear, block b2 is clear and block b8 is on the table, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b1 is on block b2, block b6 is on block b1, block b5 is on block b7, block b8 is on block b5, block b2 is on block b6, block b6 is on block b5, block b8 is on block b3, block b5 is clear, block b1 is on block b8, block b6 is clear, block b2 is clear and block b8 is on the table, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "4d8c82f9-0534-4f9c-b700-38f6b773480d", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b3 is on block b1, block b2 is on block b4, block b8 is on block b3, block b5 is clear, block b1 is on block b8, block b6 is clear, block b2 is clear, block b8 is on the table, block b5 is on block b4, block b4 is on the table, block b3 is being held and block b6 is on block b7, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b3 is on block b1, block b2 is on block b4, block b8 is on block b3, block b5 is clear, block b1 is on block b8, block b6 is clear, block b2 is clear, block b8 is on the table, block b5 is on block b4, block b4 is on the table, block b3 is being held and block b6 is on block b7, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "421f58ce-c69a-4d9c-b7b5-27a964892ea3", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b1 is not clear, block b7 is not on the table, block b6 is not on block b7, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b4 is not clear, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b7 is not on block b3, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on the table, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6 and block b8 is not on block b2, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b1 is not clear, block b7 is not on the table, block b6 is not on block b7, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b4 is not clear, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b7 is not on block b3, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on the table, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6 and block b8 is not on block b2, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "8f6c3117-80ea-4c80-908f-af7100a2d32d", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b1 is not on block b8, block b6 is not on block b7, block b7 is not on the table, block b3 is not being held, block b8 is not on the table, block b5 is not clear, block b1 is not clear, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b4 is not clear, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b7 is not on block b3, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on the table, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4 and block b8 is not on block b7, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b1 is not on block b8, block b6 is not on block b7, block b7 is not on the table, block b3 is not being held, block b8 is not on the table, block b5 is not clear, block b1 is not clear, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b4 is not clear, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b7 is not on block b3, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on the table, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4 and block b8 is not on block b7, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "35777603-90ac-46f3-acaf-152341e5834e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b5 is not clear, block b8 is not on the table, block b6 is not clear, block b6 is not on block b7, block b4 is not on the table, block b1 is not on block b8, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b4 is not clear, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b7 is not on block b3, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on the table, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7 and block b7 is not clear, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, are all of the following properties: block b5 is not clear, block b8 is not on the table, block b6 is not clear, block b6 is not on block b7, block b4 is not on the table, block b1 is not on block b8, block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b4 is not clear, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b7 is not on block b3, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on the table, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7 and block b7 is not clear, correct? Respond with True or False.\n\n[ANSWER]:\n", "response": "True"}
{"id": "b3f82298-0d18-4882-81b8-3e1317010db7", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "block b5 is clear, block b1 is on block b8, block b6 is clear, block b2 is clear, block b8 is on the table, block b5 is on block b4, block b4 is on the table, block b3 is being held, block b6 is on block b7, block b1 is clear, block b7 is on the table and block b2 is on the table", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b5 is clear\n- block b6 is on block b7\n- block b8 is on block b1\n- block b4 is on block b5\n- block b7 is on the table\n- block b3 is being held\n- hand is not empty\n- block b2 is on the table\n- block b1 is not clear"}
{"id": "deef4ae5-6948-4fdf-86ff-d81ac30af8a5", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b4 is not clear, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b7 is not on block b3, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on the table, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6, block b7 is not on block b4 and block b5 is not being held", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b4 is not being held.\n- Block b5 is not clear.\n- Block b5 is not on top of block b4.\n- Block b5 is not on top of block b6.\n- Block b6 is not clear.\n- Block b6 is not being held.\n- Block b8 is not on block b2.\n- Block b3 is not on the table."}
{"id": "4c5255f0-5814-4497-a3fc-daf0edebada9", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: stack block b7 on block b8. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: stack block b7 on block b8. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "36e5332e-183e-466c-a26d-685db6fe7afa", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "21add610-62a2-43b9-b468-09c39c1170a9", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: stack block b8 on block b1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: stack block b8 on block b1. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "False"}
{"id": "1f97d6f5-9ac6-4324-b570-21ea180ba231", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: unstack block b5 from block b4. Is the action: unstack block b5 from block b4 executable at step 1, True or False?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 1 the following actions are planned to be performed: unstack block b5 from block b4. Is the action: unstack block b5 from block b4 executable at step 1, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "c2bb18e9-c6b3-447b-b4b5-608e0799df61", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: unstack block b3 from block b7. Is the action: unstack block b3 from block b7 executable at step 1, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 1 the following actions are planned to be performed: unstack block b3 from block b7. Is the action: unstack block b3 from block b7 executable at step 1, True or False?\n\n[ANSWER]:\n", "response": "False"}
{"id": "0c7ced20-ec27-46c1-b592-abfcced53c92", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: unstack block b4 from block b3. Is the action: unstack block b4 from block b3 executable at step 1, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 1 the following actions are planned to be performed: unstack block b4 from block b3. Is the action: unstack block b4 from block b3 executable at step 1, True or False?\n\n[ANSWER]:\n", "response": "False"}
{"id": "f0c705c3-4d06-4d9c-8f97-5da56fe84274", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "stack block b5 on block b4, put down block b5 and stack block b5 on block b6", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all executable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "stack b5 on b6"}
{"id": "bd2df1a9-d59d-4714-b62d-8833febd46f5", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "unstack block b1 from block b6, pickup block b2, stack block b6 on block b8, stack block b7 on block b3, stack block b1 on block b4, put down block b7, unstack block b8 from block b2, stack block b7 on block b6, stack block b5 on block b3, stack block b3 on block b2, unstack block b5 from block b6, unstack block b2 from block b7, pickup block b4, unstack block b6 from block b4, unstack block b3 from block b2, unstack block b3 from block b5, put down block b2, stack block b7 on block b8, unstack block b8 from block b7, unstack block b8 from block b5, unstack block b4 from block b7, unstack block b7 from block b6, unstack block b6 from block b2, stack block b3 on block b7, stack block b4 on block b5, stack block b8 on block b5, stack block b4 on block b3, unstack block b6 from block b1, stack block b2 on block b1, stack block b8 on block b4, stack block b2 on block b4, stack block b7 on block b5, unstack block b2 from block b6, stack block b6 on block b5, put down block b3, unstack block b2 from block b5, unstack block b4 from block b3, stack block b2 on block b8, stack block b7 on block b1, unstack block b4 from block b8, stack block b4 on block b8, unstack block b1 from block b8, unstack block b6 from block b7, unstack block b1 from block b3, unstack block b2 from block b1, unstack block b1 from block b7, stack block b8 on block b3, unstack block b8 from block b4, unstack block b7 from block b1, unstack block b5 from block b7, stack block b1 on block b6, unstack block b4 from block b1, stack block b3 on block b6, unstack block b6 from block b8, pickup block b1, stack block b2 on block b7, unstack block b6 from block b5, unstack block b7 from block b3, unstack block b4 from block b5, stack block b1 on block b7, unstack block b7 from block b2, unstack block b3 from block b4, pickup block b6, pickup block b5, stack block b8 on block b6, stack block b8 on block b2, stack block b5 on block b1, pickup block b3, unstack block b1 from block b5, unstack block b7 from block b4, stack block b5 on block b8, unstack block b5 from block b3, unstack block b8 from block b6, stack block b2 on block b3, stack block b4 on block b6, unstack block b4 from block b2, stack block b8 on block b1, unstack block b7 from block b8, stack block b2 on block b6, stack block b4 on block b1, stack block b6 on block b3, stack block b2 on block b5, stack block b6 on block b4, stack block b7 on block b4, stack block b1 on block b8, put down block b8, unstack block b6 from block b3, stack block b8 on block b7, unstack block b1 from block b2, stack block b1 on block b3, stack block b3 on block b8, stack block b3 on block b5, unstack block b1 from block b4, unstack block b2 from block b4, unstack block b8 from block b1, stack block b1 on block b2, unstack block b2 from block b3, stack block b7 on block b2, stack block b5 on block b2, unstack block b8 from block b3, unstack block b7 from block b5, unstack block b3 from block b6, unstack block b5 from block b4, stack block b5 on block b7, stack block b3 on block b1, unstack block b3 from block b8, unstack block b5 from block b8, pickup block b7, unstack block b2 from block b8, put down block b6, stack block b1 on block b5, stack block b6 on block b7, unstack block b3 from block b1, stack block b3 on block b4, unstack block b4 from block b6, pickup block b8, stack block b6 on block b1, put down block b4, unstack block b5 from block b1, unstack block b3 from block b7, unstack block b5 from block b2, stack block b4 on block b7, put down block b1, stack block b4 on block b2 and stack block b6 on block b2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "Put down block b5, Put down block b4"}
{"id": "9eadef40-6f9e-4a65-9285-73e5c6d6585a", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "put down block b8"}
{"id": "e92a625d-2044-404b-ae61-37feaaf6da2b", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: stack block b6 on block b5 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "stack block b6 on block b5", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: stack block b6 on block b5 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "None"}
{"id": "a6dad14d-c94e-4466-8c45-6d5bb97f7556", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: stack block b7 on block b8 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "stack block b7 on block b8", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: stack block b7 on block b8 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "Stack block b3 on block b5"}
{"id": "5dc68ae3-1bf8-4d54-b2c2-ea088cbe7f12", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, stack block b3 on block b7, put down block b4 and unstack block b8 from block b2. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, stack block b3 on block b7, put down block b4 and unstack block b8 from block b2. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "739a7538-58e0-4647-b60b-bd261443f778", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "bbd6bb3b-6231-4690-9307-b7fb5329de81", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, stack block b3 on block b5 and unstack block b8 from block b2. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, stack block b3 on block b5 and unstack block b8 from block b2. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "fa7a4dd5-dcc1-4b6c-8518-9af824e3a6d3", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2. Is the action: stack block b5 on block b6 executable at step 2, True or False?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 5 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2. Is the action: stack block b5 on block b6 executable at step 2, True or False?\n\n[ANSWER]:\n", "response": "No, at Step 2, here is the parse:\n\n```\nblock b5 is clear, block b6 is on block b2, block b8 is on block b4, block b4 is on block b8, block b2 is on block b5, block b4 is on top of block B 4 , block B 6 is on block B 2 , block B 5 is on block B 4, block B 3 is on block B 2 , block B 3 is on top of block B 4 , block B 2 is on block B 4 ,\n\nAt step2:\naction: unstack block B 5 from block 0 0 block B 4\naction: put down block B 5 on the table\nAction: put down block B 5 on the table\n\n```\n\nTake the following actions to determine if we can perform the planations in the case of step 2:\n\n```\nPut action the list order: Put the block B N on top of block 0 0\n Put the 0 0 block B 2 on the table\n Action:put down block B 0 on the table\n\nAction: Put down block B 0 on the table\nAction:Put action put out 0 0 0 0 block B 2 on top of block B 8\nPut actionPut put put put put block  put put put put block B 8 on top of block B 0 0 0\nAction Put put put put put put Put put put put put put putPut action put put put Put Put put block block block B block B put Put put put Put put put put put put put put Put Put Put put Put Put put put pet put put put put put put put put Put pos put put put put put put put pos put put put put pos put pos pospos put pos put part put put put pos po put pos part put pos pospos pos pos pos pos put po part part part part Part Part P Put pos pos put p put part part part put pit pat pat Put put put put put put Put part part put part put pos pos put put pos Pos pos Pos pos pos part part Put pot pos pot put pos put it Part Put pos pos part Part part put pos pos pospos put pos pos pos put part parte s put pos Part part pat part pos pos pos\nput pos pos pos put pos pos pos post post part part put pos part post part put pos pos pos part put pos pos pos po pos pos pos pos pos pos put put out o o put put post part put pos pos pos part put pos part post pot part part Part put pos Pos pos post part put Pospos pos pos Put pos Pos part part put put pos pos pos part post Part part pat part part part put put parte part pos pos pos Pos pos park part put pos part post Part put pos pos part post part pot pos pos pos part put pat pat Part part put pospos pos put\n\npos pos pos pos pos put po pos pos os part pos pos pos Part part part Part parts part pos pos pos pos pos pos po pos pos po pos pos Part put put put put put put Part put pos pos Pos pos Pos pospos par part put part part part part put par part put pos pos pos par par part put put part put pos Part put pos pospos pos pos pos pos pos pos pos pos pos pos pos pos pos pos pos Part put pos PosPos Pos pos Pos Part part put pos pos pos put pos pos pos pos pos pos put pos pos pos pos pos pos pos pos pos pos pos pos pos po pos put put put part put pos put pos pos put pos pos pos part part put pos Pos pos Pos post pos part part put pos pos pos part post put pos pos pos part parts pos Pos pos part put po po put pot pat part part put po pos pos put put put put put put put pos Pos post Part part Part put pos put pos pos pos pos pos pos Pos post put part put pos Pos pos Pos post part put pos Pos pos Pos Pos pos Part part part part part put put put put put put put put part put pos pos Pos Pos pos part put pos pos post Part put pos pos pos pos pos pos pos pos put put put put put pos Put put put pos put pos part put pos pos pos par put put pos pos pos pos Pos Part put pos pos pos pos pos pos put put put put parte put put parts put pos pos pos put pos pos pos post part par part pos pos pos pos pos pos pos pos pos Pos part put pos po part put pos pos Pos part put pos Part put pos pos po pos pos pos part parts part pos pos pos parts parts parts Part part put pos pos pos pos put put put put parts put pos pos pos pos pos pos posPos parts parts put pos put par pos pos pos pos pos pos Pos pos pos pos pos part part put po pos pos Pos Part put pos put po po part part put po pos pos put po put pos pos pos pa parte put pos pos pos pos pos parts parts parts put pos put pos pos part  put part part parts part part\n```\nput put put put put put parts put pos put pos put pot parts put put pos pospos pos pos pos put part put par parts part parts parts parts put pos put pos pos pos part put pos par put par put put part put pos parts parts parts put put pos pos Pos put part put pos put pos pos pos put parts put parts parts parts put put pos parts parts part pos pop part part put put parts put parts parts put put pos Pos pos parts put parts parts put put parts pos pos pos pos pos Part put put parts pos part put pos pos pos pos pos parts part parts part points put pos put put parts put put par put parts part Part put put Part pos pos parts put put parts parts part put pos pos pos pos put part pa put put put put put put parts parts part put pos pos pos pos Pos pos pos parts put parts put put part part parts Part part put put part put put put parts put put parts pos Pos pos put parts pos pos Pos pos parts parts parts put put put parts pos pos parts put pos part put pos pos pos pos pos part put pos pos pos parts put parts put pos pos pos part parts parts parts parts parts Pos pos parts pos pos pos pos Pos post parts parts parts put put put put put put put put parts put pos pos pos part put pos put put put put Put put put put put put put put parts parts parts parts parts parts Part part parts pos pos pos pos po pop put pat part part part part Part put pospos parts parts pos pos pos pop Part put part put pos parts pop put put put put parts part put pospos pos pos Pos pos parts put part put pos pos parts put put put parts parts parts Part Part parts parts put pos put parts part Part parts put put pos po po parts parts parts put put part put partspart part part t parts put pos pos pos put\n```\n\nAction: put down Part 6 on top of Part 5\n\nAction:Put action Put pos po parts pos pos pot pat put put put put put put put put put put put put putpart put pos pospos pos parts partspart parts parts put parts pos po pos pos pos pos put part parts Part part pos pos pos pos put put put parto pos pos pos pos parts part part part put po put part pos pos pos pos parts part pos poss pos pos pos Pos pos pos pos posts part put pos pos pos pos pos pos pos pos pos pos po put par parts Part parti parts pos parts parts parts put pos put pos pos pos pos port parts parts parts part parts part parts parts put par parts part parts put pos pos pos pos pos pos Pos parts parts pos put parts pos parts parts part put pos pos Pos pos parts parts put parts put pos po put partPart parts put put parts pos pos pos parts parts parts put pos pos po parts part put parts pos pos pos\nput pos pos pos pos pos parts put parts pos Pos Part Part put parts pos pos part parts part par parts pos put put parts part pos part partpart partpart part parts put pos pos pos pos parts parts parts Part parts put pos put put put parte put pos pos pos pos pos parts parts parts part par pos pos pos pos pos pos pos pos parts parts parts pos put put put put put put parts pos Pos part part put pos pos pos pos pos pos pos pos pos pos pos pos pos pos pos pos put part pos Pos Part Part part put pos part parts Part part pos pos pos pos pos pos poss parts parts pos put put part parts parts parts parts put pos pos pos pos parts parts parts parts put part part put pos pos pos pos pos pos pos put put parte put pos pos pos Pos parts parts put pos part parts pos parts parts parts parts put pos part part part part part put pos parts put put parts pos pos\n put part Part part part parts pos put put put parts pos part pos pos pos pos parts parts parts put part parts Pos pos parts part pos pos pos Pos pos parts parts put Part Part parts part put part pos pos part parts put pos points pos part pos pos Pos po Part parts put put part pos parts parts pos put part part parts put put parts parts part parts part put pos po pop parts part Pos Part put pos part part parts part parts Part partpart put pos pos post put part pos pos pos parts put part parts put put Part put part pos part part parts parts put Part part pos part put pos parts parts pos put put Part part put pos part part put parts parts put part part parte part parts put part parts parts part part put parts parts Pos parts part pos pos pos parts put put put Part par part pos parts parts parts parts pos Pa part parts parts put part part put put park part part put put pos pos pos pos put put parts parts pos pos pos pos pos Pos Pos put put parte part parts put put put put parts pos put pos parts parts put parts pos pos pos parts part put parts Part Part part part put parte put part pos pos pos put parts"}
{"id": "19a9640d-043a-4085-af68-52a807e15975", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2. Is the action: unstack block b5 from block b4 executable at step 1, True or False?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 5 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2. Is the action: unstack block b5 from block b4 executable at step 1, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "dd1b9227-f5eb-470b-8a86-17566ebad3e6", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b6 from block b3. Is the action: unstack block b6 from block b3 executable at step 5, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 5 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b6 from block b3. Is the action: unstack block b6 from block b3 executable at step 5, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "16a8ce13-b9fb-4a8d-837d-559b1e1829fd", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "stack block b8 on block b5, stack block b8 on block b4, stack block b8 on block b2 and put down block b8", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all executable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "Stack block b1 on b8, Stack block b4 on b6, Stack block b6 on b3, Stack block b7 on b6, Put down block b5"}
{"id": "2df6e8f0-4f1c-468c-8647-d84ba32936b4", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "unstack block b1 from block b6, pickup block b2, stack block b6 on block b8, stack block b7 on block b3, stack block b1 on block b4, put down block b7, unstack block b8 from block b2, stack block b7 on block b6, stack block b5 on block b3, stack block b3 on block b2, unstack block b5 from block b6, unstack block b2 from block b7, pickup block b4, unstack block b6 from block b4, unstack block b3 from block b2, unstack block b3 from block b5, put down block b2, stack block b7 on block b8, unstack block b8 from block b7, unstack block b8 from block b5, unstack block b4 from block b7, unstack block b7 from block b6, unstack block b6 from block b2, stack block b3 on block b7, stack block b4 on block b5, stack block b4 on block b3, unstack block b6 from block b1, stack block b2 on block b1, stack block b2 on block b4, stack block b7 on block b5, unstack block b2 from block b6, stack block b6 on block b5, put down block b3, stack block b5 on block b4, unstack block b2 from block b5, unstack block b4 from block b3, stack block b2 on block b8, stack block b7 on block b1, unstack block b4 from block b8, stack block b4 on block b8, unstack block b1 from block b8, unstack block b6 from block b7, unstack block b1 from block b3, unstack block b2 from block b1, unstack block b1 from block b7, stack block b8 on block b3, unstack block b8 from block b4, unstack block b7 from block b1, unstack block b5 from block b7, stack block b1 on block b6, unstack block b4 from block b1, stack block b3 on block b6, unstack block b6 from block b8, pickup block b1, stack block b2 on block b7, unstack block b6 from block b5, unstack block b7 from block b3, unstack block b4 from block b5, stack block b1 on block b7, unstack block b7 from block b2, unstack block b3 from block b4, pickup block b6, pickup block b5, stack block b8 on block b6, stack block b5 on block b1, pickup block b3, unstack block b1 from block b5, unstack block b7 from block b4, stack block b5 on block b8, unstack block b5 from block b3, unstack block b8 from block b6, stack block b2 on block b3, stack block b4 on block b6, unstack block b4 from block b2, stack block b8 on block b1, unstack block b7 from block b8, stack block b2 on block b6, stack block b4 on block b1, stack block b6 on block b3, stack block b2 on block b5, stack block b6 on block b4, stack block b7 on block b4, stack block b1 on block b8, unstack block b6 from block b3, stack block b8 on block b7, unstack block b1 from block b2, stack block b1 on block b3, stack block b3 on block b8, stack block b3 on block b5, unstack block b1 from block b4, unstack block b2 from block b4, unstack block b8 from block b1, stack block b1 on block b2, unstack block b2 from block b3, stack block b7 on block b2, stack block b5 on block b2, unstack block b8 from block b3, put down block b5, unstack block b7 from block b5, unstack block b3 from block b6, unstack block b5 from block b4, stack block b5 on block b7, stack block b3 on block b1, unstack block b3 from block b8, unstack block b5 from block b8, pickup block b7, unstack block b2 from block b8, put down block b6, stack block b1 on block b5, stack block b6 on block b7, unstack block b3 from block b1, stack block b3 on block b4, unstack block b4 from block b6, pickup block b8, stack block b6 on block b1, stack block b5 on block b6, put down block b4, unstack block b5 from block b1, unstack block b3 from block b7, unstack block b5 from block b2, stack block b4 on block b7, put down block b1, stack block b4 on block b2 and stack block b6 on block b2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Pick up block b5\n- Pick up block b2\n- Pick up block b3\n- Put down block b6\n- Put down block b8\n- Stack block b2 on block b6\n- Stack block b8 on block b5\n- Stack block b6 on block b3\n- Stack block b3 on block b2\n- Unstack block b8 from block b4\n- Unstack block b5 from block b2"}
{"id": "fea49343-82c8-49c3-ac9a-b2238bda59b4", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "Put down block b4"}
{"id": "44b29c3a-139d-43c5-93c5-b08b6c7f7041", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: stack block b1 on block b7, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "stack block b1 on block b7", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: stack block b1 on block b7, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "Put down block b4"}
{"id": "77b9582c-7282-490a-88af-87b70f5f2267", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, stack block b8 on block b3 and unstack block b8 from block b2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "stack block b8 on block b3", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, stack block b8 on block b3 and unstack block b8 from block b2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "None"}
{"id": "ce5ed718-a5fa-462e-90b3-3a8fff0e265b", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "96ad7882-4f0c-43c3-b2e8-b7fa91832ef1", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, unstack block b4 from block b1, pickup block b1 and stack block b1 on block b8. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, unstack block b4 from block b1, pickup block b1 and stack block b1 on block b8. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "c804d2ba-7a35-4dee-b835-9ed3bebb9994", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: put down block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: put down block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "1fb9606d-608b-4130-99b5-b13d70fcd1f8", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8. Is the action: unstack block b2 from block b1 executable at step 7, True or False?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 10 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8. Is the action: unstack block b2 from block b1 executable at step 7, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "e5ee3764-52d2-49c5-8c57-5d265234b38c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8. Is the action: stack block b1 on block b8 executable at step 10, True or False?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 10 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8. Is the action: stack block b1 on block b8 executable at step 10, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "e3360787-8050-4160-a459-db1027cae2e2", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8. Is the action: stack block b5 on block b6 executable at step 2, True or False?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 10 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8. Is the action: stack block b5 on block b6 executable at step 2, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "a29126c6-423b-411d-87f1-e880d9bdb597", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "pickup block b2, unstack block b5 from block b6, pickup block b4 and unstack block b1 from block b8", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all executable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "\u2022\tUnstack block b7 from block b3\n\u2022\tStack block b7 on block b6"}
{"id": "761ebf82-59d2-43ca-a12a-984f11425044", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "unstack block b1 from block b6, stack block b6 on block b8, stack block b7 on block b3, stack block b1 on block b4, put down block b7, unstack block b8 from block b2, stack block b7 on block b6, stack block b5 on block b3, stack block b3 on block b2, unstack block b2 from block b7, unstack block b6 from block b4, unstack block b3 from block b2, unstack block b3 from block b5, put down block b2, stack block b7 on block b8, unstack block b8 from block b7, unstack block b8 from block b5, unstack block b4 from block b7, unstack block b7 from block b6, unstack block b6 from block b2, stack block b3 on block b7, stack block b4 on block b5, stack block b8 on block b5, stack block b4 on block b3, unstack block b6 from block b1, stack block b2 on block b1, stack block b8 on block b4, stack block b2 on block b4, stack block b7 on block b5, unstack block b2 from block b6, stack block b6 on block b5, put down block b3, stack block b5 on block b4, unstack block b2 from block b5, unstack block b4 from block b3, stack block b2 on block b8, stack block b7 on block b1, unstack block b4 from block b8, stack block b4 on block b8, unstack block b6 from block b7, unstack block b1 from block b3, unstack block b2 from block b1, unstack block b1 from block b7, stack block b8 on block b3, unstack block b8 from block b4, unstack block b7 from block b1, unstack block b5 from block b7, stack block b1 on block b6, unstack block b4 from block b1, stack block b3 on block b6, unstack block b6 from block b8, pickup block b1, stack block b2 on block b7, unstack block b6 from block b5, unstack block b7 from block b3, unstack block b4 from block b5, stack block b1 on block b7, unstack block b7 from block b2, unstack block b3 from block b4, pickup block b6, pickup block b5, stack block b8 on block b6, stack block b8 on block b2, stack block b5 on block b1, pickup block b3, unstack block b1 from block b5, unstack block b7 from block b4, stack block b5 on block b8, unstack block b5 from block b3, unstack block b8 from block b6, stack block b2 on block b3, stack block b4 on block b6, unstack block b4 from block b2, stack block b8 on block b1, unstack block b7 from block b8, stack block b2 on block b6, stack block b4 on block b1, stack block b6 on block b3, stack block b2 on block b5, stack block b6 on block b4, stack block b7 on block b4, stack block b1 on block b8, put down block b8, unstack block b6 from block b3, stack block b8 on block b7, unstack block b1 from block b2, stack block b1 on block b3, stack block b3 on block b8, stack block b3 on block b5, unstack block b1 from block b4, unstack block b2 from block b4, unstack block b8 from block b1, stack block b1 on block b2, unstack block b2 from block b3, stack block b7 on block b2, stack block b5 on block b2, unstack block b8 from block b3, put down block b5, unstack block b7 from block b5, unstack block b3 from block b6, unstack block b5 from block b4, stack block b5 on block b7, stack block b3 on block b1, unstack block b3 from block b8, unstack block b5 from block b8, pickup block b7, unstack block b2 from block b8, put down block b6, stack block b1 on block b5, stack block b6 on block b7, unstack block b3 from block b1, stack block b3 on block b4, unstack block b4 from block b6, pickup block b8, stack block b6 on block b1, stack block b5 on block b6, put down block b4, unstack block b5 from block b1, unstack block b3 from block b7, unstack block b5 from block b2, stack block b4 on block b7, put down block b1, stack block b4 on block b2 and stack block b6 on block b2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "- unstack block b4 from block b8\n- stack block b5 on block b4\n- unstack block b5 from block b6\n- put down block b5\n- unstack block b8 from block b2\n- unstack block b8 from block b1\n- unstack block b5 from block b6\n- unstack block b3 from block b7\n- stack block b6 on block b7\n- stack block b7 on block b3\n- stack block b3 on block b2\n- put down block b4\n- unstack block b1 from block b8\n- put down block b1"}
{"id": "104a777c-3cfc-4534-947d-565184c91065", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "put down block b4"}
{"id": "d5008966-f3a8-4ddf-83a1-1352c23c4ee0", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b3 on block b6 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "stack block b3 on block b6", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b3 on block b6 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "unstack block b5 from block b4"}
{"id": "85125b04-2cfd-44d5-91e1-6b5faa8cadbb", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, stack block b4 on block b1 and stack block b1 on block b8 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "stack block b4 on block b1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, stack block b4 on block b1 and stack block b1 on block b8 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "None"}
{"id": "c0cdc145-cb23-42a6-a2a2-3833ad372e3e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, pickup block b7, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, pickup block b7, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "0c342293-e098-4bce-b2ee-ee202dde5570", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "6ee8d04f-cc14-4a8a-979a-634e636b5b55", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, stack block b5 on block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, stack block b5 on block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "72dc7029-f9f6-4613-bef8-4d443afb54f1", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, unstack block b8 from block b2, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3. Is the action: unstack block b8 from block b2 executable at step 6, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 15 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, unstack block b8 from block b2, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3. Is the action: unstack block b8 from block b2 executable at step 6, True or False?\n\n[ANSWER]:\n", "response": "False"}
{"id": "6c7f5331-5284-4510-aab5-59687a834f3e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3. Is the action: unstack block b8 from block b2 executable at step 5, True or False?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 15 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3. Is the action: unstack block b8 from block b2 executable at step 5, True or False?\n\n[ANSWER]:\n", "response": "False"}
{"id": "b14dab98-c269-47e1-92e9-236fef50257b", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3. Is the action: unstack block b6 from block b7 executable at step 13, True or False?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 15 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3. Is the action: unstack block b6 from block b7 executable at step 13, True or False?\n\n[ANSWER]:\n", "response": "False"}
{"id": "ae634a93-0643-4837-aca2-0e7d5b26df55", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "stack block b7 on block b3, put down block b7, stack block b7 on block b6, stack block b7 on block b5 and stack block b7 on block b1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all executable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "pickup block b3, unstack block b2 from block b8, unstack block b8 from block b1, put down block b8, stack block b2 on block b1, pickup block b4, unstack block b5 from block b4"}
{"id": "a7c1fe2e-852e-47d4-b2b0-b2089a30dc51", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "unstack block b1 from block b6, pickup block b2, stack block b6 on block b8, stack block b1 on block b4, unstack block b8 from block b2, stack block b5 on block b3, stack block b3 on block b2, unstack block b5 from block b6, unstack block b2 from block b7, pickup block b4, unstack block b6 from block b4, unstack block b3 from block b2, unstack block b3 from block b5, put down block b2, stack block b7 on block b8, unstack block b8 from block b7, unstack block b8 from block b5, unstack block b4 from block b7, unstack block b7 from block b6, unstack block b6 from block b2, stack block b3 on block b7, stack block b4 on block b5, stack block b8 on block b5, stack block b4 on block b3, unstack block b6 from block b1, stack block b2 on block b1, stack block b8 on block b4, stack block b2 on block b4, unstack block b2 from block b6, stack block b6 on block b5, put down block b3, stack block b5 on block b4, unstack block b2 from block b5, unstack block b4 from block b3, stack block b2 on block b8, unstack block b4 from block b8, stack block b4 on block b8, unstack block b1 from block b8, unstack block b6 from block b7, unstack block b1 from block b3, unstack block b2 from block b1, unstack block b1 from block b7, stack block b8 on block b3, unstack block b8 from block b4, unstack block b7 from block b1, unstack block b5 from block b7, stack block b1 on block b6, unstack block b4 from block b1, stack block b3 on block b6, unstack block b6 from block b8, pickup block b1, stack block b2 on block b7, unstack block b6 from block b5, unstack block b7 from block b3, unstack block b4 from block b5, stack block b1 on block b7, unstack block b7 from block b2, unstack block b3 from block b4, pickup block b6, pickup block b5, stack block b8 on block b6, stack block b8 on block b2, stack block b5 on block b1, pickup block b3, unstack block b1 from block b5, unstack block b7 from block b4, stack block b5 on block b8, unstack block b5 from block b3, unstack block b8 from block b6, stack block b2 on block b3, stack block b4 on block b6, unstack block b4 from block b2, stack block b8 on block b1, unstack block b7 from block b8, stack block b2 on block b6, stack block b4 on block b1, stack block b6 on block b3, stack block b2 on block b5, stack block b6 on block b4, stack block b7 on block b4, stack block b1 on block b8, put down block b8, unstack block b6 from block b3, stack block b8 on block b7, unstack block b1 from block b2, stack block b1 on block b3, stack block b3 on block b8, stack block b3 on block b5, unstack block b1 from block b4, unstack block b2 from block b4, unstack block b8 from block b1, stack block b1 on block b2, unstack block b2 from block b3, stack block b7 on block b2, stack block b5 on block b2, unstack block b8 from block b3, put down block b5, unstack block b7 from block b5, unstack block b3 from block b6, unstack block b5 from block b4, stack block b5 on block b7, stack block b3 on block b1, unstack block b3 from block b8, unstack block b5 from block b8, pickup block b7, unstack block b2 from block b8, put down block b6, stack block b1 on block b5, stack block b6 on block b7, unstack block b3 from block b1, stack block b3 on block b4, unstack block b4 from block b6, pickup block b8, stack block b6 on block b1, stack block b5 on block b6, put down block b4, unstack block b5 from block b1, unstack block b3 from block b7, unstack block b5 from block b2, stack block b4 on block b7, put down block b1, stack block b4 on block b2 and stack block b6 on block b2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "- Stack block b7 on block b6\n- Put down block b3\n- Unstack block b1 from block b8\n- Unstack block b4 from block b5\n- Stack block b5 on block b8\n- Stack block b6 on block b7\n- Stack block b7 on block b1\n- Stack block b2 on block b3"}
{"id": "97762c84-873f-43ef-b518-41869365c5a9", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "Put down block b8"}
{"id": "89b62f72-03dc-4264-92e1-b2d17c06c3d5", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, stack block b8 on block b5, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "stack block b8 on block b5", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, stack block b8 on block b5, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "Put down block b8"}
{"id": "f03dd93c-bc55-48ba-b1ed-d0fd75ed620b", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b6 on block b2, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "stack block b6 on block b2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b6 on block b2, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "Unstack block b5 from block b6"}
{"id": "1ebdc685-732d-4ef3-9626-2432584ac2cf", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, stack block b1 on block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, stack block b1 on block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "False"}
{"id": "e0ddee72-09c9-453d-bc13-0d5b547bc5ff", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, stack block b1 on block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, stack block b1 on block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "9c52cbe4-2155-41a9-bf77-8b28718261c1", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, stack block b8 on block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, stack block b8 on block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3. Is it possible to execute it, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "07fd4fbd-53ad-4b0d-ba48-0d3ba3cac0ef", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3. Is the action: stack block b5 on block b4 executable at step 12, True or False?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 19 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3. Is the action: stack block b5 on block b4 executable at step 12, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "6db6fa40-b184-4146-94e7-291fb297fe12", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: unstack block b7 from block b2, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3. Is the action: unstack block b7 from block b2 executable at step 1, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 19 the following actions are planned to be performed: unstack block b7 from block b2, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3. Is the action: unstack block b7 from block b2 executable at step 1, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "811b797b-f3c8-4663-a3a2-4cfcb62c0716", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3. Is the action: unstack block b6 from block b2 executable at step 17, True or False?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, for steps 1 through 19 the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3. Is the action: unstack block b6 from block b2 executable at step 17, True or False?\n\n[ANSWER]:\n", "response": "True"}
{"id": "e5f00d84-cbc5-40ce-9f81-a8e906e82e44", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "stack block b3 on block b2, put down block b3, stack block b3 on block b6, stack block b3 on block b5 and stack block b3 on block b1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all executable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "pick up block b1, pick up block b2, pick up block b3, pick up block b4, pick up block b5, pick up block b6, pick up block b7, pick up block b8, stack block b1 on block b8, stack block b2 on block b1, stack block b3 on block b2, stack block b4 on block b8, stack block b5 on block b6, stack block b6 on block b7, stack block b7 on block b3, unstack block b1 from block b8, unstack block b2 from block b1, unstack block b3 from block b2, unstack block b4 from block b8, unstack block b5 from block b6, unstack block b6 from block b7, unstack block b7 from block b3"}
{"id": "e6ac1f5d-842f-4201-aee4-138beb8b4a49", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "unstack block b1 from block b6, pickup block b2, stack block b6 on block b8, stack block b7 on block b3, stack block b1 on block b4, put down block b7, unstack block b8 from block b2, stack block b7 on block b6, stack block b5 on block b3, unstack block b5 from block b6, unstack block b2 from block b7, pickup block b4, unstack block b6 from block b4, unstack block b3 from block b2, unstack block b3 from block b5, put down block b2, stack block b7 on block b8, unstack block b8 from block b7, unstack block b8 from block b5, unstack block b4 from block b7, unstack block b7 from block b6, unstack block b6 from block b2, stack block b3 on block b7, stack block b4 on block b5, stack block b8 on block b5, stack block b4 on block b3, unstack block b6 from block b1, stack block b2 on block b1, stack block b8 on block b4, stack block b2 on block b4, stack block b7 on block b5, unstack block b2 from block b6, stack block b6 on block b5, stack block b5 on block b4, unstack block b2 from block b5, unstack block b4 from block b3, stack block b2 on block b8, stack block b7 on block b1, unstack block b4 from block b8, stack block b4 on block b8, unstack block b1 from block b8, unstack block b6 from block b7, unstack block b1 from block b3, unstack block b2 from block b1, unstack block b1 from block b7, stack block b8 on block b3, unstack block b8 from block b4, unstack block b7 from block b1, unstack block b5 from block b7, stack block b1 on block b6, unstack block b4 from block b1, unstack block b6 from block b8, pickup block b1, stack block b2 on block b7, unstack block b6 from block b5, unstack block b7 from block b3, unstack block b4 from block b5, stack block b1 on block b7, unstack block b7 from block b2, unstack block b3 from block b4, pickup block b6, pickup block b5, stack block b8 on block b6, stack block b8 on block b2, stack block b5 on block b1, pickup block b3, unstack block b1 from block b5, unstack block b7 from block b4, stack block b5 on block b8, unstack block b5 from block b3, unstack block b8 from block b6, stack block b2 on block b3, stack block b4 on block b6, unstack block b4 from block b2, stack block b8 on block b1, unstack block b7 from block b8, stack block b2 on block b6, stack block b4 on block b1, stack block b6 on block b3, stack block b2 on block b5, stack block b6 on block b4, stack block b7 on block b4, stack block b1 on block b8, put down block b8, unstack block b6 from block b3, stack block b8 on block b7, unstack block b1 from block b2, stack block b1 on block b3, stack block b3 on block b8, unstack block b1 from block b4, unstack block b2 from block b4, unstack block b8 from block b1, stack block b1 on block b2, unstack block b2 from block b3, stack block b7 on block b2, stack block b5 on block b2, unstack block b8 from block b3, put down block b5, unstack block b7 from block b5, unstack block b3 from block b6, unstack block b5 from block b4, stack block b5 on block b7, unstack block b3 from block b8, unstack block b5 from block b8, pickup block b7, unstack block b2 from block b8, put down block b6, stack block b1 on block b5, stack block b6 on block b7, unstack block b3 from block b1, stack block b3 on block b4, unstack block b4 from block b6, pickup block b8, stack block b6 on block b1, stack block b5 on block b6, put down block b4, unstack block b5 from block b1, unstack block b3 from block b7, unstack block b5 from block b2, stack block b4 on block b7, put down block b1, stack block b4 on block b2 and stack block b6 on block b2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.\n\n[ANSWER]:\n", "response": "Pickup block b5, Pickup block b6, Pickup block b8, Pickup block b4, Pickup block b7, Pickup block b2, Pickup block b1, Pickup block b3, Stack block b5 on block b5, Stack block b5 on block b8, Stack block b5 on block b7, Stack block b4 on block b5, Stack block b4 on block b8, Stack block b4 on block b7, Stack block b6 on block b5, Stack block b6 on block b8, Stack block b6 on block b7, Stack block b8 on block b5, Stack block b8 on block b4, Stack block b8 on block b7, Stack block b2 on block b5, Stack block b2 on block b8, Stack block b2 on block b7, Stack block b1 on block b5, Stack block b1 on block b8, Stack block b1 on block b7, Stack block b3 on block b5, Stack block b3 on block b8, Stack block b3 on block b7, Unstack block b5 from block b4, Unstack block b5 from block b6, Unstack block b4 from block b8, Unstack block b8 from block b2, Unstack block b2 from block b1, Unstack block b1 from block b3, Unstack block b3 from block b7, Unstack block b6 from block b2, Unstack block b6 from block b7, Put down block b5, Put down block b4, Put down block b8, Put down block b2, Put down block b1, Put down block b3"}
{"id": "3985adf2-c471-48ae-98fb-f3d9acdd1929", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "put down block b4"}
{"id": "3f097838-e525-45de-a7db-5212e0349c20", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b6 on block b8, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "stack block b6 on block b8", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b6 on block b8, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "Pickup block b3"}
{"id": "958cf2e3-080c-4c82-95ec-5bcb4c96a83e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b8 on block b4, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "stack block b8 on block b4", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b8 on block b4, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.\n\n[ANSWER]:\n", "response": "None"}
{"id": "622c6333-2b37-46fa-ab2c-ebe67b84a550", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, if stack block b5 on block b6, would it be True or False that hand is empty, block b5 is clear and block b5 is on block b6?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, if stack block b5 on block b6, would it be True or False that hand is empty, block b5 is clear and block b5 is on block b6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "03066c01-ec1b-44e5-86bf-f60d4dc52b7e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, if stack block b5 on block b6, would it be True or False that block b5 is clear, block b5 is on block b6 and hand is empty?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, if stack block b5 on block b6, would it be True or False that block b5 is clear, block b5 is on block b6 and hand is empty?\n\n[ANSWER]:\n", "response": "True"}
{"id": "301c9cfb-e862-4985-af46-26c9248ac220", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, if stack block b5 on block b6, would it be True or False that block b6 is on block b7, hand is empty and block b3 is clear?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, if stack block b5 on block b6, would it be True or False that block b6 is on block b7, hand is empty and block b3 is clear?\n\n[ANSWER]:\n", "response": "False"}
{"id": "6e549fef-bed8-4402-8cb0-e58c751ea7a4", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, if stack block b5 on block b6, would it be True or False that block b1 is not on block b5 and block b5 is not being held?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, if stack block b5 on block b6, would it be True or False that block b1 is not on block b5 and block b5 is not being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "6d72da2b-a287-444d-96c3-b3b5ef7b6dc0", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, if stack block b5 on block b6, would it be True or False that block b6 is not clear and block b5 is not being held?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, if stack block b5 on block b6, would it be True or False that block b6 is not clear and block b5 is not being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "d9d70a70-5904-4ab9-93b3-c050c09b99ad", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, if stack block b5 on block b6, would it be True or False that block b5 is not being held and block b1 is not on the table?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, if stack block b5 on block b6, would it be True or False that block b5 is not being held and block b1 is not on the table?\n\n[ANSWER]:\n", "response": "block c2 is clear, block c6 is on the table, block c7 is on the second, block c9 is on the table, block c1 is not clear, block c7 is on top of the second, it does attempt to unstack the first block onto the second, in so doing, causes the first block to be not clear and to be on top of the second block. Block c2 is not on the second, block c5 is on block c7, block c2 is on the table, block c7 is on block c5, block c2 is on the table, block c4 is on the table, it does attempt to stack the first block on top of the second, in so doing, causes the first block to not be on top of the second, the first block not to be on top of the second and the first block on top of the second. Block c4 is on top of the second, block c1 is not on block c7, block c7 is not on block c3, block c7 is on top of the third, block c5 is not on block c2, block c3 is not on the second, block c3 is clear, the first block not on the table, block c3 is not on the second, block c6 is not on the second, the first and the second are the first and the second, block c2 is on the table, block c2 is not on the second, block c3 is on top of the second, the first and the second are the first and the second, the first and the second are the first and the second, the first and the second, block c1 is not being held, the first and the second, the first and the second, the first and the second, block c1 is being held, the first and the second, the first and the second, the first and the second, the first and the second, the first and the block on the table is to be the first and the first and the second, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first. The first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first, the first and the first"}
{"id": "e34ecd04-ea34-46c9-9a84-e8833e5c0127", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, if stack block b5 on block b6, what would be all of the valid properties of the state? Write None if there are none.", "answer": "block b4 is clear, block b5 is clear, block b5 is on block b6, block b8 is on block b2, block b4 is on block b8, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, if stack block b5 on block b6, what would be all of the valid properties of the state? Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b5 is on block b6\n- block b6 is not clear\n- hand is empty"}
{"id": "e809b477-391f-4079-a99d-5bf77a736f6e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, if stack block b5 on block b6, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b4 is not on the table, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b2 is not clear, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b8 is not on the table, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b6 is not on block b2, block b8 is not on block b6, block b7 is not on block b4 and block b5 is not being held", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, if stack block b5 on block b6, what would be all of the valid properties of the state that involve negations? Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b5 is not clear\n- block b5 is not on the table\n- block b5 is not on block b4\n- hand is not empty"}
{"id": "f83aa4b9-478c-48d9-b7a4-d26fc55b2a5e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, if put down block b8, would it be True or False that block b8 is clear, block b8 is on the table and hand is empty?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, if put down block b8, would it be True or False that block b8 is clear, block b8 is on the table and hand is empty?\n\n[ANSWER]:\n", "response": "False"}
{"id": "c2520358-6211-4411-844f-0739861d3198", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, if put down block b8, would it be True or False that block b8 is on the table, block b8 is clear and hand is empty?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, if put down block b8, would it be True or False that block b8 is on the table, block b8 is clear and hand is empty?\n\n[ANSWER]:\n", "response": "True"}
{"id": "e8c4772a-588b-47e0-ae89-a961878d9a74", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, if put down block b8, would it be True or False that block b2 is on block b1, block b8 is clear and block b7 is on block b3?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, if put down block b8, would it be True or False that block b2 is on block b1, block b8 is clear and block b7 is on block b3?\n\n[ANSWER]:\n", "response": "False"}
{"id": "94b07be9-1e11-48ab-b7e6-505bebe438ac", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, if put down block b8, would it be True or False that block b7 is not on the table?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, if put down block b8, would it be True or False that block b7 is not on the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "81eb8ed8-08e3-4d37-93c6-bd0e7918546b", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, if put down block b8, would it be True or False that block b8 is not being held?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, if put down block b8, would it be True or False that block b8 is not being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "763920f8-dc44-4527-9475-3871a9688184", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, if put down block b8, would it be True or False that block b8 is not on block b6?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, if put down block b8, would it be True or False that block b8 is not on block b6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "e107b6d3-b399-4052-ab7a-bb9e62419caa", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, if put down block b8, what would be all of the valid properties of the state? Write None if there are none.", "answer": "block b4 is clear, block b8 is clear, block b5 is clear, block b5 is on block b6, block b2 is clear, block b8 is on the table, block b4 is on the table, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, if put down block b8, what would be all of the valid properties of the state? Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b8 is clear\n- block b8 is on the table\n- hand is empty\n- block b1 is on the table\n- block b2 is on block b1\n- block b3 is on the table\n- block b5 is on block b6\n- block b7 is on block b3\n- block b4 is clear"}
{"id": "41971dc1-5473-447b-88ac-fb66fa875611", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, if put down block b8, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b2 is not on block b3, block b5 is not on block b7, block b2 is not on the table, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b1 is not on block b2, block b6 is not being held, block b8 is not on block b1, block b8 is not on block b4, block b1 is not on block b8, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b1 is not clear, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b8, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b3 is not being held, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6, block b7 is not on block b4 and block b5 is not being held", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, if put down block b8, what would be all of the valid properties of the state that involve negations? Write None if there are none.\n\n[ANSWER]:\n", "response": "- Hand is not holding block b8.\n- Block b4 is not on block b8.\n- Block b8 is not on block b2.\n- Block b6 is not clear.\n- Block b8 is not clear.\n- Block b8 is not on the table."}
{"id": "f7fa8f97-28f5-4b89-ad78-03bebaaec1df", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, if unstack block b5 from block b6, would it be True or False that block b5 is being held and block b7 is on the table?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, if unstack block b5 from block b6, would it be True or False that block b5 is being held and block b7 is on the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "01f0a546-7a7a-4fa4-8147-2d00500c0d5c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, if unstack block b5 from block b6, would it be True or False that block b5 is being held and block b2 is clear?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, if unstack block b5 from block b6, would it be True or False that block b5 is being held and block b2 is clear?\n\n[ANSWER]:\n", "response": "False"}
{"id": "3e297819-28d9-4b81-8806-0836d36b837e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, if unstack block b5 from block b6, would it be True or False that block b6 is clear and block b5 is being held?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, if unstack block b5 from block b6, would it be True or False that block b6 is clear and block b5 is being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "09d21a24-6233-4083-94c4-4657e9fe2c04", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, if unstack block b5 from block b6, would it be True or False that hand is not empty, block b1 is not clear and block b5 is not on block b6?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, if unstack block b5 from block b6, would it be True or False that hand is not empty, block b1 is not clear and block b5 is not on block b6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "21fccfa5-012d-4671-94a4-56183ebac528", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, if unstack block b5 from block b6, would it be True or False that block b5 is not on block b6, block b1 is not on block b3 and hand is not empty?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, if unstack block b5 from block b6, would it be True or False that block b5 is not on block b6, block b1 is not on block b3 and hand is not empty?\n\n[ANSWER]:\n", "response": "True"}
{"id": "213d7806-9c8f-47c8-9018-aee38591dd43", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, if unstack block b5 from block b6, would it be True or False that block b5 is not on block b6, hand is not empty and block b5 is not clear?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, if unstack block b5 from block b6, would it be True or False that block b5 is not on block b6, hand is not empty and block b5 is not clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "4c66cf86-c187-45a1-9823-c840412a3160", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, if unstack block b5 from block b6, what would be all of the valid properties of the state? Write None if there are none.", "answer": "block b4 is clear, block b1 is on block b8, block b6 is clear, block b2 is clear, block b8 is on the table, block b4 is on the table, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, block b1 is clear, block b2 is on the table and block b5 is being held", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, if unstack block b5 from block b6, what would be all of the valid properties of the state? Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b1 is not on the table\n- block b1 is not clear\n- block b1 is being held\n- block b2 is on the table\n- block b2 is not clear\n- block b3 is on the table\n- block b3 is not clear\n- block b4 is on the table\n- block b4 is clear\n- block b5 is on block b6\n- block b5 is clear\n- block b6 is on block b7\n- block b6 is not clear\n- block b7 is on block b3\n- block b7 is not clear\n- block b8 is on the table\n- block b8 is clear\n- hand is not empty"}
{"id": "5316604e-e79a-4fe1-b2d1-8f638e28d309", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, if unstack block b5 from block b6, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b5 is not on block b4, block b2 is not on block b6, block b3 is not clear, block b4 is not on block b5, block b7 is not on the table, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, hand is not empty, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b5 is not clear, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6 and block b7 is not on block b4", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, if unstack block b5 from block b6, what would be all of the valid properties of the state that involve negations? Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b5 is not clear\n- block b5 is not on block b6\n- block b6 is not clear\n- hand is not empty"}
{"id": "e3ae5ec5-f0d8-496c-a337-7f6c5a8e4d65", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, if put down block b7, would it be True or False that block b7 is clear, block b4 is on the table and hand is empty?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, if put down block b7, would it be True or False that block b7 is clear, block b4 is on the table and hand is empty?\n\n[ANSWER]:\n", "response": "False"}
{"id": "3256d8b7-07f3-4736-b8d5-5aaeb6680e9c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, if put down block b7, would it be True or False that block b7 is clear, block b7 is on the table and hand is empty?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, if put down block b7, would it be True or False that block b7 is clear, block b7 is on the table and hand is empty?\n\n[ANSWER]:\n", "response": "True"}
{"id": "2a8a8da2-2d38-4b48-9f7c-509ce1c75d1c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, if put down block b7, would it be True or False that block b3 is on block b6, block b7 is clear and block b5 is clear?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, if put down block b7, would it be True or False that block b3 is on block b6, block b7 is clear and block b5 is clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "54509b45-f1f0-4cef-b384-373d5c85d9ba", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, if put down block b7, would it be True or False that block b5 is not on block b3?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, if put down block b7, would it be True or False that block b5 is not on block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "98e3ae65-fa91-4d2f-9a3b-3c8b7f219a6f", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, if put down block b7, would it be True or False that block b7 is not being held?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, if put down block b7, would it be True or False that block b7 is not being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "05665a3c-98db-417a-a726-89498206f88d", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, if put down block b7, would it be True or False that block b4 is not on block b3?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, if put down block b7, would it be True or False that block b4 is not on block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "54018b01-ef55-46f6-9bd5-d275e68dbc2a", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, if put down block b7, what would be all of the valid properties of the state? Write None if there are none.", "answer": "block b6 is on block b2, block b5 is clear, block b1 is on block b8, block b7 is on the table, block b6 is clear, block b8 is on the table, block b5 is on block b4, block b4 is on the table, block b3 is clear, block b3 is on the table, block b7 is clear, block b1 is clear, hand is empty and block b2 is on the table", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, if put down block b7, what would be all of the valid properties of the state? Write None if there are none.\n\n[ANSWER]:\n", "response": "- Block b1 is clear and on block b8\n- Block b2 is clear and on block b6\n- Block b3 is on the table\n- Block b4 is clear and on block b5\n- Block b5 is on top of block b4\n- Block b6 is on top of block b2\n- Block b7 is being held\n- Block b8 is clear"}
{"id": "ceec274a-16fc-4e6b-9d5a-5144feb53336", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, if put down block b7, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b2 is not on block b4, block b2 is not being held, block b1 is not on the table, block b4 is not on block b6, block b2 is not on block b6, block b4 is not on block b5, block b4 is not clear, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b4 is not being held, block b7 is not on block b3, block b2 is not clear, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on block b8, block b4 is not on block b1, block b3 is not on block b6, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6, block b6 is not on block b7, block b7 is not on block b4 and block b5 is not being held", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, if put down block b7, what would be all of the valid properties of the state that involve negations? Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b7 is not clear\n- block b7 is not on the table\n- hand is not empty"}
{"id": "b3b73d91-d182-4b77-880d-fda9f4b032a9", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b6, would it be True or False that hand is empty, block b3 is on block b6 and block b3 is clear?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b6, would it be True or False that hand is empty, block b3 is on block b6 and block b3 is clear?\n\n[ANSWER]:\n", "response": "False"}
{"id": "db6dcd1a-9c8e-44f3-bf6b-605605c765a9", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b6, would it be True or False that block b3 is on block b6, block b6 is on block b7 and block b5 is on block b4?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b6, would it be True or False that block b3 is on block b6, block b6 is on block b7 and block b5 is on block b4?\n\n[ANSWER]:\n", "response": "False"}
{"id": "48558101-e9d2-4bcb-83e3-1f5ab2dc27c2", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b6, would it be True or False that block b3 is clear, hand is empty and block b3 is on block b6?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b6, would it be True or False that block b3 is clear, hand is empty and block b3 is on block b6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "89342f9d-7507-4dc0-be53-a4d2e81f10df", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b6, would it be True or False that block b6 is not clear and block b1 is not on block b2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b6, would it be True or False that block b6 is not clear and block b1 is not on block b2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "aab5a10b-6c1f-4849-b469-0fbee11c3056", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b6, would it be True or False that block b6 is not clear and block b8 is not on block b7?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b6, would it be True or False that block b6 is not clear and block b8 is not on block b7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "09ccc643-1d3b-4a94-9bb2-ff12513dea8d", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b6, would it be True or False that block b5 is not on block b8 and block b6 is not clear?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b6, would it be True or False that block b5 is not on block b8 and block b6 is not clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "fee0bf2a-b7af-4c4b-a1c6-99e40b785b5e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b6, what would be all of the valid properties of the state? Write None if there are none.", "answer": "block b5 is clear, block b1 is on block b8, block b7 is on the table, block b3 is on block b6, block b2 is clear, block b8 is on the table, block b5 is on block b4, block b4 is on the table, block b3 is clear, block b6 is on block b7, block b1 is clear, hand is empty and block b2 is on the table", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b6, what would be all of the valid properties of the state? Write None if there are none.\n\n[ANSWER]:\n", "response": "- hand is not empty\n- block b1 is not clear\n- block b1 is on top of block b8\n- block b2 is clear\n- block b2 is on the table\n- block b3 is being held\n- block b4 is clear\n- block b4 is on the table\n- block b5 is clear\n- block b5 is on top of block b4\n- block b6 is not clear\n- block b6 is on top of block b7\n- block b7 is clear\n- block b7 is on the table\n- block b8 is clear\n- block b8 is on the table"}
{"id": "aa166ca2-70ba-422e-aafd-1e435d79f740", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b6, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "block b8 is not on block b5, block b5 is not on block b3, block b2 is not on block b5, block b5 is not on block b1, block b8 is not clear, block b2 is not on block b3, block b5 is not on block b7, block b6 is not on block b8, block b6 is not on the table, block b6 is not clear, block b2 is not being held, block b2 is not on block b4, block b4 is not on block b6, block b1 is not on the table, block b2 is not on block b6, block b4 is not on block b5, block b4 is not clear, block b7 is not on block b5, block b8 is not on block b3, block b8 is not on block b1, block b6 is not being held, block b8 is not on block b4, block b1 is not on block b2, block b7 is not on block b2, block b3 is not on block b4, block b1 is not on block b3, block b7 is not on block b1, block b7 is not on block b8, block b2 is not on block b7, block b2 is not on block b1, block b5 is not on block b8, block b1 is not on block b7, block b5 is not on block b2, block b8 is not being held, block b6 is not on block b3, block b2 is not on block b8, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b4, block b6 is not on block b2, block b4 is not being held, block b7 is not on block b3, block b1 is not on block b5, block b7 is not being held, block b1 is not being held, block b3 is not on block b1, block b6 is not on block b5, block b4 is not on block b3, block b3 is not on block b2, block b3 is not on the table, block b3 is not on block b8, block b4 is not on block b1, block b5 is not on block b6, block b6 is not on block b1, block b4 is not on block b7, block b3 is not on block b7, block b4 is not on block b8, block b3 is not being held, block b7 is not on block b6, block b1 is not on block b4, block b8 is not on block b7, block b7 is not clear, block b4 is not on block b2, block b1 is not on block b6, block b8 is not on block b2, block b8 is not on block b6, block b7 is not on block b4 and block b5 is not being held", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, if stack block b3 on block b6, what would be all of the valid properties of the state that involve negations? Write None if there are none.\n\n[ANSWER]:\n", "response": "- block b2 is not clear\n- block b4 is not clear\n- block b6 is not on block b2\n- block b7 is not clear\n- block b8 is not on block b2"}
{"id": "e57a1f73-4823-45c7-a191-807724a755a2", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is the number of objects equal to 8? True or False", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is the number of objects equal to 8? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "54be3ecd-3b25-46bd-a895-47938c91e2be", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is the number of objects equal to 7? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is the number of objects equal to 7? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "a77bcfc0-01b9-4d04-a57b-d51b37ea27bc", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is the number of objects equal to 6? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is the number of objects equal to 6? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "06b4eb11-6fee-482f-9816-7f7faed6fd74", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is the number of executable actions equal to 3? True or False", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is the number of executable actions equal to 3? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "232bfe7d-b44d-427f-95d7-664d44f757e3", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is the number of executable actions equal to 2? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is the number of executable actions equal to 2? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "abf87527-e07d-4745-9337-ef7a14d0acba", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is the number of executable actions equal to 4? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is the number of executable actions equal to 4? True or False\n\n[ANSWER]:\n", "response": "False"}
{"id": "bcea556a-805b-42c4-806d-8820f20f9220", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 125? True or False", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 125? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "9a5db95e-2dc0-43c7-bd5f-51f062087dfd", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 124? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 124? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "4e10d148-6322-427f-92c5-b2030251104a", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 122? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 122? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "a6c8cb79-758b-427a-8b13-8ba0b3ab16ff", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 0?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 0?\n\n[ANSWER]:\n", "response": "False"}
{"id": "b3f2f797-69bd-4484-b186-6008b2ab2840", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 1?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 1?\n\n[ANSWER]:\n", "response": "True"}
{"id": "cc6869c8-26c8-410b-a9c0-9e8d323b0cd6", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "483aec83-8081-4e14-ba4d-a5d673f113d7", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "8", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "6"}
{"id": "d8ea016f-df10-4e91-b927-b4820740700b", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "10", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "4.0"}
{"id": "921ea660-47a7-4a82-99e4-1d4eb8cd259e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "71", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "1.0"}
{"id": "a4a69aec-70c2-458b-980b-74744c8e9938", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "3", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "6.0"}
{"id": "8645bf96-566b-4b6e-8ffa-e477b3d8ef77", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_11", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "125", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "0.2"}
{"id": "429d55b3-d108-4217-aff9-47580a821508", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b4 from block b8 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b4 from block b8 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "1.0"}
{"id": "7e7e8cd3-4ca9-4e40-8ee3-12c25053b1c2", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: stack block b2 on block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: stack block b2 on block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "585d4ae3-267c-4e98-8591-c3cb0bf20679", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: stack block b7 on block b6 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: stack block b7 on block b6 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "2be5a7f1-54cd-4a49-af30-ff48e904c24e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is the number of objects equal to 8? True or False", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is the number of objects equal to 8? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "0cbc5e2b-7620-4731-9395-aeeae651da8b", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is the number of objects equal to 9? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is the number of objects equal to 9? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "33a74ea5-6b32-4dce-9ad8-6e34b1d16fcb", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is the number of objects equal to 10? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is the number of objects equal to 10? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "76607e51-e331-4146-9875-bfd15d95eb03", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is the number of executable actions equal to 4? True or False", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is the number of executable actions equal to 4? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "ab4e0b36-0f36-4211-b702-fa5aa42ba5cb", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is the number of executable actions equal to 3? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is the number of executable actions equal to 3? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "a21cfa96-2864-46d2-9a85-709f8001d5a6", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is the number of executable actions equal to 5? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is the number of executable actions equal to 5? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "77cbfee0-142e-4d05-ab4e-85ca96c9631d", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is the number of inexecutable actions equal to 140? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is the number of inexecutable actions equal to 140? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "46cc8165-41bf-4796-a143-b114254e8acb", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is the number of inexecutable actions equal to 113? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is the number of inexecutable actions equal to 113? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "073849ae-1d48-442d-95d7-116ef4b3b6e3", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is the number of inexecutable actions equal to 147? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, is the number of inexecutable actions equal to 147? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "fe4b088d-dddd-44ba-812a-d1a6b23f9f67", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 3?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "ecf646a5-5bd9-49b9-a265-41af960b9293", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 7?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "33a7f92d-0ee4-48aa-a4fd-64548a6d861f", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 5?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 5?\n\n[ANSWER]:\n", "response": "True"}
{"id": "727f7149-28c5-415e-b493-2cb460ecd3eb", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "8", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "10"}
{"id": "90d05a4b-8a81-4a31-bc10-a2118def0498", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "11", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "0.1"}
{"id": "7bb83d76-f389-4dd9-8047-07bb6ba05b87", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "70", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "0.5"}
{"id": "60df71e8-6605-46d4-bbb2-2776e2be3766", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "4", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "0.5"}
{"id": "4b3d31be-40f9-45f2-a3e3-f23c55edac74", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_11", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "124", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "None"}
{"id": "86009f05-fa60-4941-ab00-62c09fa85996", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and stack block b7 on block b2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "4", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and stack block b7 on block b2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "2.0"}
{"id": "289e5d2f-ff37-4eb3-a8e8-5691e8fa77c8", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: stack block b2 on block b1, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: stack block b2 on block b1, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "ebc67236-2994-43fc-9cdd-cccb9d0049d5", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b6 on block b2, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b6 on block b2, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "4.0"}
{"id": "d35e5804-03a8-42e0-b909-973601df573d", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is the number of objects equal to 8? True or False", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is the number of objects equal to 8? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "e0cb8996-acd4-4c40-aa7c-54b365081b19", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is the number of objects equal to 6? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is the number of objects equal to 6? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "f4a606c0-2b0b-4f02-97b3-5aa03b3f21e0", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is the number of objects equal to 7? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is the number of objects equal to 7? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "1e2bf982-32f6-4a1e-976f-46e5d89fae12", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is the number of executable actions equal to 3? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is the number of executable actions equal to 3? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "702c9f93-884a-42e5-a8f8-22a3f24227b1", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is the number of executable actions equal to 4? True or False", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is the number of executable actions equal to 4? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "b9be9607-9586-4685-be47-a02652aa7083", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is the number of executable actions equal to 5? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is the number of executable actions equal to 5? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "be916da8-8a2e-4c52-bb2d-a39c004c87c1", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is the number of inexecutable actions equal to 124? True or False", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is the number of inexecutable actions equal to 124? True or False\n\n[ANSWER]:\n", "response": "False"}
{"id": "f5475a3f-761b-4346-98b7-4b00099671e4", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is the number of inexecutable actions equal to 146? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is the number of inexecutable actions equal to 146? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "e1c8e376-020c-4719-9bf2-c7ed8a6ffa70", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is the number of inexecutable actions equal to 110? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, is the number of inexecutable actions equal to 110? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "73169d7a-8305-4055-99cb-985aee98f8b4", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 7?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "95ccfcdc-ca7d-4f58-81ec-3c76b66ac89c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 12?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 12?\n\n[ANSWER]:\n", "response": "False"}
{"id": "cdf192a5-9205-447f-b5ee-ee8130160717", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 10?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 10?\n\n[ANSWER]:\n", "response": "True"}
{"id": "dea14e77-e90b-43b6-b4f2-1926f6df8bcb", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "8", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "12"}
{"id": "2208ab88-18dc-4b02-8f05-4a3fd8c61d93", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "13", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "2.0"}
{"id": "80fce790-2c9d-404a-a620-81a34faca27e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "68", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "0.4"}
{"id": "4916a894-9911-4c6d-b3fe-495052b559f1", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "4", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "1.0"}
{"id": "34c6958b-54f5-44ba-b39f-91b42ad8fa95", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_11", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "124", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "None"}
{"id": "4fca6127-96ac-47ce-8cf5-44e85f46160a", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b1 on block b4, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b1 on block b4, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "10"}
{"id": "e42ba456-b274-4bfc-8377-7cc8eff62ba4", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, unstack block b2 from block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "5", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, unstack block b2 from block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "None"}
{"id": "2804df58-15fa-46fe-a755-d06c00b04c02", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, unstack block b8 from block b6, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, unstack block b8 from block b6, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "RECITATION"}
{"id": "40deb28b-a62e-4a35-9bdc-f811bfce747b", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is the number of objects equal to 8? True or False", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is the number of objects equal to 8? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "666a954c-11e8-4db9-88eb-63afccc37ea1", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is the number of objects equal to 10? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is the number of objects equal to 10? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "b8df026c-edea-4ae5-98ee-2169d1c0212c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is the number of objects equal to 9? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is the number of objects equal to 9? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "35329991-c639-4975-a525-3591b53f207d", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is the number of executable actions equal to 4? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is the number of executable actions equal to 4? True or False\n\n[ANSWER]:\n", "response": "False"}
{"id": "5f5e4d12-dc53-45a7-9587-9820d32bf530", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is the number of executable actions equal to 5? True or False", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is the number of executable actions equal to 5? True or False\n\n[ANSWER]:\n", "response": "False"}
{"id": "9b1e1dd9-f08d-4126-ba4c-fbc1a6f056d2", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is the number of executable actions equal to 3? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is the number of executable actions equal to 3? True or False\n\n[ANSWER]:\n", "response": "False"}
{"id": "993337bf-9b75-4a64-8603-354fc1130064", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is the number of inexecutable actions equal to 101? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is the number of inexecutable actions equal to 101? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "2a01a2f7-c6b5-4c4f-a33f-7b619e104c35", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is the number of inexecutable actions equal to 123? True or False", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is the number of inexecutable actions equal to 123? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "2dc54959-cc21-4764-90c9-fd194fcb668c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is the number of inexecutable actions equal to 107? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, is the number of inexecutable actions equal to 107? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "14c0a7cc-3941-4452-96e3-f000f929e7c5", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 16?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 16?\n\n[ANSWER]:\n", "response": "True"}
{"id": "cb6028ca-de38-4eb8-b00f-3091734bd2d1", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?\n\n[ANSWER]:\n", "response": "True"}
{"id": "067f17f6-22c8-417b-9103-7de683699987", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 12?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 12?\n\n[ANSWER]:\n", "response": "True"}
{"id": "09be9e49-f09c-4272-8e84-40d427b0ad09", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "8", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "13.0"}
{"id": "004899d8-4d3c-40a2-851a-13d58149b980", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "12", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "11.0"}
{"id": "e8f3b722-a08d-4466-865d-5b7fe7334746", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "69", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "1.1"}
{"id": "b45821ca-1f37-4171-a924-84c738b762a1", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "5", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "4.6"}
{"id": "7ebecd64-b888-4173-bb36-228d8a420158", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_11", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "123", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "0.5"}
{"id": "da6d2236-c6d5-4fbb-86e2-26aee60159b4", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, unstack block b7 from block b3, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "9", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, unstack block b7 from block b3, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "15"}
{"id": "d3a22a91-10f9-423f-8901-2cab89135ae6", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, put down block b7, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "6", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, put down block b7, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "13"}
{"id": "c51397e7-cf3a-464f-ab56-c6e10440d644", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: stack block b4 on block b3, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: stack block b4 on block b3, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "13"}
{"id": "46bfd46e-91eb-4b66-a848-14289e24b0fa", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is the number of objects equal to 6? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is the number of objects equal to 6? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "1618309e-ed73-4c93-b1bf-df0b36f0be42", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is the number of objects equal to 8? True or False", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is the number of objects equal to 8? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "9bd77237-eb7e-4960-be43-0f79b5fd006a", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is the number of objects equal to 9? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is the number of objects equal to 9? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "ea73aa66-942b-4527-9a77-53c5e87a7c55", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is the number of executable actions equal to 6? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is the number of executable actions equal to 6? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "718a4393-8b50-4105-bbaf-788ce8b1475f", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is the number of executable actions equal to 4? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is the number of executable actions equal to 4? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "a19ed922-31f7-42bd-b3e0-9060076bed52", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is the number of executable actions equal to 5? True or False", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is the number of executable actions equal to 5? True or False\n\n[ANSWER]:\n", "response": "False"}
{"id": "d040ab43-76f1-4d55-b7f3-9a1078431659", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is the number of inexecutable actions equal to 136? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is the number of inexecutable actions equal to 136? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "fcaf6309-11fa-4f12-a8e6-357083f33292", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is the number of inexecutable actions equal to 123? True or False", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is the number of inexecutable actions equal to 123? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "27d18499-7847-4c02-867c-cf5e020fef6e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is the number of inexecutable actions equal to 126? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, is the number of inexecutable actions equal to 126? True or False\n\n[ANSWER]:\n", "response": "True"}
{"id": "a59e5539-6904-4a9b-b1d3-e54a3f12e52a", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?\n\n[ANSWER]:\n", "response": "True"}
{"id": "df70cb99-8c26-427d-8d96-a791598d760a", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 19?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 19?\n\n[ANSWER]:\n", "response": "True"}
{"id": "8ff82a7d-32de-4c75-bd37-7bf9e4df1c1f", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 17?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 17?\n\n[ANSWER]:\n", "response": "True"}
{"id": "753287ca-1c06-41ea-a121-20c7126ac55e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "8", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "11"}
{"id": "b7a1b6b0-ded7-4be4-9522-fab416a559d6", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "12", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "11.0"}
{"id": "87a29616-9b60-4613-9189-a5da12a72c97", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "69", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "4.0"}
{"id": "da2deefb-cda1-4279-b7a8-3f2cb00a15d1", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "5", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "3.0"}
{"id": "e1a342f5-4e49-4252-9906-cd6a3154a9dc", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_11", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "123", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "0.25"}
{"id": "da85d519-cf39-4244-bf60-c92df8e77046", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, put down block b5, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, put down block b5, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "15"}
{"id": "784afadb-c759-46ee-87d3-84c9e3cd0008", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b7 from block b5, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "10", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b7 from block b5, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "16"}
{"id": "bf8dd8f4-4309-4fec-bfda-c3e283360d97", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_13", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, unstack block b6 from block b1 and pickup block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "17", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, unstack block b6 from block b1 and pickup block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.\n\n[ANSWER]:\n", "response": "14.0"}
{"id": "aa0b0720-4d6c-4c5e-ab05-46573692478c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "1812bdd2-3c3d-4395-a328-776b82e87e69", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b6 is part of the state?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b6 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "0fd2ac0f-6096-4c11-b1e6-6f3ad055d91b", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b3 is part of the state?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b3 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "3f4a739d-f6e2-44e5-87e7-26cf5838c792", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is under block b7?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is under block b7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "e8f77c73-34bc-4efd-8d16-4edf9a56ac95", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is on block b8?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is on block b8?\n\n[ANSWER]:\n", "response": "False"}
{"id": "6820bbd4-9508-4c84-93f2-9812a6713a80", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is under the table?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is under the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "4b49c496-bd7a-4586-bc5c-5f5c0473a0ee", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is not under block b1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is not under block b1?\n\n[ANSWER]:\n", "response": "True"}
{"id": "6727711b-432e-424e-a4ae-e20539d2ea6a", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is not being held?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is not being held?\n\n[ANSWER]:\n", "response": "True"}
{"id": "480d9723-0631-4ce4-9187-eb5eb43387a5", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is not on block b4?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is not on block b4?\n\n[ANSWER]:\n", "response": "True"}
{"id": "77c4438c-db38-4f1b-bb93-c61febdcb7c7", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, stack block b5 on block b4, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, stack block b5 on block b4, is defined?\n\n[ANSWER]:\n", "response": "True"}
{"id": "ae6aa855-a69a-459e-aa88-4a26eba93bd2", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b5 from block b4, is defined?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b5 from block b4, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "83a439a9-738f-4fd4-9c55-f6e981cb0b95", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b5 from block b6, is defined?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b5 from block b6, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "bb04d8ac-d124-4161-9e45-1b16103a8b20", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, pickup block b2, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, pickup block b2, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "442ddc87-a846-4b2f-be4e-339ab6f6d88f", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b8 from block b1, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b8 from block b1, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "5c447ba1-1f49-48cb-b4d5-ee26e402c747", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, load block b4 from block b6, is defined?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, load block b4 from block b6, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "e5c894eb-27b1-48ce-ac8e-88afcf070462", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b8, b2, b5, b3, b4 and b1, is not defined? Write None if all are defined.", "answer": "b5", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b8, b2, b5, b3, b4 and b1, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "b4"}
{"id": "1cd5331e-11c2-407c-adae-5bc007021df5", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b2 and b6, is not defined? Write None if all are defined.", "answer": "b2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b2 and b6, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "b6"}
{"id": "343b3d29-f483-4b29-9f20-79a23dca2a05", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b9 and b1, is not defined? Write None if all are defined.", "answer": "b9", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b9 and b1, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "b9"}
{"id": "ab99629f-9e2d-404b-865f-4b275628bc79", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is on the table, block b4 is on block b8, block b6 is clear, block b2 is on block b1, block b4 is clear, block b1 is on the table and block b5 is being held, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is on the table, block b4 is on block b8, block b6 is clear, block b2 is on block b1, block b4 is clear, block b1 is on the table and block b5 is being held, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b3 is on the table"}
{"id": "84677d89-6af7-49a0-bee4-092a883780cc", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is on the table, block b6 is clear, block b6 is under block b7 and block b2 is on block b1, is not defined? Write None if all are defined.", "answer": "block b6 is under block b7", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is on the table, block b6 is clear, block b6 is under block b7 and block b2 is on block b1, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b2 is on block b1"}
{"id": "802a93db-e83e-44cf-8ecf-768189b44a41", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b4 is under block b8, block b5 is being held and block b7 is on block b3, is not defined? Write None if all are defined.", "answer": "block b4 is under block b8", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b4 is under block b8, block b5 is being held and block b7 is on block b3, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b4 is under block b8"}
{"id": "a50e1418-63f8-467e-a777-97e2672576ea", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b1 is not on block b2, hand is not empty, block b6 is not being held, block b6 is not on the table, block b4 is not on block b1, block b6 is not on block b1, block b4 is not on block b5, block b8 is not on block b3, block b3 is not under block b6, block b6 is not on block b4, block b7 is not on block b4, block b3 is not on block b1, block b6 is not on block b3, block b2 is not on block b4, block b7 is not on block b2, block b8 is not on block b5 and block b7 is not on block b8, is not defined? Write None if all are defined.", "answer": "block b3 is not under block b6", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b1 is not on block b2, hand is not empty, block b6 is not being held, block b6 is not on the table, block b4 is not on block b1, block b6 is not on block b1, block b4 is not on block b5, block b8 is not on block b3, block b3 is not under block b6, block b6 is not on block b4, block b7 is not on block b4, block b3 is not on block b1, block b6 is not on block b3, block b2 is not on block b4, block b7 is not on block b2, block b8 is not on block b5 and block b7 is not on block b8, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b6 is not being held"}
{"id": "24c13b8c-99b3-46f1-8b5a-cc2b0b45c814", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b4 is not on block b5, block b5 is not on block b3, block b1 is not on block b7, block b8 is not on block b1, block b3 is not on block b5, block b7 is not on block b2, block b3 is not on block b6, block b6 is not on block b4, block b1 is not on block b4, block b3 is not clear, block b5 is not on block b8, block b8 is not clear, block b5 is not on block b2, block b1 is not on block b2, block b7 is not being held, block b3 is not on block b4, block b6 is not on block b5, block b3 is not being held, block b7 is not on block b8, block b4 is not on block b1, block b4 is not on block b3, block b1 is not on block b8, block b1 is not on block b3, block b8 is not on block b3, block b5 is not on block b1, block b1 is not clear, block b7 is not on block b1, block b3 is not on block b1, block b5 is not on block b4, block b5 is not clear, block b8 is not being thrown, block b6 is not on block b2, block b2 is not on block b3, block b4 is not being held and block b5 is not on block b7, is not defined? Write None if all are defined.", "answer": "block b8 is not being thrown", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b4 is not on block b5, block b5 is not on block b3, block b1 is not on block b7, block b8 is not on block b1, block b3 is not on block b5, block b7 is not on block b2, block b3 is not on block b6, block b6 is not on block b4, block b1 is not on block b4, block b3 is not clear, block b5 is not on block b8, block b8 is not clear, block b5 is not on block b2, block b1 is not on block b2, block b7 is not being held, block b3 is not on block b4, block b6 is not on block b5, block b3 is not being held, block b7 is not on block b8, block b4 is not on block b1, block b4 is not on block b3, block b1 is not on block b8, block b1 is not on block b3, block b8 is not on block b3, block b5 is not on block b1, block b1 is not clear, block b7 is not on block b1, block b3 is not on block b1, block b5 is not on block b4, block b5 is not clear, block b8 is not being thrown, block b6 is not on block b2, block b2 is not on block b3, block b4 is not being held and block b5 is not on block b7, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "281fe6bb-a63c-43b4-8300-a691d2f17ded", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b7 is not on block b5, block b2 is not on block b4, block b6 is not on block b2, block b6 is not on block b5, block b8 is not being held, block b4 is not on block b1, block b1 is not on block b7, block b6 is not on block b1, block b5 is not on the table, block b1 is not being held, block b1 is not on block b8, block b3 is not on block b1, block b3 is not being held, block b4 is not being held, block b6 is not on block b4, block b5 is not on block b2, block b4 is not on block b5, block b1 is not clear, block b6 is not on block b8, block b7 is not on block b2, block b3 is not on block b8, block b1 is not on block b6, block b2 is not on block b8, block b2 is not on the table, block b2 is not on block b6, block b2 is not on block b3, block b3 is not clear, block b4 is not on the table, block b5 is not on block b1, block b8 is not on block b6, block b7 is not on the table, block b6 is not being held, block b5 is not on block b8, block b8 is not on block b4, block b8 is not on the table, block b6 is not on block b3, block b7 is not on block b6 and block b3 is not on block b4, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b7 is not on block b5, block b2 is not on block b4, block b6 is not on block b2, block b6 is not on block b5, block b8 is not being held, block b4 is not on block b1, block b1 is not on block b7, block b6 is not on block b1, block b5 is not on the table, block b1 is not being held, block b1 is not on block b8, block b3 is not on block b1, block b3 is not being held, block b4 is not being held, block b6 is not on block b4, block b5 is not on block b2, block b4 is not on block b5, block b1 is not clear, block b6 is not on block b8, block b7 is not on block b2, block b3 is not on block b8, block b1 is not on block b6, block b2 is not on block b8, block b2 is not on the table, block b2 is not on block b6, block b2 is not on block b3, block b3 is not clear, block b4 is not on the table, block b5 is not on block b1, block b8 is not on block b6, block b7 is not on the table, block b6 is not being held, block b5 is not on block b8, block b8 is not on block b4, block b8 is not on the table, block b6 is not on block b3, block b7 is not on block b6 and block b3 is not on block b4, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "8dc9076f-c5c2-4c15-b9f1-5a94b847f545", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "43af255d-e976-4825-a751-4319548b8d22", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: remove block b5 from block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "remove block b5 from block b4", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: remove block b5 from block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "1a6358e2-c2a0-43ee-815f-6372e04eeab2", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b4 is part of the state?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b4 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "d3c96690-5991-42a5-bd9b-debb14119e50", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b1 is part of the state?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b1 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "78014efb-9097-482a-8611-57fb73f46d06", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b9 is part of the state?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b9 is part of the state?\n\n[ANSWER]:\n", "response": "False"}
{"id": "bf2dcfc2-2e23-4560-ad8b-56c9c73cfe15", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is on block b7?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is on block b7?\n\n[ANSWER]:\n", "response": "False"}
{"id": "44f55083-e4d9-43e7-b3db-25352871fa45", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is clear?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is clear?\n\n[ANSWER]:\n", "response": "False"}
{"id": "16f75bf7-a7dd-4844-8701-13a1524aad4a", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is on the table?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is on the table?\n\n[ANSWER]:\n", "response": "True"}
{"id": "00568391-b3e3-4129-baf9-fa05d92029db", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not under block b6?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not under block b6?\n\n[ANSWER]:\n", "response": "False"}
{"id": "8203ad35-4306-4c61-ad0b-75205294640e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not under block b1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not under block b1?\n\n[ANSWER]:\n", "response": "True"}
{"id": "fbbba59e-4937-4140-b6c2-9ddea8251c2b", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not being thrown?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not being thrown?\n\n[ANSWER]:\n", "response": "True"}
{"id": "46b9f251-ebc4-4be0-8ea8-3c45ca9c3601", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b8 from block b2, is defined?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b8 from block b2, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "29005b65-f465-4102-9e93-2d597b66a3dc", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, stack block b8 on block b5, is defined?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, stack block b8 on block b5, is defined?\n\n[ANSWER]:\n", "response": "True"}
{"id": "5fe5f992-f889-42c8-a0ac-0829dc01e448", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b8 from block b5, is defined?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b8 from block b5, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "15f55a86-a017-4ec8-97e1-a72c834dc1d2", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b8 from block b2, is defined?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b8 from block b2, is defined?\n\n[ANSWER]:\n", "response": "True"}
{"id": "d05cbf69-6358-4b3d-98d8-107c46e1dc4e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, load block b3 from block b8, is defined?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, load block b3 from block b8, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "c722d790-cffc-42b2-80d2-6d2ea09c713c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b6 from block b4, is defined?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b6 from block b4, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "379d8fdf-2f8b-48d6-9d88-c4e76a866d48", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b6, b8 and b2, is not defined? Write None if all are defined.", "answer": "b6", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b6, b8 and b2, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "1bbe07aa-f2b3-46bb-a2f8-9791883baa63", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b3, b9, b6 and b7, is not defined? Write None if all are defined.", "answer": "b9", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b3, b9, b6 and b7, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "72fc0df9-a46a-4eb6-8cee-12e28ad3b8a8", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b6, b8, b2 and b4, is not defined? Write None if all are defined.", "answer": "b8", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b6, b8, b2 and b4, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "57a7c3ef-2e5c-4d15-b5d9-bde8f4b8124b", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b6 is under block b7, block b1 is on the table, block b4 is clear, block b3 is on the table, block b7 is on block b3, block b2 is clear, block b5 is clear and block b4 is on the table, is not defined? Write None if all are defined.", "answer": "block b6 is under block b7", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b6 is under block b7, block b1 is on the table, block b4 is clear, block b3 is on the table, block b7 is on block b3, block b2 is clear, block b5 is clear and block b4 is on the table, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b4 is on the table"}
{"id": "9853ef57-ef37-447a-9804-58f738651afa", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b2 is on block b1 and block b8 is being thrown, is not defined? Write None if all are defined.", "answer": "block b8 is being thrown", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b2 is on block b1 and block b8 is being thrown, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "Block b8 is being thrown"}
{"id": "ed040184-f425-4907-b7b9-cb945226605f", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b6 is on block b7, block b1 is on the table, block b5 is clear, block b7 is on block b3, block b2 is clear, block b3 is on the table, block b2 is on block b1, block b8 is being held and block b4 is lost, is not defined? Write None if all are defined.", "answer": "block b4 is lost", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b6 is on block b7, block b1 is on the table, block b5 is clear, block b7 is on block b3, block b2 is clear, block b3 is on the table, block b2 is on block b1, block b8 is being held and block b4 is lost, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b2 is on block b1"}
{"id": "d4ae4362-8cdd-48b2-81e1-cc3d2e0d1d6c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on the table, block b1 is not being thrown, block b3 is not on block b8, block b4 is not on block b3 and hand is not empty, is not defined? Write None if all are defined.", "answer": "block b1 is not being thrown", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on the table, block b1 is not being thrown, block b3 is not on block b8, block b4 is not on block b3 and hand is not empty, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b1 is not being thrown"}
{"id": "42fc1f11-e44d-4a5b-80ea-a215c5a81f41", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b7 is not lost, block b4 is not on block b2, block b3 is not on block b8, block b4 is not on block b5 and block b5 is not on the table, is not defined? Write None if all are defined.", "answer": "block b7 is not lost", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b7 is not lost, block b4 is not on block b2, block b3 is not on block b8, block b4 is not on block b5 and block b5 is not on the table, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b7 is not lost"}
{"id": "3170015b-42be-41a6-b48b-bb287a71d335", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b8 is not on block b3, block b3 is not on block b5, block b2 is not being held, block b2 is not on block b6, block b8 is not on block b1, block b4 is not on block b3, block b8 is not on the table, block b5 is not on block b8, block b2 is not on the table, block b7 is not being held, block b5 is not on block b2, block b3 is not on block b7, block b3 is not on block b6, block b5 is not on block b4, block b4 is not being held, block b1 is not on block b4, block b4 is not on block b1, hand is not empty, block b6 is not on block b3, block b1 is not on block b6, block b1 is not on block b7 and block b1 is not being held, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b8 is not on block b3, block b3 is not on block b5, block b2 is not being held, block b2 is not on block b6, block b8 is not on block b1, block b4 is not on block b3, block b8 is not on the table, block b5 is not on block b8, block b2 is not on the table, block b7 is not being held, block b5 is not on block b2, block b3 is not on block b7, block b3 is not on block b6, block b5 is not on block b4, block b4 is not being held, block b1 is not on block b4, block b4 is not on block b1, hand is not empty, block b6 is not on block b3, block b1 is not on block b6, block b1 is not on block b7 and block b1 is not being held, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b8 is not on block b2"}
{"id": "f993367e-447c-4549-b346-e30dc8af4576", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, lower block b4 and unstack block b8 from block b2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "lower block b4", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, lower block b4 and unstack block b8 from block b2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "Lower block b4"}
{"id": "b2e45fc6-249a-49a4-91b6-6f33fadc3476", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: remove block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "remove block b5 from block b4", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: remove block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "74c4fbb4-35ea-4fd2-a25f-d00bdd6f73fc", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, remove block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "remove block b4 from block b8", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, remove block b4 from block b8, put down block b4 and unstack block b8 from block b2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "4cce02c4-9915-4512-b9d3-04215887ad6d", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b9 is part of the state?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b9 is part of the state?\n\n[ANSWER]:\n", "response": "False"}
{"id": "711892d2-f436-4ea7-9de9-27f38fb956a4", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "e15257ab-a9de-4e10-9539-17e36bbf6bfe", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b5 is part of the state?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b5 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "071f2db9-c20f-4ee7-99ea-606fee17b2d2", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is lost?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is lost?\n\n[ANSWER]:\n", "response": "False"}
{"id": "bf5d5ff8-97aa-4c56-a230-c4e7c260d7cf", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is clear?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is clear?\n\n[ANSWER]:\n", "response": "False"}
{"id": "236fd858-4478-452f-927e-984be1d2a237", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b8 is on the table?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b8 is on the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "d6afd845-b953-4927-88a8-15f9da3f14aa", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is not under block b3?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is not under block b3?\n\n[ANSWER]:\n", "response": "True"}
{"id": "413f8bf6-3400-40ab-b298-74a07c960bc1", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is not on block b1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is not on block b1?\n\n[ANSWER]:\n", "response": "True"}
{"id": "f2708927-750e-4aae-be9f-b8864409132d", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is not under block b5?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is not under block b5?\n\n[ANSWER]:\n", "response": "True"}
{"id": "b3f204f0-4877-4a34-be7f-15360ff983a8", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, lift block b4, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, lift block b4, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "84caf453-39ae-44b6-bd40-3da305fd4819", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, pickup block b2, is defined?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, pickup block b2, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "2b4aa3cd-585e-44db-a7c6-6403ab8cc19b", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, remove block b1 from block b8, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, remove block b1 from block b8, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "4b089450-f8ae-4c6f-9d57-ee5ae8de16b5", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b7 from block b1, is defined?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b7 from block b1, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "c3944215-adb3-4550-8788-2538f9b63a9c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b4 from block b8, is defined?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b4 from block b8, is defined?\n\n[ANSWER]:\n", "response": "True"}
{"id": "ebf303e1-0615-400c-a7e5-9e17680e089a", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, remove block b1 from block b5, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, remove block b1 from block b5, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "aa2f60ce-705e-42eb-ae3e-c21e4a5068fe", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b9, b3 and b2, is not defined? Write None if all are defined.", "answer": "b9", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b9, b3 and b2, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "b3"}
{"id": "43d02895-7141-4485-aa1b-589ef8e5a31f", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b4, b6, b1, b3 and b8, is not defined? Write None if all are defined.", "answer": "b8", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b4, b6, b1, b3 and b8, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "b3"}
{"id": "fd04f317-51f1-4252-a664-896568ce5965", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b8, b1, b9, b2 and b3, is not defined? Write None if all are defined.", "answer": "b9", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b8, b1, b9, b2 and b3, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "b9"}
{"id": "d45ee445-3953-4252-abce-a639bfff23e1", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b4 is on the table, block b2 is on the table, block b5 is clear, block b2 is clear, block b6 is on block b7, block b8 is on the table, block b5 is on block b6, block b1 is clear, block b1 is on block b8 and block b3 is under the table, is not defined? Write None if all are defined.", "answer": "block b3 is under the table", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b4 is on the table, block b2 is on the table, block b5 is clear, block b2 is clear, block b6 is on block b7, block b8 is on the table, block b5 is on block b6, block b1 is clear, block b1 is on block b8 and block b3 is under the table, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b3 is under the table"}
{"id": "5b000fa2-098f-47ca-93af-c5af84a620c8", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is on block b3, block b3 is on the table and hand is empty, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is on block b3, block b3 is on the table and hand is empty, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "e3aa83ec-da0e-4cf3-80ca-1a91e3f66c81", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b2 is on the table, block b4 is clear, block b7 is on block b3, block b3 is on the table, block b5 is on block b6, block b1 is clear, block b5 is clear, block b6 is on block b7, block b8 is on the table, block b2 is clear and hand is empty, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b2 is on the table, block b4 is clear, block b7 is on block b3, block b3 is on the table, block b5 is on block b6, block b1 is clear, block b5 is clear, block b6 is on block b7, block b8 is on the table, block b2 is clear and hand is empty, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b8 is on the table"}
{"id": "a566c42f-e33e-43df-b1ea-c0f009fce4bf", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b2 is not on block b3, block b5 is not on block b7, block b8 is not on block b3, block b8 is not on block b6, block b2 is not on block b8, block b6 is not on block b4, block b6 is not on the table, block b1 is not on block b4, block b7 is not being held, block b4 is not on block b1, block b8 is not on block b5, block b8 is not on block b4, block b5 is not on the table, block b5 is not on block b3, block b7 is not on block b8, block b7 is not on block b2, block b2 is not on block b6, block b6 is not on block b1, block b5 is not on block b8, block b5 is not on block b4, block b5 is not on block b2, block b6 is not on block b3, block b5 is not on block b1, block b3 is not being held, block b8 is not being held, block b3 is not on block b2, block b1 is not on block b6, block b6 is not on block b8, block b4 is not on block b8, block b6 is not on block b5, block b2 is not on block b4, block b4 is not on block b2, block b1 is not on block b2, block b3 is not clear, block b7 is not clear, block b7 is not on block b4, block b3 is not on block b5, block b6 is not on block b2, block b1 is not on the table, block b3 is not on block b7, block b4 is not being held, block b1 is not on block b3, block b3 is not on block b4, block b5 is not being held, block b7 is not on the table, block b2 is not being held, block b2 is not on block b7, block b4 is not on block b3, block b6 is not being held and block b8 is not on block b1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b2 is not on block b3, block b5 is not on block b7, block b8 is not on block b3, block b8 is not on block b6, block b2 is not on block b8, block b6 is not on block b4, block b6 is not on the table, block b1 is not on block b4, block b7 is not being held, block b4 is not on block b1, block b8 is not on block b5, block b8 is not on block b4, block b5 is not on the table, block b5 is not on block b3, block b7 is not on block b8, block b7 is not on block b2, block b2 is not on block b6, block b6 is not on block b1, block b5 is not on block b8, block b5 is not on block b4, block b5 is not on block b2, block b6 is not on block b3, block b5 is not on block b1, block b3 is not being held, block b8 is not being held, block b3 is not on block b2, block b1 is not on block b6, block b6 is not on block b8, block b4 is not on block b8, block b6 is not on block b5, block b2 is not on block b4, block b4 is not on block b2, block b1 is not on block b2, block b3 is not clear, block b7 is not clear, block b7 is not on block b4, block b3 is not on block b5, block b6 is not on block b2, block b1 is not on the table, block b3 is not on block b7, block b4 is not being held, block b1 is not on block b3, block b3 is not on block b4, block b5 is not being held, block b7 is not on the table, block b2 is not being held, block b2 is not on block b7, block b4 is not on block b3, block b6 is not being held and block b8 is not on block b1, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b3 is not clear"}
{"id": "aa14e905-f285-4b45-bb60-8992492ce36d", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b1 is not under block b7, block b3 is not on block b2 and block b4 is not on block b3, is not defined? Write None if all are defined.", "answer": "block b1 is not under block b7", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b1 is not under block b7, block b3 is not on block b2 and block b4 is not on block b3, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b4 is not on block b3"}
{"id": "bfe7c75f-9edb-4c3e-ae7b-5d44003707ed", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b8 is not on block b4, block b6 is not on block b1, block b2 is not on block b5, block b7 is not on block b1, block b8 is not being held, block b8 is not on block b5, block b4 is not on block b2, block b2 is not under block b3, block b1 is not on the table, block b4 is not being held, block b3 is not on block b6, block b2 is not on block b4, block b8 is not clear, block b7 is not clear, block b6 is not on block b5, block b8 is not on block b6, block b4 is not on block b7, block b1 is not being held, block b2 is not on block b6, block b7 is not on block b8, block b1 is not on block b3, block b6 is not on block b4, block b7 is not being held, block b3 is not clear, block b5 is not on block b4, block b6 is not on block b8, block b4 is not on block b3, block b5 is not on block b1, block b1 is not on block b5, block b1 is not on block b4 and block b8 is not on block b1, is not defined? Write None if all are defined.", "answer": "block b2 is not under block b3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b8 is not on block b4, block b6 is not on block b1, block b2 is not on block b5, block b7 is not on block b1, block b8 is not being held, block b8 is not on block b5, block b4 is not on block b2, block b2 is not under block b3, block b1 is not on the table, block b4 is not being held, block b3 is not on block b6, block b2 is not on block b4, block b8 is not clear, block b7 is not clear, block b6 is not on block b5, block b8 is not on block b6, block b4 is not on block b7, block b1 is not being held, block b2 is not on block b6, block b7 is not on block b8, block b1 is not on block b3, block b6 is not on block b4, block b7 is not being held, block b3 is not clear, block b5 is not on block b4, block b6 is not on block b8, block b4 is not on block b3, block b5 is not on block b1, block b1 is not on block b5, block b1 is not on block b4 and block b8 is not on block b1, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b8 is not on block b2"}
{"id": "b9c31372-a158-4d99-80fc-1e09060ff17b", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "c2d31ff5-f9ae-455a-b97a-71c39a65e1d8", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, lower block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "lower block b2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, lower block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "Lower block b2"}
{"id": "b679ac6f-83d2-4233-b673-f15bfcd650b4", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, remove block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "remove block b8 from block b2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, remove block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1 and stack block b1 on block b8 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "bfef1085-3e6a-4c49-ae01-1f9c5f7b85a2", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b4 is part of the state?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b4 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "b01aec76-76b2-4a2c-a487-2c882617ecad", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b6 is part of the state?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b6 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "d64b864d-e9b2-4935-a46d-04a2a139c20c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b9 is part of the state?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b9 is part of the state?\n\n[ANSWER]:\n", "response": "False"}
{"id": "8c0ec342-e9f1-4b59-afc4-ac96311746c4", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is under block b2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is under block b2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "fc020bca-4a11-4a93-ac35-d1fb5a3ec2df", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is under block b8?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is under block b8?\n\n[ANSWER]:\n", "response": "True"}
{"id": "fdf62af0-ce72-46f9-a571-7f1bf98a864d", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is lost?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is lost?\n\n[ANSWER]:\n", "response": "False"}
{"id": "e367cde8-cb86-4ffe-9cc7-0ec44d19e21a", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is not under block b6?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is not under block b6?\n\n[ANSWER]:\n", "response": "True"}
{"id": "c6b4ab55-301d-4636-a29b-e2fbc8205fdf", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is not under block b5?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is not under block b5?\n\n[ANSWER]:\n", "response": "True"}
{"id": "e74eff0e-7278-4468-abea-b40be14a4df9", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is not under block b4?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is not under block b4?\n\n[ANSWER]:\n", "response": "True"}
{"id": "5f18e883-1f14-4f41-a372-895816d860fb", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b7 from block b3, is defined?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b7 from block b3, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "58f46816-8dd2-45ac-816c-b5b535ddbdcd", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, stack block b7 on block b3, is defined?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, stack block b7 on block b3, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "c58115aa-d152-40a4-a018-e3c1e28c20ba", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, stack block b7 on block b6, is defined?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, stack block b7 on block b6, is defined?\n\n[ANSWER]:\n", "response": "True"}
{"id": "56ee9c48-53fb-4e9b-93b3-711d8bbd79df", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b4 from block b1, is defined?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b4 from block b1, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "446935ca-4059-41ba-b533-57b261de068f", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, remove block b4 from block b2, is defined?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, remove block b4 from block b2, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "165fec2a-4af7-4f56-b0dc-5735ea2afb11", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b7 from block b1, is defined?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b7 from block b1, is defined?\n\n[ANSWER]:\n", "response": "False."}
{"id": "6e46238e-85ea-4e07-9858-907e09d38e70", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b9, b3, b2, b5, b4 and b1, is not defined? Write None if all are defined.", "answer": "b9", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b9, b3, b2, b5, b4 and b1, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "f29797ee-bf4e-413d-bc73-6d9fbe87299c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b3, b2, b6, b1, b7 and b4, is not defined? Write None if all are defined.", "answer": "b2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b3, b2, b6, b1, b7 and b4, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "21e911cb-876c-4711-bcf5-31bc45297859", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b8, b7, b5, b3 and b9, is not defined? Write None if all are defined.", "answer": "b9", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b8, b7, b5, b3 and b9, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "b9"}
{"id": "c3eef2fd-da1e-451a-8793-148011e944a8", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b8 is on the table, block b7 is being held, block b6 is on block b2, block b5 is on block b4, block b2 is on the table, block b3 is on the table and block b1 is clear, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b8 is on the table, block b7 is being held, block b6 is on block b2, block b5 is on block b4, block b2 is on the table, block b3 is on the table and block b1 is clear, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "Block b3 is on the table"}
{"id": "64fafb96-9c28-41a4-9d85-a174b3409760", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b8 is under the table, block b3 is clear, block b3 is on the table, block b5 is clear and block b1 is on block b8, is not defined? Write None if all are defined.", "answer": "block b8 is under the table", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b8 is under the table, block b3 is clear, block b3 is on the table, block b5 is clear and block b1 is on block b8, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b3 is clear"}
{"id": "9acc2a29-27b9-477d-a9a3-0a4429c8767c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b1 is lost, block b2 is on the table, block b5 is clear, block b8 is on the table, block b5 is on block b4 and block b3 is on the table, is not defined? Write None if all are defined.", "answer": "block b1 is lost", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b1 is lost, block b2 is on the table, block b5 is clear, block b8 is on the table, block b5 is on block b4 and block b3 is on the table, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "Block b2 is on the table"}
{"id": "3f6c0ac9-b1e8-49e4-b548-523a4066a8b0", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on block b6, block b3 is not on block b1, block b6 is not on block b3, block b4 is not on block b8, block b5 is not on block b1, block b7 is not on block b8, block b4 is not being held, block b7 is not on the table, block b6 is not being held, block b8 is not clear, block b6 is not on block b8, block b3 is not being held, block b1 is not being held, block b7 is not on block b5, block b1 is not on block b3, block b1 is not on block b6, block b8 is not on block b4, block b1 is not on block b4, block b6 is not on block b4, block b6 is not on block b5, block b7 is not on block b3, block b8 is not on block b7, block b8 is not on block b6, block b7 is not on block b4, block b5 is not on block b7, block b4 is not on block b1, block b3 is not on block b4, block b7 is not clear, block b2 is not on block b6, block b3 is not on block b7, block b2 is not on block b1, block b7 is not on block b1, block b4 is not on block b6, block b4 is not on block b5 and block b5 is not being held, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on block b6, block b3 is not on block b1, block b6 is not on block b3, block b4 is not on block b8, block b5 is not on block b1, block b7 is not on block b8, block b4 is not being held, block b7 is not on the table, block b6 is not being held, block b8 is not clear, block b6 is not on block b8, block b3 is not being held, block b1 is not being held, block b7 is not on block b5, block b1 is not on block b3, block b1 is not on block b6, block b8 is not on block b4, block b1 is not on block b4, block b6 is not on block b4, block b6 is not on block b5, block b7 is not on block b3, block b8 is not on block b7, block b8 is not on block b6, block b7 is not on block b4, block b5 is not on block b7, block b4 is not on block b1, block b3 is not on block b4, block b7 is not clear, block b2 is not on block b6, block b3 is not on block b7, block b2 is not on block b1, block b7 is not on block b1, block b4 is not on block b6, block b4 is not on block b5 and block b5 is not being held, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b4 is not on block b8"}
{"id": "6ff2e748-7313-43d9-b6d4-8f969cf08b0d", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not on block b1, block b1 is not on the table, block b3 is not on block b5, block b7 is not on block b4, block b5 is not on block b3, block b1 is not on block b2, block b8 is not on block b7, block b7 is not on block b2, block b7 is not on block b6, block b7 is not on block b5, block b6 is not being held, block b3 is not on block b1, block b2 is not on block b8, block b5 is not on block b8, block b5 is not on block b7, block b1 is not on block b4, block b2 is not on block b3, block b7 is not on block b1, hand is not empty, block b2 is not on block b7, block b3 is not on block b8, block b1 is not on block b6, block b2 is not clear, block b1 is not being thrown, block b1 is not on block b7, block b5 is not being held, block b8 is not on block b5, block b3 is not on block b2, block b8 is not on block b2, block b8 is not on block b6, block b3 is not being held, block b4 is not on block b3, block b3 is not on block b4, block b2 is not on block b5, block b4 is not clear, block b2 is not being held, block b4 is not on block b6, block b6 is not on block b4, block b6 is not on block b5, block b5 is not on block b1, block b3 is not on block b7, block b2 is not on block b4, block b8 is not on block b1, block b5 is not on the table, block b8 is not being held, block b4 is not on block b8, block b4 is not on block b7 and block b6 is not on the table, is not defined? Write None if all are defined.", "answer": "block b1 is not being thrown", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not on block b1, block b1 is not on the table, block b3 is not on block b5, block b7 is not on block b4, block b5 is not on block b3, block b1 is not on block b2, block b8 is not on block b7, block b7 is not on block b2, block b7 is not on block b6, block b7 is not on block b5, block b6 is not being held, block b3 is not on block b1, block b2 is not on block b8, block b5 is not on block b8, block b5 is not on block b7, block b1 is not on block b4, block b2 is not on block b3, block b7 is not on block b1, hand is not empty, block b2 is not on block b7, block b3 is not on block b8, block b1 is not on block b6, block b2 is not clear, block b1 is not being thrown, block b1 is not on block b7, block b5 is not being held, block b8 is not on block b5, block b3 is not on block b2, block b8 is not on block b2, block b8 is not on block b6, block b3 is not being held, block b4 is not on block b3, block b3 is not on block b4, block b2 is not on block b5, block b4 is not clear, block b2 is not being held, block b4 is not on block b6, block b6 is not on block b4, block b6 is not on block b5, block b5 is not on block b1, block b3 is not on block b7, block b2 is not on block b4, block b8 is not on block b1, block b5 is not on the table, block b8 is not being held, block b4 is not on block b8, block b4 is not on block b7 and block b6 is not on the table, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b1 is not being thrown"}
{"id": "4521a800-5481-4403-908e-cdead2e48685", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not on block b7, block b4 is not on block b2, block b6 is not on block b8, block b4 is not being held, hand is not empty, block b7 is not clear, block b3 is not under block b6, block b8 is not on block b5, block b8 is not on block b1, block b7 is not on block b3, block b4 is not on block b7, block b1 is not on the table, block b5 is not on block b1, block b4 is not on block b8, block b1 is not on block b4, block b3 is not on block b1, block b5 is not on block b8, block b4 is not on block b6, block b5 is not on block b6, block b5 is not on block b7, block b3 is not being held, block b3 is not on block b4, block b2 is not on block b1, block b8 is not on block b6, block b7 is not on block b8, block b4 is not on block b1, block b8 is not being held, block b7 is not on the table, block b5 is not on block b3, block b6 is not being held, block b6 is not on block b4, block b1 is not being held, block b2 is not on block b7, block b7 is not on block b6, block b1 is not on block b3, block b2 is not being held, block b7 is not on block b5, block b3 is not on block b8, block b1 is not on block b5, block b5 is not being held, block b1 is not on block b6, block b6 is not on block b1, block b4 is not on block b5, block b1 is not on block b7, block b2 is not on block b3, block b2 is not on block b8, block b6 is not on block b7, block b8 is not on block b3, block b8 is not on block b2, block b5 is not on the table, block b7 is not on block b4, block b8 is not clear, block b5 is not on block b2, block b2 is not on block b5, block b2 is not on block b6, block b7 is not on block b1, block b4 is not clear, block b2 is not on block b4, block b6 is not on the table and block b3 is not on block b5, is not defined? Write None if all are defined.", "answer": "block b3 is not under block b6", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not on block b7, block b4 is not on block b2, block b6 is not on block b8, block b4 is not being held, hand is not empty, block b7 is not clear, block b3 is not under block b6, block b8 is not on block b5, block b8 is not on block b1, block b7 is not on block b3, block b4 is not on block b7, block b1 is not on the table, block b5 is not on block b1, block b4 is not on block b8, block b1 is not on block b4, block b3 is not on block b1, block b5 is not on block b8, block b4 is not on block b6, block b5 is not on block b6, block b5 is not on block b7, block b3 is not being held, block b3 is not on block b4, block b2 is not on block b1, block b8 is not on block b6, block b7 is not on block b8, block b4 is not on block b1, block b8 is not being held, block b7 is not on the table, block b5 is not on block b3, block b6 is not being held, block b6 is not on block b4, block b1 is not being held, block b2 is not on block b7, block b7 is not on block b6, block b1 is not on block b3, block b2 is not being held, block b7 is not on block b5, block b3 is not on block b8, block b1 is not on block b5, block b5 is not being held, block b1 is not on block b6, block b6 is not on block b1, block b4 is not on block b5, block b1 is not on block b7, block b2 is not on block b3, block b2 is not on block b8, block b6 is not on block b7, block b8 is not on block b3, block b8 is not on block b2, block b5 is not on the table, block b7 is not on block b4, block b8 is not clear, block b5 is not on block b2, block b2 is not on block b5, block b2 is not on block b6, block b7 is not on block b1, block b4 is not clear, block b2 is not on block b4, block b6 is not on the table and block b3 is not on block b5, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b4 is not on block b2"}
{"id": "68961895-f226-4f33-ad22-8aef79ea4e43", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, remove block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "remove block b4 from block b8", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, remove block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "3a47dbca-574b-4a4e-bdd5-5d97a9234984", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, remove block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "remove block b5 from block b6", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, remove block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "781bcea8-7fcc-44a3-88f2-4bd95291ef32", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2 and unstack block b7 from block b3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "73db492d-199b-4953-9bbb-1be7c75cfa50", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b3 is part of the state?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b3 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "2f93579b-760c-4aab-8b5b-679215306e2f", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b9 is part of the state?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b9 is part of the state?\n\n[ANSWER]:\n", "response": "False"}
{"id": "7a714777-ece1-4ff8-9390-be1f1e0944df", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b6 is part of the state?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b6 is part of the state?\n\n[ANSWER]:\n", "response": "True"}
{"id": "60874851-12d0-4c78-be43-645847c2b14c", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is lost?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is lost?\n\n[ANSWER]:\n", "response": "False"}
{"id": "a0c9ed84-5276-4617-8632-66ec53fa5b41", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is on block b7?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is on block b7?\n\n[ANSWER]:\n", "response": "True"}
{"id": "f78b09ef-0290-49a6-b794-b277d161cbc1", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is clear?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is clear?\n\n[ANSWER]:\n", "response": "True"}
{"id": "e49a43aa-7ad0-4f54-941c-14db479ff6f7", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is not on the table?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is not on the table?\n\n[ANSWER]:\n", "response": "False"}
{"id": "ea478fa9-d273-4e21-8c5c-a7329f9678f5", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not on block b2?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not on block b2?\n\n[ANSWER]:\n", "response": "True"}
{"id": "d66a4f2b-da92-459d-bdd9-d91635c5fe1e", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is not under block b8?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is not under block b8?\n\n[ANSWER]:\n", "response": "True"}
{"id": "604f1a6b-cfa6-44e0-a812-46818b033ddd", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b3 from block b6, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, load block b3 from block b6, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "8c594343-2eaa-46d0-bada-398bbcb409d0", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, lower block b3, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, lower block b3, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "281e0b7b-8d00-4809-8d50-da7257254554", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, stack block b3 on block b1, is defined?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, stack block b3 on block b1, is defined?\n\n[ANSWER]:\n", "response": "True"}
{"id": "c76e134b-8b48-4c10-9cce-86dc2843161b", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b7 from block b3, is defined?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, unstack block b7 from block b3, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "ae1a9acd-78b1-4aa1-b84d-f6de0bb3346a", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, stack block b1 on block b5, is defined?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, stack block b1 on block b5, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "9eaff715-73d2-4e56-ab68-3d1b9f0e75c4", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, stack block b2 on block b7, is defined?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, stack block b2 on block b7, is defined?\n\n[ANSWER]:\n", "response": "False"}
{"id": "afead349-2ae2-4253-9fa4-05dfb4916159", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b2, b3, b5, b6 and b9, is not defined? Write None if all are defined.", "answer": "b9", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b2, b3, b5, b6 and b9, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "b9"}
{"id": "e9db0e89-e40e-49ee-bfe6-7687cfc26a05", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b4, b3, b5, b6 and b7, is not defined? Write None if all are defined.", "answer": "b4", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b4, b3, b5, b6 and b7, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "b3"}
{"id": "c6a0f947-89d3-4093-a7af-3443a2046f99", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b1, b8, b6, b2, b7 and b5, is not defined? Write None if all are defined.", "answer": "b2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b1, b8, b6, b2, b7 and b5, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "b7"}
{"id": "1fe52ad7-b9ad-4283-be87-eec76d740015", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is under the table, block b2 is on the table, block b6 is clear, block b3 is being held, block b8 is on the table, block b5 is on block b4 and block b6 is on block b7, is not defined? Write None if all are defined.", "answer": "block b7 is under the table", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is under the table, block b2 is on the table, block b6 is clear, block b3 is being held, block b8 is on the table, block b5 is on block b4 and block b6 is on block b7, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b3 is being held"}
{"id": "e4cacf53-9fbc-4775-aa96-20325bee3950", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b1 is on block b8, block b5 is on block b4, block b2 is on the table, block b6 is on block b7, block b1 is clear and block b2 is lost, is not defined? Write None if all are defined.", "answer": "block b2 is lost", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b1 is on block b8, block b5 is on block b4, block b2 is on the table, block b6 is on block b7, block b1 is clear and block b2 is lost, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b2 is lost"}
{"id": "5a7af206-c783-4391-96a1-e9798407d45a", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is under the table, block b4 is on the table and block b5 is on block b4, is not defined? Write None if all are defined.", "answer": "block b7 is under the table", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is under the table, block b4 is on the table and block b5 is on block b4, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "Block b4 is on the table"}
{"id": "4f687075-d12b-4604-bd33-1f35399732b4", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on block b8, block b2 is not on block b3, block b4 is not on block b8, block b1 is not on the table, block b8 is not on block b1, block b6 is not on block b3, block b7 is not on block b5, block b7 is not clear, block b6 is not on block b8, block b4 is not on block b5, block b4 is not on block b6, block b5 is not on block b7, block b2 is not on block b4, block b1 is not on block b2, block b7 is not being held, block b4 is not on block b7, block b1 is not on block b5, block b6 is not on block b1, block b4 is not on block b3, block b3 is not on block b2, block b1 is not on block b6, block b8 is not on block b7, block b2 is not on block b5, block b5 is not on block b6, block b2 is not on block b8, block b5 is not on block b1, block b1 is not on block b7, block b3 is not on block b8, block b6 is not on block b2, block b8 is not on block b2, block b3 is not clear, block b4 is not clear, block b7 is not on block b2, block b8 is not on block b6, block b3 is not on block b7, block b7 is not on block b3, block b2 is not on block b6, block b3 is not on block b4, block b8 is not being held, block b4 is not on block b1, block b3 is not on block b5, block b2 is not on block b7, block b5 is not on block b3, block b4 is not being held, block b3 is not on block b6, block b5 is not on block b2, hand is not empty, block b5 is not being held, block b7 is not on block b1, block b5 is not on the table, block b8 is not on block b4, block b1 is not on block b3, block b7 is not on block b8, block b6 is not on the table, block b6 is not on block b5, block b8 is not clear, block b8 is not on block b3, block b6 is not on block b4, block b7 is not on block b4, block b3 is not on block b1, block b2 is not on block b1, block b7 is not under block b6 and block b2 is not being held, is not defined? Write None if all are defined.", "answer": "block b7 is not under block b6", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on block b8, block b2 is not on block b3, block b4 is not on block b8, block b1 is not on the table, block b8 is not on block b1, block b6 is not on block b3, block b7 is not on block b5, block b7 is not clear, block b6 is not on block b8, block b4 is not on block b5, block b4 is not on block b6, block b5 is not on block b7, block b2 is not on block b4, block b1 is not on block b2, block b7 is not being held, block b4 is not on block b7, block b1 is not on block b5, block b6 is not on block b1, block b4 is not on block b3, block b3 is not on block b2, block b1 is not on block b6, block b8 is not on block b7, block b2 is not on block b5, block b5 is not on block b6, block b2 is not on block b8, block b5 is not on block b1, block b1 is not on block b7, block b3 is not on block b8, block b6 is not on block b2, block b8 is not on block b2, block b3 is not clear, block b4 is not clear, block b7 is not on block b2, block b8 is not on block b6, block b3 is not on block b7, block b7 is not on block b3, block b2 is not on block b6, block b3 is not on block b4, block b8 is not being held, block b4 is not on block b1, block b3 is not on block b5, block b2 is not on block b7, block b5 is not on block b3, block b4 is not being held, block b3 is not on block b6, block b5 is not on block b2, hand is not empty, block b5 is not being held, block b7 is not on block b1, block b5 is not on the table, block b8 is not on block b4, block b1 is not on block b3, block b7 is not on block b8, block b6 is not on the table, block b6 is not on block b5, block b8 is not clear, block b8 is not on block b3, block b6 is not on block b4, block b7 is not on block b4, block b3 is not on block b1, block b2 is not on block b1, block b7 is not under block b6 and block b2 is not being held, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b7 is not under block b6"}
{"id": "4e1a06d1-d58b-454f-8811-fc42f866dd28", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not on the table, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b3, block b1 is not on the table, block b7 is not on block b1, block b3 is not on block b6, block b4 is not on block b8, block b5 is not being held, block b5 is not on block b8, block b5 is not on block b1, block b6 is not being held, block b8 is not on block b5, block b7 is not on block b6, block b2 is not on block b3, block b1 is not on block b3, block b5 is not on block b6, block b2 is not on block b1, block b4 is not on block b3, block b8 is not on block b4, block b4 is not clear, block b8 is not on block b3, block b7 is not on block b3, block b8 is not on block b6, block b4 is not on block b5, block b1 is not on block b2, block b7 is not being held, block b7 is not on block b4, block b7 is not on block b5, block b6 is not on block b3, block b2 is not on block b6, block b5 is not on the table, block b1 is not on block b7, block b5 is not on block b7, block b3 is not on block b7, block b6 is not on the table, block b6 is not on block b4, block b1 is not on block b5, block b3 is not on block b2, block b1 is not being held, block b5 is not on block b2, block b1 is not on block b4, block b2 is not on block b8, block b7 is not clear, block b7 is not on block b2, block b4 is not on block b2, block b8 is not on block b1, block b1 is not on block b6, block b2 is not on block b4, block b2 is not being held and block b3 is not on block b1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not on the table, block b7 is not on block b8, block b2 is not on block b7, block b5 is not on block b3, block b1 is not on the table, block b7 is not on block b1, block b3 is not on block b6, block b4 is not on block b8, block b5 is not being held, block b5 is not on block b8, block b5 is not on block b1, block b6 is not being held, block b8 is not on block b5, block b7 is not on block b6, block b2 is not on block b3, block b1 is not on block b3, block b5 is not on block b6, block b2 is not on block b1, block b4 is not on block b3, block b8 is not on block b4, block b4 is not clear, block b8 is not on block b3, block b7 is not on block b3, block b8 is not on block b6, block b4 is not on block b5, block b1 is not on block b2, block b7 is not being held, block b7 is not on block b4, block b7 is not on block b5, block b6 is not on block b3, block b2 is not on block b6, block b5 is not on the table, block b1 is not on block b7, block b5 is not on block b7, block b3 is not on block b7, block b6 is not on the table, block b6 is not on block b4, block b1 is not on block b5, block b3 is not on block b2, block b1 is not being held, block b5 is not on block b2, block b1 is not on block b4, block b2 is not on block b8, block b7 is not clear, block b7 is not on block b2, block b4 is not on block b2, block b8 is not on block b1, block b1 is not on block b6, block b2 is not on block b4, block b2 is not being held and block b3 is not on block b1, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b5 is not on the table"}
{"id": "f9c4d49e-5fc3-400b-9eed-8ff0563ca3ef", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b4 is not on block b6, block b2 is not on block b5, block b5 is not on block b3, block b3 is not on block b6, block b5 is not on the table, block b8 is not clear, block b3 is not on the table, block b1 is not under the table, block b1 is not on block b5, block b3 is not on block b7, block b7 is not on block b1, block b8 is not on block b5, block b8 is not on block b7, block b2 is not on block b3, block b7 is not on block b3, block b1 is not on block b2, block b8 is not on block b4, block b6 is not on block b4, block b2 is not on block b4, block b6 is not being held, block b8 is not on block b1, block b2 is not on block b7, block b5 is not on block b8, block b8 is not on block b3, block b8 is not on block b6, block b6 is not on block b3, block b8 is not on block b2, block b4 is not on block b5, block b1 is not on block b3 and block b4 is not being held, is not defined? Write None if all are defined.", "answer": "block b1 is not under the table", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b4 is not on block b6, block b2 is not on block b5, block b5 is not on block b3, block b3 is not on block b6, block b5 is not on the table, block b8 is not clear, block b3 is not on the table, block b1 is not under the table, block b1 is not on block b5, block b3 is not on block b7, block b7 is not on block b1, block b8 is not on block b5, block b8 is not on block b7, block b2 is not on block b3, block b7 is not on block b3, block b1 is not on block b2, block b8 is not on block b4, block b6 is not on block b4, block b2 is not on block b4, block b6 is not being held, block b8 is not on block b1, block b2 is not on block b7, block b5 is not on block b8, block b8 is not on block b3, block b8 is not on block b6, block b6 is not on block b3, block b8 is not on block b2, block b4 is not on block b5, block b1 is not on block b3 and block b4 is not being held, is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "block b7 is not on block b1"}
{"id": "00d7e8f8-05be-4ba8-b367-1459f7349641", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, load block b5 from block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "load block b5 from block b6", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, load block b5 from block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "23431442-3a0a-4352-99b6-53e7b242e3df", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, stack block b5 on block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
{"id": "ddcb0528-7415-456d-8e53-a91011adf5ec", "domain_name": "blocksworld", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, load block b5 from block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "load block b5 from block b4", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["clear(b5)", "clear(b6)", "on(b8,b2)", "on(b4,b8)", "on(b5,b4)", "on(b7,b3)", "on(b6,b7)", "ontable(b3)", "handempty", "ontable(b1)", "on(b2,b1)"], "neg_fluents": ["-on(b8,b5)", "-on(b5,b3)", "-on(b2,b5)", "-on(b5,b1)", "-clear(b8)", "-on(b2,b3)", "-on(b5,b7)", "-ontable(b2)", "-on(b6,b8)", "-ontable(b6)", "-on(b2,b4)", "-holding(b2)", "-on(b4,b6)", "-on(b2,b6)", "-clear(b3)", "-on(b4,b5)", "-clear(b4)", "-ontable(b7)", "-on(b7,b5)", "-on(b8,b3)", "-on(b1,b2)", "-holding(b6)", "-on(b8,b1)", "-on(b8,b4)", "-on(b1,b8)", "-on(b7,b2)", "-on(b3,b4)", "-on(b1,b3)", "-on(b7,b1)", "-ontable(b4)", "-clear(b1)", "-on(b7,b8)", "-on(b2,b7)", "-on(b5,b8)", "-on(b1,b7)", "-on(b5,b2)", "-holding(b8)", "-on(b6,b3)", "-on(b2,b8)", "-ontable(b5)", "-on(b3,b5)", "-on(b6,b4)", "-holding(b4)", "-clear(b2)", "-on(b1,b5)", "-holding(b7)", "-holding(b1)", "-on(b3,b1)", "-on(b6,b5)", "-ontable(b8)", "-on(b4,b3)", "-on(b3,b2)", "-on(b3,b8)", "-on(b4,b1)", "-on(b3,b6)", "-on(b5,b6)", "-on(b6,b1)", "-on(b4,b7)", "-on(b3,b7)", "-holding(b3)", "-on(b7,b6)", "-on(b1,b4)", "-on(b8,b7)", "-clear(b7)", "-on(b4,b2)", "-on(b1,b6)", "-on(b6,b2)", "-on(b8,b6)", "-on(b7,b4)", "-holding(b5)"], "objects": {"block": ["b5", "b8", "b4", "b3", "b6", "b2", "b1", "b7"]}, "executable?": true}, "action_sequence": ["action_unstack(b5,b4)", "action_stack(b5,b6)", "action_unstack(b4,b8)", "action_put_down(b4)", "action_unstack(b8,b2)", "action_put_down(b8)", "action_unstack(b2,b1)", "action_put_down(b2)", "action_pick_up(b1)", "action_stack(b1,b8)", "action_unstack(b5,b6)", "action_stack(b5,b4)", "action_unstack(b6,b7)", "action_stack(b6,b2)", "action_unstack(b7,b3)", "action_put_down(b7)", "action_unstack(b6,b2)", "action_stack(b6,b7)", "action_pick_up(b3)", "action_stack(b3,b6)"], "prompt": "Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.\n\n[INITIAL CONDITIONS]\nInitially, block b5 is clear, block b6 is clear, block b8 is on block b2, block b4 is on block b8, block b5 is on block b4, block b7 is on block b3, block b6 is on block b7, block b3 is on the table, hand is empty, block b1 is on the table and block b2 is on block b1\n\n[QUESTION]\nGiven the initial condition, the following actions are planned to be performed: unstack block b5 from block b4, stack block b5 on block b6, unstack block b4 from block b8, put down block b4, unstack block b8 from block b2, put down block b8, unstack block b2 from block b1, put down block b2, pickup block b1, stack block b1 on block b8, unstack block b5 from block b6, load block b5 from block b4, unstack block b6 from block b7, stack block b6 on block b2, unstack block b7 from block b3, put down block b7, unstack block b6 from block b2, stack block b6 on block b7 and pickup block b3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.\n\n[ANSWER]:\n", "response": "None"}
